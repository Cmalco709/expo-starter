{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _excluded = [\"style\", \"placeholderTextColor\", \"multiline\", \"numberOfLines\", \"expandable\", \"rightIconSource\", \"color\", \"placeholder\", \"helperText\"],\n  _excluded2 = [\"lineHeight\"],\n  _excluded3 = [\"style\", \"iconSource\", \"iconColor\", \"accessibilityLabel\"];\nvar _jsxFileName = \"/workspaces/expo-starter/node_modules/react-native-ui-lib/src/components/textField/index.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport _get from \"lodash/get\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _isFunction from \"lodash/isFunction\";\nimport _isPlainObject from \"lodash/isPlainObject\";\nimport _isString from \"lodash/isString\";\nimport _invoke from \"lodash/invoke\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport RNTextInput from \"react-native-web/dist/exports/TextInput\";\nimport { TextInputPropTypes, ImagePropTypes } from 'deprecated-react-native-prop-types';\nimport memoize from 'memoize-one';\nimport { Constants } from \"../../commons/new\";\nimport { Colors, Typography, Spacings } from \"../../style\";\nimport BaseInput from \"../baseInput\";\nimport Modal from \"../modal\";\nimport TextArea from \"../textArea\";\nimport View from \"../view\";\nimport Image from \"../image\";\nimport Text from \"../text\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar COLOR_BY_STATE = {\n  default: Colors.grey10,\n  focus: Colors.grey10,\n  error: Colors.grey10,\n  disabled: Colors.grey50\n};\nvar UNDERLINE_COLOR_BY_STATE = {\n  default: Colors.grey50,\n  focus: Colors.$outlinePrimary,\n  error: Colors.red30\n};\nvar PLACEHOLDER_COLOR_BY_STATE = {\n  default: Colors.grey30,\n  focus: Colors.$textPrimary\n};\nvar CHAR_COUNTER_COLOR_BY_STATE = {\n  default: Colors.grey30,\n  error: Colors.red30\n};\nvar LABEL_TYPOGRAPHY = Typography.text80;\nvar ICON_SIZE = 24;\nvar ICON_LEFT_PADDING = 6;\nvar FLOATING_PLACEHOLDER_SCALE = 0.875;\nvar TextField = function (_BaseInput) {\n  function TextField(props) {\n    var _this;\n    _classCallCheck(this, TextField);\n    _this = _callSuper(this, TextField, [props]);\n    _this.onPlaceholderLayout = function (event) {\n      var width = event.nativeEvent.layout.width;\n      var translate = width / 2 - width * FLOATING_PLACEHOLDER_SCALE / 2;\n      _this.setState({\n        floatingPlaceholderTranslate: translate / FLOATING_PLACEHOLDER_SCALE\n      });\n    };\n    _this.toggleExpandableModal = function (value) {\n      _this.setState({\n        showExpandableModal: value\n      });\n      _invoke(_this.props, 'onToggleExpandableModal', value);\n    };\n    _this.updateFloatingPlaceholderState = function (withoutAnimation) {\n      if (withoutAnimation) {\n        _this.state.floatingPlaceholderState.setValue(_this.shouldFloatPlaceholder() ? 1 : 0);\n      } else {\n        Animated.spring(_this.state.floatingPlaceholderState, {\n          toValue: _this.shouldFloatPlaceholder() ? 1 : 0,\n          duration: 150,\n          useNativeDriver: true\n        }).start();\n      }\n    };\n    _this.getPlaceholderText = memoize(function (placeholder, helperText) {\n      var text = _this.shouldFakePlaceholder() ? _this.shouldShowHelperText() ? helperText : ' ' : _this.shouldShowTopError() && _this.shouldShowHelperText() ? helperText : _this.getRequiredPlaceholder(placeholder);\n      return text;\n    });\n    _this.onPressRightButton = function () {\n      _invoke(_this.props, 'rightButtonProps.onPress');\n    };\n    _this.onDoneEditingExpandableInput = function () {\n      var expandableInputValue = _get(_this.expandableInput, 'state.value');\n      _this.setState({\n        value: expandableInputValue\n      });\n      _this.state.floatingPlaceholderState.setValue(expandableInputValue ? 1 : 0);\n      _invoke(_this.props, 'onChangeText', expandableInputValue);\n      _this.toggleExpandableModal(false);\n    };\n    _this.onKeyPress = function (event) {\n      _this.lastKey = event.nativeEvent.key;\n      _this.setCharCountColor(_this.lastKey);\n      _invoke(_this.props, 'onKeyPress', event);\n    };\n    _this.onChangeText = function (text) {\n      if (text === '' && _this.lastKey && _this.lastKey !== Constants.backspaceKey) {\n        return;\n      }\n      var _this$props = _this.props,\n        transformer = _this$props.transformer,\n        validateOnChange = _this$props.validateOnChange;\n      var transformedText = text;\n      if (_isFunction(transformer)) {\n        transformedText = transformer(text);\n      }\n      _invoke(_this.props, 'onChangeText', transformedText);\n      _this.setState({\n        value: transformedText\n      }, function () {\n        if (validateOnChange) {\n          setImmediate(_this.validate);\n        }\n      });\n    };\n    _this.state = _objectSpread(_objectSpread({}, _this.state), {}, {\n      value: props.value,\n      floatingPlaceholderState: new Animated.Value(_this.shouldFloatPlaceholder(props.value) ? 1 : 0),\n      showExpandableModal: false,\n      floatingPlaceholderTranslate: 0,\n      charCountColor: CHAR_COUNTER_COLOR_BY_STATE.default\n    });\n    _this.generatePropsWarnings(props);\n    return _this;\n  }\n  _inherits(TextField, _BaseInput);\n  return _createClass(TextField, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n      if (nextProps.value !== this.props.value) {\n        this.setState({\n          value: nextProps.value\n        }, function () {\n          _this2.updateFloatingPlaceholderState();\n          if (nextProps.validateOnChange) {\n            _this2.validate();\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_prevProps, prevState) {\n      if (_isEmpty(prevState.value) !== _isEmpty(this.state.value) || prevState.focused !== this.state.focused) {\n        this.updateFloatingPlaceholderState();\n      }\n    }\n  }, {\n    key: \"generatePropsWarnings\",\n    value: function generatePropsWarnings(props) {\n      if (props.maxLength === 0) {\n        console.warn('Setting maxLength to zero will block typing in this input');\n      }\n      if (props.showCharacterCounter && !props.maxLength) {\n        console.warn('In order to use showCharacterCount please pass \\'maxLength\\' prop');\n      }\n    }\n  }, {\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = createStyles(this.getThemeProps(), this.getTopPaddings());\n    }\n  }, {\n    key: \"getAccessibilityInfo\",\n    value: function getAccessibilityInfo() {\n      var _this$getThemeProps = this.getThemeProps(),\n        floatingPlaceholder = _this$getThemeProps.floatingPlaceholder,\n        placeholder = _this$getThemeProps.placeholder;\n      var accessibilityState = this.isDisabled() ? {\n        disabled: true\n      } : undefined;\n      var accessibilityLabel = floatingPlaceholder ? this.props.accessibilityLabel || placeholder : '';\n      if (this.isRequiredField()) {\n        accessibilityLabel = `${accessibilityLabel}. Mandatory`;\n      }\n      return {\n        accessibilityLabel: accessibilityLabel,\n        accessibilityState: Constants.isIOS ? accessibilityState : undefined\n      };\n    }\n  }, {\n    key: \"getStateColor\",\n    value: function getStateColor() {\n      var colorProp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var focused = this.state.focused;\n      var error = this.getErrorMessage();\n      var _this$getThemeProps2 = this.getThemeProps(),\n        disabledColor = _this$getThemeProps2.disabledColor;\n      if (_isString(colorProp)) {\n        return colorProp || Colors.grey10;\n      } else if (_isPlainObject(colorProp)) {\n        var mergedColorState = _objectSpread(_objectSpread({}, COLOR_BY_STATE), colorProp);\n        if (this.isDisabled()) {\n          return disabledColor || mergedColorState.disabled;\n        } else if (error) {\n          return mergedColorState.error;\n        } else if (focused) {\n          return mergedColorState.focus;\n        } else {\n          return mergedColorState.default;\n        }\n      }\n      return colorProp || Colors.grey10;\n    }\n  }, {\n    key: \"getCharCount\",\n    value: function getCharCount() {\n      var value = this.state.value;\n      if (value) {\n        return value.length;\n      }\n      return 0;\n    }\n  }, {\n    key: \"setCharCountColor\",\n    value: function setCharCountColor(key) {\n      this.maxReached = key === Constants.backspaceKey ? false : this.isCounterLimit();\n      var color = this.state.focused && this.maxReached ? CHAR_COUNTER_COLOR_BY_STATE.error : CHAR_COUNTER_COLOR_BY_STATE.default;\n      if (color !== this.state.charCountColor) {\n        this.setState({\n          charCountColor: color\n        });\n      }\n    }\n  }, {\n    key: \"getCharCountColor\",\n    value: function getCharCountColor() {\n      var charCountColor = this.state.charCountColor;\n      var _this$getThemeProps3 = this.getThemeProps(),\n        disabledColor = _this$getThemeProps3.disabledColor;\n      return this.isDisabled() && disabledColor ? disabledColor : charCountColor;\n    }\n  }, {\n    key: \"getTopPaddings\",\n    value: function getTopPaddings() {\n      return this.shouldFakePlaceholder() ? this.shouldShowTopError() ? undefined : 25 : undefined;\n    }\n  }, {\n    key: \"getTopErrorsPosition\",\n    value: function getTopErrorsPosition() {\n      return !this.props.title && this.shouldShowTopError() ? {\n        top: Constants.isIOS ? -25 : -27\n      } : undefined;\n    }\n  }, {\n    key: \"isDisabled\",\n    value: function isDisabled() {\n      return this.props.editable === false;\n    }\n  }, {\n    key: \"isCounterLimit\",\n    value: function isCounterLimit() {\n      var _this$getThemeProps4 = this.getThemeProps(),\n        maxLength = _this$getThemeProps4.maxLength;\n      var counter = this.getCharCount();\n      return counter === 0 ? false : maxLength <= counter;\n    }\n  }, {\n    key: \"hasText\",\n    value: function hasText(value) {\n      return !_isEmpty(value || this.state.value);\n    }\n  }, {\n    key: \"shouldShowHelperText\",\n    value: function shouldShowHelperText() {\n      var focused = this.state.focused;\n      var helperText = this.props.helperText;\n      return focused && helperText;\n    }\n  }, {\n    key: \"shouldFloatOnFocus\",\n    value: function shouldFloatOnFocus() {\n      var focused = this.state.focused;\n      var _this$getThemeProps5 = this.getThemeProps(),\n        floatOnFocus = _this$getThemeProps5.floatOnFocus;\n      return focused && floatOnFocus;\n    }\n  }, {\n    key: \"shouldFloatPlaceholder\",\n    value: function shouldFloatPlaceholder(text) {\n      return this.hasText(text) || this.shouldShowHelperText() || this.shouldFloatOnFocus();\n    }\n  }, {\n    key: \"shouldFakePlaceholder\",\n    value: function shouldFakePlaceholder() {\n      var _this$getThemeProps6 = this.getThemeProps(),\n        floatingPlaceholder = _this$getThemeProps6.floatingPlaceholder,\n        centered = _this$getThemeProps6.centered,\n        leadingIcon = _this$getThemeProps6.leadingIcon,\n        prefix = _this$getThemeProps6.prefix;\n      return !leadingIcon && !prefix && Boolean(floatingPlaceholder && !centered && !this.shouldShowTopError());\n    }\n  }, {\n    key: \"shouldShowError\",\n    value: function shouldShowError() {\n      var _this$getThemeProps7 = this.getThemeProps(),\n        enableErrors = _this$getThemeProps7.enableErrors;\n      var error = this.getErrorMessage();\n      return enableErrors && error;\n    }\n  }, {\n    key: \"getErrorMessage\",\n    value: function getErrorMessage() {\n      var _this$props2, _this$state;\n      return ((_this$props2 = this.props) == null ? void 0 : _this$props2.error) || ((_this$state = this.state) == null ? void 0 : _this$state.error);\n    }\n  }, {\n    key: \"shouldShowTopError\",\n    value: function shouldShowTopError() {\n      var _this$getThemeProps8 = this.getThemeProps(),\n        useTopErrors = _this$getThemeProps8.useTopErrors;\n      return this.shouldShowError() && useTopErrors;\n    }\n  }, {\n    key: \"shouldDisplayRightButton\",\n    value: function shouldDisplayRightButton() {\n      var _this$getThemeProps9 = this.getThemeProps(),\n        rightButtonProps = _this$getThemeProps9.rightButtonProps,\n        expandable = _this$getThemeProps9.expandable;\n      return !expandable && rightButtonProps && rightButtonProps.iconSource;\n    }\n  }, {\n    key: \"shouldRenderTitle\",\n    value: function shouldRenderTitle() {\n      var _this$getThemeProps10 = this.getThemeProps(),\n        floatingPlaceholder = _this$getThemeProps10.floatingPlaceholder,\n        title = _this$getThemeProps10.title;\n      return !floatingPlaceholder && title;\n    }\n  }, {\n    key: \"renderPlaceholder\",\n    value: function renderPlaceholder() {\n      var _this$state2 = this.state,\n        floatingPlaceholderState = _this$state2.floatingPlaceholderState,\n        floatingPlaceholderTranslate = _this$state2.floatingPlaceholderTranslate;\n      var _this$getThemeProps11 = this.getThemeProps(),\n        placeholder = _this$getThemeProps11.placeholder,\n        placeholderTextColor = _this$getThemeProps11.placeholderTextColor,\n        floatingPlaceholderColor = _this$getThemeProps11.floatingPlaceholderColor,\n        floatingPlaceholderStyle = _this$getThemeProps11.floatingPlaceholderStyle;\n      var typography = this.getTypography();\n      var placeholderColor = this.getStateColor(placeholderTextColor || PLACEHOLDER_COLOR_BY_STATE.default);\n      if (this.shouldFakePlaceholder()) {\n        return _jsxDEV(View, {\n          absF: true,\n          left: true,\n          children: _jsxDEV(Animated.Text, {\n            pointerEvents: \"none\",\n            numberOfLines: 1,\n            suppressHighlighting: true,\n            accessible: false,\n            onLayout: this.onPlaceholderLayout,\n            style: [this.styles.placeholder, this.getTopErrorsPosition(), typography, {\n              lineHeight: undefined\n            }, {\n              transform: [{\n                scale: floatingPlaceholderState.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, FLOATING_PLACEHOLDER_SCALE]\n                })\n              }, {\n                translateY: floatingPlaceholderState.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [25, 0]\n                })\n              }, {\n                translateX: floatingPlaceholderState.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0, -floatingPlaceholderTranslate]\n                })\n              }],\n              color: this.shouldFloatPlaceholder() ? this.getStateColor(floatingPlaceholderColor || PLACEHOLDER_COLOR_BY_STATE) : placeholderColor\n            }, floatingPlaceholderStyle],\n            children: this.getRequiredPlaceholder(placeholder)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 14\n        }, this);\n      }\n    }\n  }, {\n    key: \"renderPrefix\",\n    value: function renderPrefix() {\n      var _this$props3 = this.props,\n        prefix = _this$props3.prefix,\n        prefixStyle = _this$props3.prefixStyle;\n      if (prefix) {\n        var typography = this.getTypography();\n        return _jsxDEV(Text, {\n          style: [this.styles.prefix, typography, {\n            lineHeight: undefined\n          }, prefixStyle],\n          children: prefix\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 14\n        }, this);\n      }\n    }\n  }, {\n    key: \"renderTitle\",\n    value: function renderTitle() {\n      var _this$getThemeProps12 = this.getThemeProps(),\n        title = _this$getThemeProps12.title,\n        titleColor = _this$getThemeProps12.titleColor,\n        titleStyle = _this$getThemeProps12.titleStyle;\n      var color = this.getStateColor(titleColor || PLACEHOLDER_COLOR_BY_STATE);\n      if (this.shouldRenderTitle()) {\n        return _jsxDEV(Text, {\n          style: [{\n            color: color\n          }, this.styles.topLabel, this.styles.label, titleStyle],\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 14\n        }, this);\n      }\n    }\n  }, {\n    key: \"renderCharCounter\",\n    value: function renderCharCounter() {\n      var _this$getThemeProps13 = this.getThemeProps(),\n        maxLength = _this$getThemeProps13.maxLength,\n        showCharacterCounter = _this$getThemeProps13.showCharacterCounter;\n      if (maxLength && showCharacterCounter) {\n        var counter = this.getCharCount();\n        var color = this.getCharCountColor();\n        return _jsxDEV(Text, {\n          style: [{\n            color: color\n          }, this.styles.bottomLabel, this.styles.label],\n          accessibilityLabel: `${counter} out of ${maxLength} max characters`,\n          children: [counter, \" / \", maxLength]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 14\n        }, this);\n      }\n    }\n  }, {\n    key: \"renderError\",\n    value: function renderError(visible) {\n      var _this$getThemeProps14 = this.getThemeProps(),\n        enableErrors = _this$getThemeProps14.enableErrors,\n        useTopErrors = _this$getThemeProps14.useTopErrors,\n        errorColor = _this$getThemeProps14.errorColor;\n      var textColor = errorColor ? {\n        color: errorColor\n      } : undefined;\n      var positionStyle = useTopErrors ? this.styles.topLabel : this.styles.bottomLabel;\n      var error = this.getErrorMessage();\n      if (visible && enableErrors) {\n        return _jsxDEV(Text, {\n          style: [this.styles.errorMessage, this.styles.label, positionStyle, textColor],\n          accessible: !_isEmpty(error) && !useTopErrors,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 14\n        }, this);\n      }\n    }\n  }, {\n    key: \"renderExpandableModal\",\n    value: function renderExpandableModal() {\n      var _this3 = this;\n      var _this$getThemeProps15 = this.getThemeProps(),\n        renderExpandable = _this$getThemeProps15.renderExpandable,\n        topBarProps = _this$getThemeProps15.topBarProps;\n      var showExpandableModal = this.state.showExpandableModal;\n      if (_isFunction(renderExpandable) && showExpandableModal) {\n        return renderExpandable(this.getThemeProps(), this.state);\n      }\n      var textInputProps = TextField.extractOwnProps(this.props, ['error', 'testID']);\n      return _jsxDEV(Modal, {\n        animationType: 'slide',\n        visible: showExpandableModal,\n        onRequestClose: function onRequestClose() {\n          return _this3.toggleExpandableModal(false);\n        },\n        children: [_jsxDEV(Modal.TopBar, _objectSpread(_objectSpread({}, topBarProps), {}, {\n          onCancel: function onCancel() {\n            return _this3.toggleExpandableModal(false);\n          },\n          onDone: this.onDoneEditingExpandableInput\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 9\n        }, this), _jsxDEV(View, {\n          style: this.styles.expandableModalContent,\n          children: _jsxDEV(TextArea, _objectSpread(_objectSpread({\n            ref: function ref(textarea) {\n              _this3.expandableInput = textarea;\n            }\n          }, textInputProps), {}, {\n            value: this.state.value\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    key: \"renderExpandableInput\",\n    value: function renderExpandableInput() {\n      var _this4 = this;\n      var _this$getThemeProps16 = this.getThemeProps(),\n        renderExpandableInput = _this$getThemeProps16.renderExpandableInput,\n        testID = _this$getThemeProps16.testID;\n      if (_isFunction(renderExpandableInput)) {\n        return renderExpandableInput(this.getThemeProps(), this.toggleExpandableModal);\n      }\n      return _jsxDEV(TouchableOpacity, _objectSpread(_objectSpread({\n        style: this.styles.expandableInput,\n        activeOpacity: 1,\n        onPress: function onPress() {\n          return !_this4.isDisabled() && _this4.toggleExpandableModal(true);\n        },\n        testID: `${testID}.expandable`\n      }, this.getAccessibilityInfo()), {}, {\n        children: this.renderTextInput()\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    key: \"renderTextInput\",\n    value: function renderTextInput() {\n      var _this5 = this;\n      var value = this.state.value;\n      var _this$getThemeProps17 = this.getThemeProps(),\n        style = _this$getThemeProps17.style,\n        placeholderTextColor = _this$getThemeProps17.placeholderTextColor,\n        multiline = _this$getThemeProps17.multiline,\n        numberOfLines = _this$getThemeProps17.numberOfLines,\n        expandable = _this$getThemeProps17.expandable,\n        rightIconSource = _this$getThemeProps17.rightIconSource,\n        color = _this$getThemeProps17.color,\n        placeholder = _this$getThemeProps17.placeholder,\n        helperText = _this$getThemeProps17.helperText,\n        others = _objectWithoutProperties(_this$getThemeProps17, _excluded);\n      var typography = this.getTypography();\n      var lineHeight = typography.lineHeight,\n        typographyStyle = _objectWithoutProperties(typography, _excluded2);\n      var textColor = this.getStateColor(color || this.extractColorValue());\n      var hasRightElement = this.shouldDisplayRightButton() || rightIconSource;\n      var shouldUseMultiline = multiline;\n      var inputStyle = [hasRightElement && this.styles.rightElement, this.styles.input, _objectSpread({}, typographyStyle), expandable && {\n        maxHeight: lineHeight * (Constants.isAndroid ? 3 : 3.3)\n      }, Constants.isRTL && {\n        minHeight: lineHeight + 3\n      }, Constants.isIOS && shouldUseMultiline && {\n        paddingTop: 0\n      }, {\n        color: textColor\n      }, style];\n      var placeholderText = this.getPlaceholderText(placeholder, helperText);\n      var placeholderColor = this.getStateColor(placeholderTextColor || PLACEHOLDER_COLOR_BY_STATE.default);\n      var isEditable = !this.isDisabled() && !expandable;\n      return _jsxDEV(RNTextInput, _objectSpread(_objectSpread(_objectSpread({}, this.getAccessibilityInfo()), {}, {\n        pointerEvents: expandable ? 'none' : undefined\n      }, others), {}, {\n        value: value,\n        placeholder: placeholderText,\n        placeholderTextColor: placeholderColor,\n        underlineColorAndroid: \"transparent\",\n        style: inputStyle,\n        multiline: shouldUseMultiline,\n        numberOfLines: numberOfLines,\n        onKeyPress: this.onKeyPress,\n        onChangeText: this.onChangeText,\n        onChange: this.onChange,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        ref: function ref(input) {\n          _this5.input = input;\n        },\n        editable: isEditable\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    key: \"renderRightButton\",\n    value: function renderRightButton() {\n      if (this.shouldDisplayRightButton()) {\n        var _this$getThemeProps18 = this.getThemeProps(),\n          rightButtonProps = _this$getThemeProps18.rightButtonProps;\n        var style = rightButtonProps.style,\n          iconSource = rightButtonProps.iconSource,\n          iconColor = rightButtonProps.iconColor,\n          accessibilityLabel = rightButtonProps.accessibilityLabel,\n          others = _objectWithoutProperties(rightButtonProps, _excluded3);\n        return _jsxDEV(TouchableOpacity, _objectSpread(_objectSpread({}, others), {}, {\n          accessibilityLabel: accessibilityLabel,\n          style: [this.styles.rightButton, this.getTopErrorsPosition(), style],\n          onPress: this.onPressRightButton,\n          children: _jsxDEV(Image, {\n            pointerEvents: \"none\",\n            source: iconSource,\n            resizeMode: 'contain',\n            style: [this.styles.rightButtonImage, {\n              tintColor: iconColor || Colors.$iconPrimary\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 11\n          }, this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 14\n        }, this);\n      }\n    }\n  }, {\n    key: \"renderRightIcon\",\n    value: function renderRightIcon() {\n      var _this$getThemeProps19 = this.getThemeProps(),\n        rightIconSource = _this$getThemeProps19.rightIconSource,\n        rightIconStyle = _this$getThemeProps19.rightIconStyle;\n      if (rightIconSource) {\n        return _jsxDEV(View, {\n          style: [this.styles.rightButton, this.getTopErrorsPosition()],\n          pointerEvents: \"none\",\n          children: _jsxDEV(Image, {\n            source: rightIconSource,\n            resizeMode: 'center',\n            style: [this.styles.rightButtonImage, rightIconStyle]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 14\n        }, this);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getThemeProps20 = this.getThemeProps(),\n        expandable = _this$getThemeProps20.expandable,\n        containerStyle = _this$getThemeProps20.containerStyle,\n        underlineColor = _this$getThemeProps20.underlineColor,\n        useTopErrors = _this$getThemeProps20.useTopErrors,\n        hideUnderline = _this$getThemeProps20.hideUnderline,\n        leadingIcon = _this$getThemeProps20.leadingIcon;\n      var underlineStateColor = this.getStateColor(underlineColor || UNDERLINE_COLOR_BY_STATE);\n      return _jsxDEV(View, {\n        style: [this.styles.container, containerStyle],\n        collapsable: false,\n        children: [this.shouldShowTopError() ? this.renderError(useTopErrors) : this.renderTitle(), _jsxDEV(View, {\n          style: [this.styles.innerContainer, hideUnderline && this.styles.innerContainerWithoutUnderline, {\n            borderColor: underlineStateColor\n          }, {\n            paddingTop: this.getTopPaddings()\n          }],\n          children: [leadingIcon && _jsxDEV(Image, _objectSpread(_objectSpread({}, leadingIcon), {}, {\n            style: [this.styles.leadingIcon, leadingIcon.style]\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 27\n          }, this), this.renderPrefix(), this.renderPlaceholder(), expandable ? this.renderExpandableInput() : this.renderTextInput(), this.renderRightButton(), this.renderRightIcon(), expandable && this.renderExpandableModal()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 9\n        }, this), !_isUndefined(this.getErrorMessage()) && useTopErrors && _jsxDEV(View, {\n          style: this.styles.accessibilityDummyErrorMessage,\n          accessible: true,\n          accessibilityLabel: this.getErrorMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 67\n        }, this), _jsxDEV(View, {\n          row: true,\n          children: [_jsxDEV(View, {\n            flex: true,\n            children: this.renderError(!useTopErrors)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 11\n          }, this), this.renderCharCounter()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 12\n      }, this);\n    }\n  }]);\n}(BaseInput);\nTextField.displayName = 'TextField';\nTextField.propTypes = _objectSpread(_objectSpread(_objectSpread({}, TextInputPropTypes), BaseInput.propTypes), {}, {\n  floatingPlaceholder: PropTypes.bool,\n  floatingPlaceholderColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  floatingPlaceholderStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  helperText: PropTypes.string,\n  hideUnderline: PropTypes.bool,\n  underlineColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  disabledColor: PropTypes.string,\n  centered: PropTypes.bool,\n  error: PropTypes.string,\n  enableErrors: PropTypes.bool,\n  errorColor: PropTypes.string,\n  expandable: PropTypes.bool,\n  renderExpandableInput: PropTypes.elementType,\n  renderExpandable: PropTypes.elementType,\n  onToggleExpandableModal: PropTypes.func,\n  topBarProps: PropTypes.shape(Modal.TopBar.propTypes),\n  transformer: PropTypes.func,\n  prefix: PropTypes.string,\n  prefixStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  title: PropTypes.string,\n  titleColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  showCharacterCounter: PropTypes.bool,\n  floatOnFocus: PropTypes.bool,\n  useTopErrors: PropTypes.bool,\n  rightIconSource: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  rightIconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  rightButtonProps: PropTypes.shape({\n    iconSource: ImagePropTypes.source,\n    iconColor: PropTypes.string,\n    onPress: PropTypes.func,\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    accessibilityLabel: PropTypes.string\n  }),\n  leadingIcon: PropTypes.shape(ImagePropTypes)\n});\nTextField.defaultProps = {\n  enableErrors: true,\n  validateOnBlur: true\n};\nexport { TextField as default };\nfunction createStyles(_ref) {\n  var centered = _ref.centered,\n    multiline = _ref.multiline;\n  var rightItemTopPadding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var itemTopPadding = Constants.isIOS ? rightItemTopPadding - 3 : rightItemTopPadding - 1;\n  return StyleSheet.create({\n    container: {},\n    innerContainer: {\n      flexDirection: 'row',\n      justifyContent: centered ? 'center' : undefined,\n      borderBottomWidth: 1,\n      borderColor: Colors.grey70,\n      paddingBottom: Constants.isIOS ? 10 : 5\n    },\n    innerContainerWithoutUnderline: {\n      borderBottomWidth: 0,\n      paddingBottom: 0\n    },\n    input: {\n      flexGrow: 1,\n      textAlign: centered ? 'center' : Constants.isRTL ? 'right' : 'left',\n      backgroundColor: 'transparent',\n      padding: 0,\n      borderColor: 'transparent',\n      borderWidth: Constants.isAndroid ? 1 : undefined\n    },\n    expandableInput: {\n      flexGrow: 1,\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    expandableModalContent: {\n      flex: 1,\n      paddingTop: 15,\n      paddingHorizontal: 20\n    },\n    prefix: {\n      color: Colors.grey30,\n      marginRight: Spacings.s1,\n      textAlignVertical: 'center'\n    },\n    placeholder: {\n      textAlign: 'left'\n    },\n    errorMessage: {\n      color: Colors.red30,\n      textAlign: centered ? 'center' : 'left'\n    },\n    topLabel: {\n      marginBottom: Constants.isIOS ? multiline ? 1 : 5 : 7\n    },\n    bottomLabel: {\n      marginTop: 9\n    },\n    label: _objectSpread(_objectSpread({}, LABEL_TYPOGRAPHY), {}, {\n      height: LABEL_TYPOGRAPHY.lineHeight\n    }),\n    rightElement: {\n      paddingRight: ICON_SIZE + ICON_LEFT_PADDING\n    },\n    rightButton: {\n      position: 'absolute',\n      right: 0,\n      alignSelf: 'flex-start',\n      paddingTop: itemTopPadding\n    },\n    rightButtonImage: {\n      width: ICON_SIZE,\n      height: ICON_SIZE\n    },\n    leadingIcon: {\n      alignSelf: 'center'\n    },\n    accessibilityDummyErrorMessage: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: 1,\n      height: 1\n    }\n  });\n}","map":{"version":3,"names":["_get","_isUndefined","_isFunction","_isPlainObject","_isString","_invoke","_isEmpty","PropTypes","React","StyleSheet","Animated","RNTextInput","TextInputPropTypes","ImagePropTypes","memoize","Constants","Colors","Typography","Spacings","BaseInput","Modal","TextArea","View","Image","Text","TouchableOpacity","jsxDEV","_jsxDEV","COLOR_BY_STATE","default","grey10","focus","error","disabled","grey50","UNDERLINE_COLOR_BY_STATE","$outlinePrimary","red30","PLACEHOLDER_COLOR_BY_STATE","grey30","$textPrimary","CHAR_COUNTER_COLOR_BY_STATE","LABEL_TYPOGRAPHY","text80","ICON_SIZE","ICON_LEFT_PADDING","FLOATING_PLACEHOLDER_SCALE","TextField","_BaseInput","props","_this","_classCallCheck","_callSuper","onPlaceholderLayout","event","width","nativeEvent","layout","translate","setState","floatingPlaceholderTranslate","toggleExpandableModal","value","showExpandableModal","updateFloatingPlaceholderState","withoutAnimation","state","floatingPlaceholderState","setValue","shouldFloatPlaceholder","spring","toValue","duration","useNativeDriver","start","getPlaceholderText","placeholder","helperText","text","shouldFakePlaceholder","shouldShowHelperText","shouldShowTopError","getRequiredPlaceholder","onPressRightButton","onDoneEditingExpandableInput","expandableInputValue","expandableInput","onKeyPress","lastKey","key","setCharCountColor","onChangeText","backspaceKey","_this$props","transformer","validateOnChange","transformedText","setImmediate","validate","_objectSpread","Value","charCountColor","generatePropsWarnings","_inherits","_createClass","UNSAFE_componentWillReceiveProps","nextProps","_this2","componentDidUpdate","_prevProps","prevState","focused","maxLength","console","warn","showCharacterCounter","generateStyles","styles","createStyles","getThemeProps","getTopPaddings","getAccessibilityInfo","_this$getThemeProps","floatingPlaceholder","accessibilityState","isDisabled","undefined","accessibilityLabel","isRequiredField","isIOS","getStateColor","colorProp","arguments","length","getErrorMessage","_this$getThemeProps2","disabledColor","mergedColorState","getCharCount","maxReached","isCounterLimit","color","getCharCountColor","_this$getThemeProps3","getTopErrorsPosition","title","top","editable","_this$getThemeProps4","counter","hasText","shouldFloatOnFocus","_this$getThemeProps5","floatOnFocus","_this$getThemeProps6","centered","leadingIcon","prefix","Boolean","shouldShowError","_this$getThemeProps7","enableErrors","_this$props2","_this$state","_this$getThemeProps8","useTopErrors","shouldDisplayRightButton","_this$getThemeProps9","rightButtonProps","expandable","iconSource","shouldRenderTitle","_this$getThemeProps10","renderPlaceholder","_this$state2","_this$getThemeProps11","placeholderTextColor","floatingPlaceholderColor","floatingPlaceholderStyle","typography","getTypography","placeholderColor","absF","left","children","pointerEvents","numberOfLines","suppressHighlighting","accessible","onLayout","style","lineHeight","transform","scale","interpolate","inputRange","outputRange","translateY","translateX","fileName","_jsxFileName","lineNumber","columnNumber","renderPrefix","_this$props3","prefixStyle","renderTitle","_this$getThemeProps12","titleColor","titleStyle","topLabel","label","renderCharCounter","_this$getThemeProps13","bottomLabel","renderError","visible","_this$getThemeProps14","errorColor","textColor","positionStyle","errorMessage","renderExpandableModal","_this3","_this$getThemeProps15","renderExpandable","topBarProps","textInputProps","extractOwnProps","animationType","onRequestClose","TopBar","onCancel","onDone","expandableModalContent","ref","textarea","renderExpandableInput","_this4","_this$getThemeProps16","testID","activeOpacity","onPress","renderTextInput","_this5","_this$getThemeProps17","multiline","rightIconSource","others","_objectWithoutProperties","_excluded","typographyStyle","_excluded2","extractColorValue","hasRightElement","shouldUseMultiline","inputStyle","rightElement","input","maxHeight","isAndroid","isRTL","minHeight","paddingTop","placeholderText","isEditable","underlineColorAndroid","onChange","onFocus","onBlur","renderRightButton","_this$getThemeProps18","iconColor","_excluded3","rightButton","source","resizeMode","rightButtonImage","tintColor","$iconPrimary","renderRightIcon","_this$getThemeProps19","rightIconStyle","render","_this$getThemeProps20","containerStyle","underlineColor","hideUnderline","underlineStateColor","container","collapsable","innerContainer","innerContainerWithoutUnderline","borderColor","accessibilityDummyErrorMessage","row","flex","displayName","propTypes","bool","oneOfType","string","object","number","array","elementType","onToggleExpandableModal","func","shape","defaultProps","validateOnBlur","_ref","rightItemTopPadding","itemTopPadding","create","flexDirection","justifyContent","borderBottomWidth","grey70","paddingBottom","flexGrow","textAlign","backgroundColor","padding","borderWidth","alignItems","paddingHorizontal","marginRight","s1","textAlignVertical","marginBottom","marginTop","height","paddingRight","position","right","alignSelf","bottom"],"sources":["/workspaces/expo-starter/node_modules/react-native-ui-lib/src/components/textField/index.js"],"sourcesContent":["import _get from \"lodash/get\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _isFunction from \"lodash/isFunction\";\nimport _isPlainObject from \"lodash/isPlainObject\";\nimport _isString from \"lodash/isString\";\nimport _invoke from \"lodash/invoke\";\nimport _isEmpty from \"lodash/isEmpty\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { StyleSheet, Animated, TextInput as RNTextInput } from 'react-native';\nimport { TextInputPropTypes, ImagePropTypes } from 'deprecated-react-native-prop-types';\nimport memoize from 'memoize-one';\nimport { Constants } from \"../../commons/new\";\nimport { Colors, Typography, Spacings } from \"../../style\";\nimport BaseInput from \"../baseInput\";\nimport Modal from \"../modal\";\nimport TextArea from \"../textArea\";\nimport View from \"../view\";\nimport Image from \"../image\";\nimport Text from \"../text\";\nimport TouchableOpacity from \"../touchableOpacity\";\nconst COLOR_BY_STATE = {\n  default: Colors.grey10,\n  focus: Colors.grey10,\n  error: Colors.grey10,\n  disabled: Colors.grey50\n};\nconst UNDERLINE_COLOR_BY_STATE = {\n  default: Colors.grey50,\n  focus: Colors.$outlinePrimary,\n  error: Colors.red30\n};\nconst PLACEHOLDER_COLOR_BY_STATE = {\n  default: Colors.grey30,\n  focus: Colors.$textPrimary\n};\nconst CHAR_COUNTER_COLOR_BY_STATE = {\n  default: Colors.grey30,\n  error: Colors.red30\n};\nconst LABEL_TYPOGRAPHY = Typography.text80;\nconst ICON_SIZE = 24;\nconst ICON_LEFT_PADDING = 6;\nconst FLOATING_PLACEHOLDER_SCALE = 0.875;\n\n/**\n * @description: A wrapper for TextInput component with extra functionality like floating placeholder and validations (This is an uncontrolled component)\n * @modifiers: Typography\n * @extends: TextInput\n * @extendsLink: https://reactnative.dev/docs/textinput\n * @gif: https://media.giphy.com/media/xULW8su8Cs5Z9Fq4PS/giphy.gif, https://media.giphy.com/media/3ohc1dhDcLS9FvWLJu/giphy.gif, https://media.giphy.com/media/oNUSOxnHdMP5ZnKYsh/giphy.gif\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TextFieldScreen/BasicTextFieldScreen.js\n */\nexport default class TextField extends BaseInput {\n  static displayName = 'TextField';\n  static propTypes = {\n    ...TextInputPropTypes,\n    ...BaseInput.propTypes,\n    /**\n     * should placeholder have floating behavior\n     */\n    floatingPlaceholder: PropTypes.bool,\n    /**\n     * floating placeholder color as a string or object of states, ex. {default: 'black', error: 'red', focus: 'blue', disabled: 'grey'}\n     */\n    floatingPlaceholderColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    /**\n     * Custom style for floating placeholder\n     */\n    floatingPlaceholderStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * This text will appear as a placeholder when the textInput becomes focused, only when passing floatingPlaceholder\n     * as well (NOT for expandable textInputs)\n     */\n    helperText: PropTypes.string,\n    /**\n     * hide text input underline, by default false\n     */\n    hideUnderline: PropTypes.bool,\n    /**\n     * underline color as a string or object of states, ex. {default: 'black', error: 'red', focus: 'blue', disabled: 'grey'}\n     */\n    underlineColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    /**\n     * the color of all text when the input is disabled (if undefined will not apply color)\n     */\n    disabledColor: PropTypes.string,\n    /**\n     * should text input be align to center\n     */\n    centered: PropTypes.bool,\n    /**\n     * input error message, should be empty if no error exists\n     */\n    error: PropTypes.string,\n    /**\n     * should the input component support error messages\n     */\n    enableErrors: PropTypes.bool,\n    /**\n     * input error message's text color\n     */\n    errorColor: PropTypes.string,\n    /**\n     * should the input expand to another text area modal\n     */\n    expandable: PropTypes.bool,\n    /**\n     * Render custom expandable input (requires expandable to be true)\n     */\n    renderExpandableInput: PropTypes.elementType,\n    /**\n     * allow custom rendering of expandable content when clicking on the input (useful for pickers)\n     * accept props and state as params, ex. (props, state) => {...}\n     * use toggleExpandableModal(false) method to toggle off the expandable content\n     */\n    renderExpandable: PropTypes.elementType,\n    /**\n     * Callback for the modal toggle. Pass with renderExpandable to control the modal toggle\n     */\n    onToggleExpandableModal: PropTypes.func,\n    /**\n     * The picker modal top bar props\n     */\n    topBarProps: PropTypes.shape(Modal.TopBar.propTypes),\n    /**\n     * transform function executed on value and return transformed value\n     */\n    transformer: PropTypes.func,\n    /**\n     * Pass to render a prefix text as part of the input (doesn't work with floatingPlaceholder)\n     */\n    prefix: PropTypes.string,\n    /**\n     * The prefix style\n     */\n    prefixStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * Fixed title that will displayed above the input (note: floatingPlaceholder MUST be 'false')\n     */\n    title: PropTypes.string,\n    /**\n     * The title's color as a string or object of states, ex. {default: 'black', error: 'red', focus: 'blue', disabled: 'grey'}\n     */\n    titleColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    /**\n     * Additional styles for the title (not including 'color')\n     */\n    titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * should the input display a character counter (only when passing 'maxLength')\n     */\n    showCharacterCounter: PropTypes.bool,\n    /**\n     * should float the placeholder when focused (instead of when typing)\n     */\n    floatOnFocus: PropTypes.bool,\n    /**\n     * should the errors be displayed at the top\n     */\n    useTopErrors: PropTypes.bool,\n    /**\n     * Icon asset source for showing on the right side, appropriate for dropdown icon and such\n     */\n    rightIconSource: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    /**\n     * Pass to style the right icon source\n     */\n    rightIconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    /**\n     * Props for the right button {iconSource, onPress, style}\n     */\n    rightButtonProps: PropTypes.shape({\n      iconSource: ImagePropTypes.source,\n      iconColor: PropTypes.string,\n      onPress: PropTypes.func,\n      style: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n      accessibilityLabel: PropTypes.string\n    }),\n    /**\n     * Pass to render a leading icon to the TextInput value. Accepts Image props (doesn't work with floatingPlaceholder)\n     */\n    leadingIcon: PropTypes.shape(ImagePropTypes)\n  };\n  static defaultProps = {\n    enableErrors: true,\n    validateOnBlur: true\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...this.state,\n      value: props.value,\n      // for floatingPlaceholder functionality\n      floatingPlaceholderState: new Animated.Value(this.shouldFloatPlaceholder(props.value) ? 1 : 0),\n      showExpandableModal: false,\n      floatingPlaceholderTranslate: 0,\n      charCountColor: CHAR_COUNTER_COLOR_BY_STATE.default\n    };\n    this.generatePropsWarnings(props);\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.props.value) {\n      this.setState({\n        value: nextProps.value\n      }, () => {\n        this.updateFloatingPlaceholderState();\n        if (nextProps.validateOnChange) {\n          this.validate();\n        }\n      });\n    }\n  }\n  componentDidUpdate(_prevProps, prevState) {\n    if (_isEmpty(prevState.value) !== _isEmpty(this.state.value) || prevState.focused !== this.state.focused) {\n      this.updateFloatingPlaceholderState();\n    }\n  }\n  onPlaceholderLayout = event => {\n    const {\n      width\n    } = event.nativeEvent.layout;\n    const translate = width / 2 - width * FLOATING_PLACEHOLDER_SCALE / 2;\n    this.setState({\n      floatingPlaceholderTranslate: translate / FLOATING_PLACEHOLDER_SCALE\n    });\n  };\n\n  /** Actions */\n  generatePropsWarnings(props) {\n    if (props.maxLength === 0) {\n      console.warn('Setting maxLength to zero will block typing in this input');\n    }\n    if (props.showCharacterCounter && !props.maxLength) {\n      console.warn('In order to use showCharacterCount please pass \\'maxLength\\' prop');\n    }\n  }\n  generateStyles() {\n    this.styles = createStyles(this.getThemeProps(), this.getTopPaddings());\n  }\n  getAccessibilityInfo() {\n    const {\n      floatingPlaceholder,\n      placeholder\n    } = this.getThemeProps();\n    const accessibilityState = this.isDisabled() ? {\n      disabled: true\n    } : undefined;\n    let accessibilityLabel = floatingPlaceholder ? this.props.accessibilityLabel || placeholder : '';\n    if (this.isRequiredField()) {\n      accessibilityLabel = `${accessibilityLabel}. Mandatory`;\n    }\n    return {\n      accessibilityLabel,\n      // on Android accessibilityStates cause issues with expandable input\n      accessibilityState: Constants.isIOS ? accessibilityState : undefined\n    };\n  }\n  toggleExpandableModal = value => {\n    this.setState({\n      showExpandableModal: value\n    });\n    _invoke(this.props, 'onToggleExpandableModal', value);\n  };\n  updateFloatingPlaceholderState = withoutAnimation => {\n    if (withoutAnimation) {\n      this.state.floatingPlaceholderState.setValue(this.shouldFloatPlaceholder() ? 1 : 0);\n    } else {\n      Animated.spring(this.state.floatingPlaceholderState, {\n        toValue: this.shouldFloatPlaceholder() ? 1 : 0,\n        duration: 150,\n        useNativeDriver: true\n      }).start();\n    }\n  };\n  getPlaceholderText = memoize((placeholder, helperText) => {\n    // HACK: passing whitespace instead of undefined. Issue fixed in RN56\n    const text = this.shouldFakePlaceholder() ? this.shouldShowHelperText() ? helperText : ' ' : this.shouldShowTopError() && this.shouldShowHelperText() ? helperText : this.getRequiredPlaceholder(placeholder);\n    return text;\n  });\n  getStateColor(colorProp = {}) {\n    const {\n      focused\n    } = this.state;\n    const error = this.getErrorMessage();\n    const {\n      disabledColor\n    } = this.getThemeProps();\n    if (_isString(colorProp)) {\n      return colorProp || Colors.grey10;\n    } else if (_isPlainObject(colorProp)) {\n      const mergedColorState = {\n        ...COLOR_BY_STATE,\n        ...colorProp\n      };\n      if (this.isDisabled()) {\n        return disabledColor || mergedColorState.disabled;\n      } else if (error) {\n        return mergedColorState.error;\n      } else if (focused) {\n        return mergedColorState.focus;\n      } else {\n        return mergedColorState.default;\n      }\n    }\n    return colorProp || Colors.grey10;\n  }\n  getCharCount() {\n    const {\n      value\n    } = this.state;\n    if (value) {\n      return value.length;\n    }\n    return 0;\n  }\n  setCharCountColor(key) {\n    this.maxReached = key === Constants.backspaceKey ? false : this.isCounterLimit();\n    const color = this.state.focused && this.maxReached ? CHAR_COUNTER_COLOR_BY_STATE.error : CHAR_COUNTER_COLOR_BY_STATE.default;\n    if (color !== this.state.charCountColor) {\n      this.setState({\n        charCountColor: color\n      });\n    }\n  }\n  getCharCountColor() {\n    const {\n      charCountColor\n    } = this.state;\n    const {\n      disabledColor\n    } = this.getThemeProps();\n    return this.isDisabled() && disabledColor ? disabledColor : charCountColor;\n  }\n  getTopPaddings() {\n    return this.shouldFakePlaceholder() ? this.shouldShowTopError() ? undefined : 25 : undefined;\n  }\n  getTopErrorsPosition() {\n    return !this.props.title && this.shouldShowTopError() ? {\n      top: Constants.isIOS ? -25 : -27\n    } : undefined;\n  }\n  isDisabled() {\n    return this.props.editable === false;\n  }\n  isCounterLimit() {\n    const {\n      maxLength\n    } = this.getThemeProps();\n    const counter = this.getCharCount();\n    return counter === 0 ? false : maxLength <= counter;\n  }\n  hasText(value) {\n    return !_isEmpty(value || this.state.value);\n  }\n  shouldShowHelperText() {\n    const {\n      focused\n    } = this.state;\n    const {\n      helperText\n    } = this.props;\n    return focused && helperText;\n  }\n  shouldFloatOnFocus() {\n    const {\n      focused\n    } = this.state;\n    const {\n      floatOnFocus\n    } = this.getThemeProps();\n    return focused && floatOnFocus;\n  }\n  shouldFloatPlaceholder(text) {\n    return this.hasText(text) || this.shouldShowHelperText() || this.shouldFloatOnFocus();\n  }\n  shouldFakePlaceholder() {\n    const {\n      floatingPlaceholder,\n      centered,\n      leadingIcon,\n      prefix\n    } = this.getThemeProps();\n    return !leadingIcon && !prefix && Boolean(floatingPlaceholder && !centered && !this.shouldShowTopError());\n  }\n  shouldShowError() {\n    const {\n      enableErrors\n    } = this.getThemeProps();\n    const error = this.getErrorMessage();\n    return enableErrors && error;\n  }\n  getErrorMessage() {\n    return this.props?.error || this.state?.error;\n  }\n  shouldShowTopError() {\n    const {\n      useTopErrors\n    } = this.getThemeProps();\n    return this.shouldShowError() && useTopErrors;\n  }\n  shouldDisplayRightButton() {\n    const {\n      rightButtonProps,\n      expandable\n    } = this.getThemeProps();\n    return !expandable && rightButtonProps && rightButtonProps.iconSource;\n  }\n  shouldRenderTitle() {\n    const {\n      floatingPlaceholder,\n      title\n    } = this.getThemeProps();\n    return !floatingPlaceholder && title;\n  }\n  onPressRightButton = () => {\n    _invoke(this.props, 'rightButtonProps.onPress');\n  };\n\n  /** Renders */\n  renderPlaceholder() {\n    const {\n      floatingPlaceholderState,\n      floatingPlaceholderTranslate\n    } = this.state;\n    const {\n      placeholder,\n      placeholderTextColor,\n      floatingPlaceholderColor,\n      floatingPlaceholderStyle\n    } = this.getThemeProps();\n    const typography = this.getTypography();\n    const placeholderColor = this.getStateColor(placeholderTextColor || PLACEHOLDER_COLOR_BY_STATE.default);\n    if (this.shouldFakePlaceholder()) {\n      return <View absF left>\n          <Animated.Text pointerEvents=\"none\" numberOfLines={1} suppressHighlighting accessible={false} onLayout={this.onPlaceholderLayout} style={[this.styles.placeholder, this.getTopErrorsPosition(), typography,\n        // TODO: we need to exclude completely any dependency on line height\n        // in this component since it always breaks alignments\n        {\n          lineHeight: undefined\n        }, {\n          transform: [{\n            scale: floatingPlaceholderState.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, FLOATING_PLACEHOLDER_SCALE]\n            })\n          }, {\n            translateY: floatingPlaceholderState.interpolate({\n              inputRange: [0, 1],\n              outputRange: [25, 0]\n            })\n          }, {\n            translateX: floatingPlaceholderState.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0, -floatingPlaceholderTranslate]\n            })\n          }],\n          color: this.shouldFloatPlaceholder() ? this.getStateColor(floatingPlaceholderColor || PLACEHOLDER_COLOR_BY_STATE) : placeholderColor\n        }, floatingPlaceholderStyle]}>\n            {this.getRequiredPlaceholder(placeholder)}\n          </Animated.Text>\n        </View>;\n    }\n  }\n  renderPrefix() {\n    const {\n      prefix,\n      prefixStyle\n    } = this.props;\n    if (prefix) {\n      const typography = this.getTypography();\n      return <Text style={[this.styles.prefix, typography, {\n        lineHeight: undefined\n      }, prefixStyle]}>{prefix}</Text>;\n    }\n  }\n  renderTitle() {\n    const {\n      title,\n      titleColor,\n      titleStyle\n    } = this.getThemeProps();\n    const color = this.getStateColor(titleColor || PLACEHOLDER_COLOR_BY_STATE);\n    if (this.shouldRenderTitle()) {\n      return <Text style={[{\n        color\n      }, this.styles.topLabel, this.styles.label, titleStyle]}>{title}</Text>;\n    }\n  }\n  renderCharCounter() {\n    const {\n      maxLength,\n      showCharacterCounter\n    } = this.getThemeProps();\n    if (maxLength && showCharacterCounter) {\n      const counter = this.getCharCount();\n      const color = this.getCharCountColor();\n      return <Text style={[{\n        color\n      }, this.styles.bottomLabel, this.styles.label]} accessibilityLabel={`${counter} out of ${maxLength} max characters`}>\n          {counter} / {maxLength}\n        </Text>;\n    }\n  }\n  renderError(visible) {\n    const {\n      enableErrors,\n      useTopErrors,\n      errorColor\n    } = this.getThemeProps();\n    const textColor = errorColor ? {\n      color: errorColor\n    } : undefined;\n    const positionStyle = useTopErrors ? this.styles.topLabel : this.styles.bottomLabel;\n    const error = this.getErrorMessage();\n    if (visible && enableErrors) {\n      return <Text style={[this.styles.errorMessage, this.styles.label, positionStyle, textColor]} accessible={!_isEmpty(error) && !useTopErrors}>\n          {error}\n        </Text>;\n    }\n  }\n  renderExpandableModal() {\n    const {\n      renderExpandable,\n      topBarProps\n    } = this.getThemeProps();\n    const {\n      showExpandableModal\n    } = this.state;\n    if (_isFunction(renderExpandable) && showExpandableModal) {\n      return renderExpandable(this.getThemeProps(), this.state);\n    }\n    const textInputProps = TextField.extractOwnProps(this.props, ['error', 'testID']);\n    return <Modal animationType={'slide'} visible={showExpandableModal} onRequestClose={() => this.toggleExpandableModal(false)}>\n        <Modal.TopBar {...topBarProps} onCancel={() => this.toggleExpandableModal(false)} onDone={this.onDoneEditingExpandableInput} />\n        <View style={this.styles.expandableModalContent}>\n          <TextArea ref={textarea => {\n          this.expandableInput = textarea;\n        }} {...textInputProps} value={this.state.value} />\n        </View>\n      </Modal>;\n  }\n  renderExpandableInput() {\n    const {\n      renderExpandableInput,\n      testID\n    } = this.getThemeProps();\n    if (_isFunction(renderExpandableInput)) {\n      return renderExpandableInput(this.getThemeProps(), this.toggleExpandableModal);\n    }\n    return <TouchableOpacity style={this.styles.expandableInput} activeOpacity={1} onPress={() => !this.isDisabled() && this.toggleExpandableModal(true)} testID={`${testID}.expandable`}\n    // {...this.extractAccessibilityProps()}\n    {...this.getAccessibilityInfo()}>\n        {this.renderTextInput()}\n      </TouchableOpacity>;\n  }\n  renderTextInput() {\n    const {\n      value\n    } = this.state; // value set on state for floatingPlaceholder functionality\n    const {\n      style,\n      placeholderTextColor,\n      multiline,\n      // hideUnderline,\n      numberOfLines,\n      expandable,\n      rightIconSource,\n      color,\n      placeholder,\n      helperText,\n      ...others\n    } = this.getThemeProps();\n    const typography = this.getTypography();\n    const {\n      lineHeight,\n      ...typographyStyle\n    } = typography;\n    const textColor = this.getStateColor(color || this.extractColorValue());\n    const hasRightElement = this.shouldDisplayRightButton() || rightIconSource;\n    const shouldUseMultiline = multiline /*  || expandable */;\n\n    const inputStyle = [hasRightElement && this.styles.rightElement, this.styles.input,\n    // hideUnderline && this.styles.inputWithoutUnderline,\n    {\n      ...typographyStyle\n    },\n    // Constants.isAndroid && {lineHeight},\n    expandable && {\n      maxHeight: lineHeight * (Constants.isAndroid ? 3 : 3.3)\n    }, Constants.isRTL && {\n      minHeight: lineHeight + 3\n    }, Constants.isIOS && shouldUseMultiline && {\n      paddingTop: 0\n    },\n    // fix for iOS topPadding in multiline TextInput\n    {\n      color: textColor\n    }, style];\n    const placeholderText = this.getPlaceholderText(placeholder, helperText);\n    const placeholderColor = this.getStateColor(placeholderTextColor || PLACEHOLDER_COLOR_BY_STATE.default);\n    const isEditable = !this.isDisabled() && !expandable;\n    return <RNTextInput {...this.getAccessibilityInfo()} pointerEvents={expandable ? 'none' : undefined} {...others} value={value} placeholder={placeholderText} placeholderTextColor={placeholderColor} underlineColorAndroid=\"transparent\" style={inputStyle} multiline={shouldUseMultiline} numberOfLines={numberOfLines} onKeyPress={this.onKeyPress} onChangeText={this.onChangeText} onChange={this.onChange} onFocus={this.onFocus} onBlur={this.onBlur} ref={input => {\n      this.input = input;\n    }} editable={isEditable} />;\n  }\n  renderRightButton() {\n    if (this.shouldDisplayRightButton()) {\n      const {\n        rightButtonProps\n      } = this.getThemeProps();\n      const {\n        style,\n        iconSource,\n        iconColor,\n        accessibilityLabel,\n        ...others\n      } = rightButtonProps;\n      return <TouchableOpacity {...others} accessibilityLabel={accessibilityLabel} style={[this.styles.rightButton, this.getTopErrorsPosition(), style]} onPress={this.onPressRightButton}>\n          <Image pointerEvents=\"none\" source={iconSource} resizeMode={'contain'} style={[this.styles.rightButtonImage, {\n          tintColor: iconColor || Colors.$iconPrimary\n        }]} />\n        </TouchableOpacity>;\n    }\n  }\n  renderRightIcon() {\n    const {\n      rightIconSource,\n      rightIconStyle\n    } = this.getThemeProps();\n    if (rightIconSource) {\n      return <View style={[this.styles.rightButton, this.getTopErrorsPosition()]} pointerEvents=\"none\">\n          <Image source={rightIconSource} resizeMode={'center'} style={[this.styles.rightButtonImage, rightIconStyle]} />\n        </View>;\n    }\n  }\n  render() {\n    const {\n      expandable,\n      containerStyle,\n      underlineColor,\n      useTopErrors,\n      hideUnderline,\n      leadingIcon\n    } = this.getThemeProps();\n    const underlineStateColor = this.getStateColor(underlineColor || UNDERLINE_COLOR_BY_STATE);\n    return <View style={[this.styles.container, containerStyle]} collapsable={false}>\n        {this.shouldShowTopError() ? this.renderError(useTopErrors) : this.renderTitle()}\n\n        <View style={[this.styles.innerContainer, hideUnderline && this.styles.innerContainerWithoutUnderline, {\n        borderColor: underlineStateColor\n      }, {\n        paddingTop: this.getTopPaddings()\n      }]}>\n          {leadingIcon && <Image {...leadingIcon} style={[this.styles.leadingIcon, leadingIcon.style]} />}\n          {this.renderPrefix()}\n          {this.renderPlaceholder()}\n          {expandable ? this.renderExpandableInput() : this.renderTextInput()}\n          {this.renderRightButton()}\n          {this.renderRightIcon()}\n          {expandable && this.renderExpandableModal()}\n        </View>\n\n        {!_isUndefined(this.getErrorMessage()) && useTopErrors && <View style={this.styles.accessibilityDummyErrorMessage} accessible accessibilityLabel={this.getErrorMessage()} />}\n\n        <View row>\n          <View flex>{this.renderError(!useTopErrors)}</View>\n          {this.renderCharCounter()}\n        </View>\n      </View>;\n  }\n\n  /** Events */\n  onDoneEditingExpandableInput = () => {\n    const expandableInputValue = _get(this.expandableInput, 'state.value');\n    this.setState({\n      value: expandableInputValue\n    });\n    this.state.floatingPlaceholderState.setValue(expandableInputValue ? 1 : 0);\n    _invoke(this.props, 'onChangeText', expandableInputValue);\n    this.toggleExpandableModal(false);\n  };\n  onKeyPress = event => {\n    this.lastKey = event.nativeEvent.key;\n    this.setCharCountColor(this.lastKey);\n    _invoke(this.props, 'onKeyPress', event);\n  };\n  onChangeText = text => {\n    // when character count exceeds maxLength text will be empty string.\n    // HACK: To avoid setting state value to '' we check the source of that deletion\n    if (text === '' && this.lastKey && this.lastKey !== Constants.backspaceKey) {\n      return;\n    }\n    const {\n      transformer,\n      validateOnChange\n    } = this.props;\n    let transformedText = text;\n    if (_isFunction(transformer)) {\n      transformedText = transformer(text);\n    }\n    _invoke(this.props, 'onChangeText', transformedText);\n    this.setState({\n      value: transformedText\n    }, () => {\n      if (validateOnChange) {\n        setImmediate(this.validate);\n      }\n    });\n  };\n}\nfunction createStyles({\n  centered,\n  multiline\n}, rightItemTopPadding = 0) {\n  const itemTopPadding = Constants.isIOS ? rightItemTopPadding - 3 : rightItemTopPadding - 1;\n  return StyleSheet.create({\n    container: {},\n    innerContainer: {\n      // flexGrow: 1, // create bugs with lineHeight\n      flexDirection: 'row',\n      justifyContent: centered ? 'center' : undefined,\n      borderBottomWidth: 1,\n      borderColor: Colors.grey70,\n      paddingBottom: Constants.isIOS ? 10 : 5\n    },\n    innerContainerWithoutUnderline: {\n      borderBottomWidth: 0,\n      paddingBottom: 0\n    },\n    input: {\n      flexGrow: 1,\n      textAlign: centered ? 'center' : Constants.isRTL ? 'right' : 'left',\n      backgroundColor: 'transparent',\n      // marginBottom: Constants.isIOS ? 10 : 5,\n      padding: 0,\n      // for Android\n      // textAlignVertical: 'top', // for Android\n      borderColor: 'transparent',\n      // borderColor & borderWidth is a fix for collapsing issue on Android\n      borderWidth: Constants.isAndroid ? 1 : undefined // for Android\n    },\n\n    expandableInput: {\n      flexGrow: 1,\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    // inputWithoutUnderline: {\n    //   marginBottom: undefined\n    // },\n    expandableModalContent: {\n      flex: 1,\n      paddingTop: 15,\n      paddingHorizontal: 20\n    },\n    prefix: {\n      color: Colors.grey30,\n      marginRight: Spacings.s1,\n      textAlignVertical: 'center'\n    },\n    placeholder: {\n      textAlign: 'left'\n    },\n    errorMessage: {\n      color: Colors.red30,\n      textAlign: centered ? 'center' : 'left'\n    },\n    topLabel: {\n      marginBottom: Constants.isIOS ? multiline ? 1 : 5 : 7\n    },\n    bottomLabel: {\n      marginTop: 9\n    },\n    label: {\n      ...LABEL_TYPOGRAPHY,\n      height: LABEL_TYPOGRAPHY.lineHeight\n    },\n    rightElement: {\n      paddingRight: ICON_SIZE + ICON_LEFT_PADDING\n    },\n    rightButton: {\n      position: 'absolute',\n      right: 0,\n      alignSelf: 'flex-start',\n      paddingTop: itemTopPadding\n    },\n    rightButtonImage: {\n      width: ICON_SIZE,\n      height: ICON_SIZE\n    },\n    leadingIcon: {\n      alignSelf: 'center'\n    },\n    accessibilityDummyErrorMessage: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: 1,\n      height: 1\n    }\n  });\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
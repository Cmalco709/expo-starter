{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/workspaces/expo-starter/node_modules/react-native-ui-lib/src/components/panningViews/panDismissibleView.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport _isUndefined from \"lodash/isUndefined\";\nimport _get from \"lodash/get\";\nimport _noop from \"lodash/noop\";\nimport React, { PureComponent } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Constants } from \"../../commons/new\";\nimport asPanViewConsumer from \"./asPanViewConsumer\";\nimport PanningProvider from \"./panningProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar DEFAULT_DIRECTIONS = [PanningProvider.Directions.UP, PanningProvider.Directions.DOWN, PanningProvider.Directions.LEFT, PanningProvider.Directions.RIGHT];\nvar DEFAULT_SPEED = 20;\nvar DEFAULT_BOUNCINESS = 6;\nvar DEFAULT_DISMISS_ANIMATION_DURATION = 280;\nvar DEFAULT_ANIMATION_OPTIONS = {\n  speed: DEFAULT_SPEED,\n  bounciness: DEFAULT_BOUNCINESS,\n  duration: DEFAULT_DISMISS_ANIMATION_DURATION\n};\nvar MAXIMUM_DRAGS_AFTER_SWIPE = 2;\nvar PanDismissibleView = function (_PureComponent) {\n  function PanDismissibleView(props) {\n    var _this;\n    _classCallCheck(this, PanDismissibleView);\n    _this = _callSuper(this, PanDismissibleView, [props]);\n    _this.shouldDismissAfterReset = false;\n    _this.ref = React.createRef();\n    _this.animTranslateX = new Animated.Value(0);\n    _this.animTranslateY = new Animated.Value(0);\n    _this.left = 0;\n    _this.top = 0;\n    _this.width = 0;\n    _this.height = 0;\n    _this.thresholdX = 0;\n    _this.thresholdY = 0;\n    _this.swipe = {};\n    _this.counter = 0;\n    _this.onLayout = function (event) {\n      if (_this.height === 0) {\n        var layout = event.nativeEvent.layout;\n        var threshold = _this.props.threshold;\n        _this.height = layout.height;\n        _this.thresholdY = _get(threshold, 'y', layout.height / 2);\n        _this.width = layout.width;\n        _this.thresholdX = _get(threshold, 'x', layout.width / 2);\n        _this.initPositions();\n      }\n    };\n    _this.initPositions = function (extraDataForSetState, runAfterSetState) {\n      _this.setNativeProps(0, 0);\n      _this.animTranslateX = new Animated.Value(0);\n      _this.animTranslateY = new Animated.Value(0);\n      _this.setState(_objectSpread({}, extraDataForSetState), runAfterSetState);\n    };\n    _this.onPanStart = function () {\n      _this.swipe = {};\n      _this.counter = 0;\n    };\n    _this.onDrag = function (deltas) {\n      var left = deltas.x ? Math.round(deltas.x) : 0;\n      var top = deltas.y ? Math.round(deltas.y) : 0;\n      _this.setNativeProps(left, top);\n      if (_this.swipe.x || _this.swipe.y) {\n        if (_this.counter < MAXIMUM_DRAGS_AFTER_SWIPE) {\n          _this.counter += 1;\n        } else {\n          _this.swipe = {};\n        }\n      }\n    };\n    _this.setNativeProps = function (left, top) {\n      if (_this.ref.current) {\n        _this.ref.current.setNativeProps({\n          style: {\n            left: left,\n            top: top\n          }\n        });\n        _this.left = left;\n        _this.top = top;\n      }\n    };\n    _this.onSwipe = function (swipeDirections) {\n      _this.swipe = swipeDirections;\n    };\n    _this.onPanEnd = function () {\n      var _this$props$direction = _this.props.directions,\n        directions = _this$props$direction === void 0 ? DEFAULT_DIRECTIONS : _this$props$direction;\n      if (_this.swipe.x || _this.swipe.y) {\n        var _this$getDismissAnima = _this.getDismissAnimationDirection(),\n          isRight = _this$getDismissAnima.isRight,\n          isDown = _this$getDismissAnima.isDown;\n        _this._animateDismiss(isRight, isDown);\n      } else {\n        var endValue = {\n          x: Math.round(_this.left),\n          y: Math.round(_this.top)\n        };\n        if (directions.includes(PanningProvider.Directions.LEFT) && endValue.x <= -_this.thresholdX || directions.includes(PanningProvider.Directions.RIGHT) && endValue.x >= _this.thresholdX || directions.includes(PanningProvider.Directions.UP) && endValue.y <= -_this.thresholdY || directions.includes(PanningProvider.Directions.DOWN) && endValue.y >= _this.thresholdY) {\n          var _this$getDismissAnima2 = _this.getDismissAnimationDirection(),\n            _isRight = _this$getDismissAnima2.isRight,\n            _isDown = _this$getDismissAnima2.isDown;\n          _this._animateDismiss(_isRight, _isDown);\n        } else {\n          _this.resetPosition();\n        }\n      }\n    };\n    _this.resetPosition = function () {\n      var animationOptions = _this.props.animationOptions;\n      var _ref = animationOptions || DEFAULT_ANIMATION_OPTIONS,\n        speed = _ref.speed,\n        bounciness = _ref.bounciness;\n      var toX = -_this.left;\n      var toY = -_this.top;\n      var animations = [];\n      if (!_isUndefined(toX)) {\n        animations.push(Animated.spring(_this.animTranslateX, {\n          toValue: Math.round(toX),\n          useNativeDriver: true,\n          speed: speed,\n          bounciness: bounciness\n        }));\n      }\n      if (!_isUndefined(toY)) {\n        animations.push(Animated.spring(_this.animTranslateY, {\n          toValue: Math.round(toY),\n          useNativeDriver: true,\n          speed: speed,\n          bounciness: bounciness\n        }));\n      }\n      _this.setState({\n        isAnimating: true\n      }, function () {\n        Animated.parallel(animations).start(_this.onResetPositionFinished);\n      });\n    };\n    _this.onResetPositionFinished = function () {\n      var runAfterSetState = _this.shouldDismissAfterReset ? _this.animateDismiss : undefined;\n      _this.shouldDismissAfterReset = false;\n      _this.initPositions({\n        isAnimating: false\n      }, runAfterSetState);\n    };\n    _this.getDismissAnimationDirection = function () {\n      var allowDiagonalDismiss = _this.props.allowDiagonalDismiss;\n      var _this$props$context = _this.props.context,\n        swipeDirections = _this$props$context.swipeDirections,\n        swipeVelocities = _this$props$context.swipeVelocities,\n        dragDirections = _this$props$context.dragDirections,\n        dragDeltas = _this$props$context.dragDeltas;\n      var hasHorizontalSwipe = !_isUndefined(swipeDirections.x);\n      var hasVerticalSwipe = !_isUndefined(swipeDirections.y);\n      var isRight;\n      var isDown;\n      if (hasHorizontalSwipe || hasVerticalSwipe) {\n        if (!allowDiagonalDismiss && hasHorizontalSwipe && hasVerticalSwipe) {\n          if (Math.abs(swipeVelocities.y) > Math.abs(swipeVelocities.x)) {\n            isDown = swipeDirections.y === PanningProvider.Directions.DOWN;\n          } else {\n            isRight = swipeDirections.x === PanningProvider.Directions.RIGHT;\n          }\n          return {\n            isRight: isRight,\n            isDown: isDown\n          };\n        }\n        if (hasHorizontalSwipe) {\n          isRight = swipeDirections.x === PanningProvider.Directions.RIGHT;\n        }\n        if (hasVerticalSwipe) {\n          isDown = swipeDirections.y === PanningProvider.Directions.DOWN;\n        }\n      } else {\n        var hasHorizontalDrag = !_isUndefined(dragDirections.x);\n        var hasVerticalDrag = !_isUndefined(dragDirections.y);\n        if (!allowDiagonalDismiss && hasHorizontalDrag && hasVerticalDrag) {\n          if (Math.abs(dragDeltas.y) > Math.abs(dragDeltas.x)) {\n            isDown = dragDirections.y === PanningProvider.Directions.DOWN;\n          } else {\n            isRight = dragDirections.x === PanningProvider.Directions.RIGHT;\n          }\n          return {\n            isRight: isRight,\n            isDown: isDown\n          };\n        }\n        if (hasHorizontalDrag) {\n          isRight = dragDirections.x === PanningProvider.Directions.RIGHT;\n        }\n        if (hasVerticalDrag) {\n          isDown = dragDirections.y === PanningProvider.Directions.DOWN;\n        }\n      }\n      return {\n        isRight: isRight,\n        isDown: isDown\n      };\n    };\n    _this.animateDismiss = function () {\n      var isAnimating = _this.state.isAnimating;\n      if (isAnimating) {\n        _this.shouldDismissAfterReset = true;\n      } else {\n        var _this$props$direction2 = _this.props.directions,\n          directions = _this$props$direction2 === void 0 ? [] : _this$props$direction2;\n        var hasUp = directions.includes(PanningProvider.Directions.UP);\n        var hasRight = directions.includes(PanningProvider.Directions.RIGHT);\n        var hasLeft = directions.includes(PanningProvider.Directions.LEFT);\n        var hasDown = !hasUp && !hasLeft && !hasRight;\n        var verticalDismiss = hasDown ? true : hasUp ? false : undefined;\n        var horizontalDismiss = hasRight ? true : hasLeft ? false : undefined;\n        _this._animateDismiss(horizontalDismiss, verticalDismiss);\n      }\n    };\n    _this._animateDismiss = function (isRight, isDown) {\n      var animationOptions = _this.props.animationOptions;\n      var _ref2 = animationOptions || DEFAULT_ANIMATION_OPTIONS,\n        duration = _ref2.duration;\n      var animations = [];\n      var toX;\n      var toY;\n      if (!_isUndefined(isRight)) {\n        var maxSize = Constants.screenWidth + _this.width;\n        toX = isRight ? maxSize : -maxSize;\n      }\n      if (!_isUndefined(isDown)) {\n        var _maxSize = Constants.screenHeight + _this.height;\n        toY = isDown ? _maxSize : -_maxSize;\n      }\n      if (!_isUndefined(toX)) {\n        animations.push(Animated.timing(_this.animTranslateX, {\n          toValue: Math.round(toX),\n          useNativeDriver: true,\n          duration: duration\n        }));\n      }\n      if (!_isUndefined(toY)) {\n        animations.push(Animated.timing(_this.animTranslateY, {\n          toValue: Math.round(toY),\n          useNativeDriver: true,\n          duration: duration\n        }));\n      }\n      _this.setState({\n        isAnimating: true\n      }, function () {\n        Animated.parallel(animations).start(_this.onDismissAnimationFinished);\n      });\n    };\n    _this.onDismissAnimationFinished = function (_ref3) {\n      var finished = _ref3.finished;\n      if (finished) {\n        _this.props.onDismiss == null ? void 0 : _this.props.onDismiss();\n      }\n    };\n    _this.state = {\n      isAnimating: false\n    };\n    return _this;\n  }\n  _inherits(PanDismissibleView, _PureComponent);\n  return _createClass(PanDismissibleView, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var isAnimating = this.state.isAnimating;\n      var _this$props$context2 = this.props.context,\n        isPanning = _this$props$context2.isPanning,\n        dragDeltas = _this$props$context2.dragDeltas,\n        swipeDirections = _this$props$context2.swipeDirections;\n      var _prevProps$context = prevProps.context,\n        prevIsPanning = _prevProps$context.isPanning,\n        prevDragDeltas = _prevProps$context.dragDeltas,\n        prevSwipeDirections = _prevProps$context.swipeDirections;\n      if (isPanning !== prevIsPanning) {\n        if (isPanning && !isAnimating) {\n          this.onPanStart();\n        } else {\n          this.onPanEnd();\n        }\n      }\n      if (isPanning && (dragDeltas.x || dragDeltas.y) && (dragDeltas.x !== prevDragDeltas.x || dragDeltas.y !== prevDragDeltas.y)) {\n        this.onDrag(dragDeltas);\n      }\n      if (isPanning && (swipeDirections.x || swipeDirections.y) && (swipeDirections.x !== prevSwipeDirections.x || swipeDirections.y !== prevSwipeDirections.y)) {\n        this.onSwipe(swipeDirections);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = this.props.style;\n      var isAnimating = this.state.isAnimating;\n      var transform = isAnimating ? [{\n        translateX: this.animTranslateX\n      }, {\n        translateY: this.animTranslateY\n      }] : [];\n      return _jsxDEV(Animated.View, {\n        ref: this.ref,\n        style: [style, {\n          transform: transform\n        }],\n        onLayout: this.onLayout,\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 12\n      }, this);\n    }\n  }]);\n}(PureComponent);\nPanDismissibleView.displayName = 'PanDismissibleView';\nPanDismissibleView.defaultProps = {\n  directions: DEFAULT_DIRECTIONS,\n  animationOptions: DEFAULT_ANIMATION_OPTIONS,\n  onDismiss: _noop,\n  allowDiagonalDismiss: false\n};\nexport default asPanViewConsumer(PanDismissibleView);","map":{"version":3,"names":["_isUndefined","_get","_noop","React","PureComponent","Animated","Constants","asPanViewConsumer","PanningProvider","jsxDEV","_jsxDEV","DEFAULT_DIRECTIONS","Directions","UP","DOWN","LEFT","RIGHT","DEFAULT_SPEED","DEFAULT_BOUNCINESS","DEFAULT_DISMISS_ANIMATION_DURATION","DEFAULT_ANIMATION_OPTIONS","speed","bounciness","duration","MAXIMUM_DRAGS_AFTER_SWIPE","PanDismissibleView","_PureComponent","props","_this","_classCallCheck","_callSuper","shouldDismissAfterReset","ref","createRef","animTranslateX","Value","animTranslateY","left","top","width","height","thresholdX","thresholdY","swipe","counter","onLayout","event","layout","nativeEvent","threshold","initPositions","extraDataForSetState","runAfterSetState","setNativeProps","setState","_objectSpread","onPanStart","onDrag","deltas","x","Math","round","y","current","style","onSwipe","swipeDirections","onPanEnd","_this$props$direction","directions","_this$getDismissAnima","getDismissAnimationDirection","isRight","isDown","_animateDismiss","endValue","includes","_this$getDismissAnima2","resetPosition","animationOptions","_ref","toX","toY","animations","push","spring","toValue","useNativeDriver","isAnimating","parallel","start","onResetPositionFinished","animateDismiss","undefined","allowDiagonalDismiss","_this$props$context","context","swipeVelocities","dragDirections","dragDeltas","hasHorizontalSwipe","hasVerticalSwipe","abs","hasHorizontalDrag","hasVerticalDrag","state","_this$props$direction2","hasUp","hasRight","hasLeft","hasDown","verticalDismiss","horizontalDismiss","_ref2","maxSize","screenWidth","screenHeight","timing","onDismissAnimationFinished","_ref3","finished","onDismiss","_inherits","_createClass","key","value","componentDidUpdate","prevProps","_this$props$context2","isPanning","_prevProps$context","prevIsPanning","prevDragDeltas","prevSwipeDirections","render","transform","translateX","translateY","View","children","fileName","_jsxFileName","lineNumber","columnNumber","displayName","defaultProps"],"sources":["/workspaces/expo-starter/node_modules/react-native-ui-lib/src/components/panningViews/panDismissibleView.js"],"sourcesContent":["import _isUndefined from \"lodash/isUndefined\";\nimport _get from \"lodash/get\";\nimport _noop from \"lodash/noop\";\nimport React, { PureComponent } from 'react';\nimport { Animated } from 'react-native';\nimport { Constants } from \"../../commons/new\";\nimport asPanViewConsumer from \"./asPanViewConsumer\";\nimport PanningProvider from \"./panningProvider\";\nconst DEFAULT_DIRECTIONS = [PanningProvider.Directions.UP, PanningProvider.Directions.DOWN, PanningProvider.Directions.LEFT, PanningProvider.Directions.RIGHT];\nconst DEFAULT_SPEED = 20;\nconst DEFAULT_BOUNCINESS = 6;\nconst DEFAULT_DISMISS_ANIMATION_DURATION = 280;\nconst DEFAULT_ANIMATION_OPTIONS = {\n  speed: DEFAULT_SPEED,\n  bounciness: DEFAULT_BOUNCINESS,\n  duration: DEFAULT_DISMISS_ANIMATION_DURATION\n};\nconst MAXIMUM_DRAGS_AFTER_SWIPE = 2;\n/**\n * @description: PanDismissibleView component created to making listening to swipe and drag events easier,\n * @notes: Has to be used as a child of a PanningProvider that also has a PanListenerView.\n *         The PanListenerView is the one that sends the drag\\swipe events.\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/PanDismissibleView/PanDismissibleView.gif?raw=true\n */\nclass PanDismissibleView extends PureComponent {\n  static displayName = 'PanDismissibleView';\n  static defaultProps = {\n    directions: DEFAULT_DIRECTIONS,\n    animationOptions: DEFAULT_ANIMATION_OPTIONS,\n    onDismiss: _noop,\n    allowDiagonalDismiss: false\n  };\n  shouldDismissAfterReset = false;\n  ref = React.createRef();\n  animTranslateX = new Animated.Value(0);\n  animTranslateY = new Animated.Value(0);\n  left = 0;\n  top = 0;\n  width = 0;\n  height = 0;\n  thresholdX = 0;\n  thresholdY = 0;\n  swipe = {};\n  counter = 0;\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAnimating: false\n    };\n  }\n  componentDidUpdate(prevProps) {\n    const {\n      isAnimating\n    } = this.state;\n    const {\n      isPanning,\n      dragDeltas,\n      swipeDirections\n    } = this.props.context;\n    const {\n      isPanning: prevIsPanning,\n      dragDeltas: prevDragDeltas,\n      swipeDirections: prevSwipeDirections\n    } = prevProps.context;\n    if (isPanning !== prevIsPanning) {\n      if (isPanning && !isAnimating) {\n        // do not start a new pan if we're still animating\n        this.onPanStart();\n      } else {\n        this.onPanEnd();\n      }\n    }\n    if (isPanning && (dragDeltas.x || dragDeltas.y) && (dragDeltas.x !== prevDragDeltas.x || dragDeltas.y !== prevDragDeltas.y)) {\n      this.onDrag(dragDeltas);\n    }\n    if (isPanning && (swipeDirections.x || swipeDirections.y) && (swipeDirections.x !== prevSwipeDirections.x || swipeDirections.y !== prevSwipeDirections.y)) {\n      this.onSwipe(swipeDirections);\n    }\n  }\n  onLayout = event => {\n    if (this.height === 0) {\n      const layout = event.nativeEvent.layout;\n      const {\n        threshold\n      } = this.props;\n      this.height = layout.height;\n      this.thresholdY = _get(threshold, 'y', layout.height / 2);\n      this.width = layout.width;\n      this.thresholdX = _get(threshold, 'x', layout.width / 2);\n      this.initPositions();\n    }\n  };\n  initPositions = (extraDataForSetState, runAfterSetState) => {\n    this.setNativeProps(0, 0);\n    this.animTranslateX = new Animated.Value(0);\n    this.animTranslateY = new Animated.Value(0);\n    this.setState({\n      ...extraDataForSetState\n    }, runAfterSetState);\n  };\n  onPanStart = () => {\n    this.swipe = {};\n    this.counter = 0;\n  };\n  onDrag = deltas => {\n    const left = deltas.x ? Math.round(deltas.x) : 0;\n    const top = deltas.y ? Math.round(deltas.y) : 0;\n    this.setNativeProps(left, top);\n    if (this.swipe.x || this.swipe.y) {\n      if (this.counter < MAXIMUM_DRAGS_AFTER_SWIPE) {\n        this.counter += 1;\n      } else {\n        this.swipe = {};\n      }\n    }\n  };\n  setNativeProps = (left, top) => {\n    if (this.ref.current) {\n      this.ref.current.setNativeProps({\n        style: {\n          left,\n          top\n        }\n      });\n      this.left = left;\n      this.top = top;\n    }\n  };\n  onSwipe = swipeDirections => {\n    this.swipe = swipeDirections;\n  };\n  onPanEnd = () => {\n    const {\n      directions = DEFAULT_DIRECTIONS\n    } = this.props;\n    if (this.swipe.x || this.swipe.y) {\n      const {\n        isRight,\n        isDown\n      } = this.getDismissAnimationDirection();\n      this._animateDismiss(isRight, isDown);\n    } else {\n      const endValue = {\n        x: Math.round(this.left),\n        y: Math.round(this.top)\n      };\n      if (directions.includes(PanningProvider.Directions.LEFT) && endValue.x <= -this.thresholdX || directions.includes(PanningProvider.Directions.RIGHT) && endValue.x >= this.thresholdX || directions.includes(PanningProvider.Directions.UP) && endValue.y <= -this.thresholdY || directions.includes(PanningProvider.Directions.DOWN) && endValue.y >= this.thresholdY) {\n        const {\n          isRight,\n          isDown\n        } = this.getDismissAnimationDirection();\n        this._animateDismiss(isRight, isDown);\n      } else {\n        this.resetPosition();\n      }\n    }\n  };\n  resetPosition = () => {\n    const {\n      animationOptions\n    } = this.props;\n    const {\n      speed,\n      bounciness\n    } = animationOptions || DEFAULT_ANIMATION_OPTIONS;\n    const toX = -this.left;\n    const toY = -this.top;\n    const animations = [];\n    if (!_isUndefined(toX)) {\n      animations.push(Animated.spring(this.animTranslateX, {\n        toValue: Math.round(toX),\n        useNativeDriver: true,\n        speed,\n        bounciness\n      }));\n    }\n    if (!_isUndefined(toY)) {\n      animations.push(Animated.spring(this.animTranslateY, {\n        toValue: Math.round(toY),\n        useNativeDriver: true,\n        speed,\n        bounciness\n      }));\n    }\n    this.setState({\n      isAnimating: true\n    }, () => {\n      Animated.parallel(animations).start(this.onResetPositionFinished);\n    });\n  };\n  onResetPositionFinished = () => {\n    const runAfterSetState = this.shouldDismissAfterReset ? this.animateDismiss : undefined;\n    this.shouldDismissAfterReset = false;\n    this.initPositions({\n      isAnimating: false\n    }, runAfterSetState);\n  };\n  getDismissAnimationDirection = () => {\n    const {\n      allowDiagonalDismiss\n    } = this.props;\n    const {\n      swipeDirections,\n      swipeVelocities,\n      dragDirections,\n      dragDeltas\n    } = this.props.context;\n    const hasHorizontalSwipe = !_isUndefined(swipeDirections.x);\n    const hasVerticalSwipe = !_isUndefined(swipeDirections.y);\n    let isRight;\n    let isDown;\n    if (hasHorizontalSwipe || hasVerticalSwipe) {\n      if (!allowDiagonalDismiss && hasHorizontalSwipe && hasVerticalSwipe) {\n        // @ts-ignore\n        if (Math.abs(swipeVelocities.y) > Math.abs(swipeVelocities.x)) {\n          isDown = swipeDirections.y === PanningProvider.Directions.DOWN;\n        } else {\n          isRight = swipeDirections.x === PanningProvider.Directions.RIGHT;\n        }\n        return {\n          isRight,\n          isDown\n        };\n      }\n      if (hasHorizontalSwipe) {\n        isRight = swipeDirections.x === PanningProvider.Directions.RIGHT;\n      }\n      if (hasVerticalSwipe) {\n        isDown = swipeDirections.y === PanningProvider.Directions.DOWN;\n      }\n    } else {\n      // got here from a drag beyond threshold\n      const hasHorizontalDrag = !_isUndefined(dragDirections.x);\n      const hasVerticalDrag = !_isUndefined(dragDirections.y);\n      if (!allowDiagonalDismiss && hasHorizontalDrag && hasVerticalDrag) {\n        // @ts-ignore\n        if (Math.abs(dragDeltas.y) > Math.abs(dragDeltas.x)) {\n          isDown = dragDirections.y === PanningProvider.Directions.DOWN;\n        } else {\n          isRight = dragDirections.x === PanningProvider.Directions.RIGHT;\n        }\n        return {\n          isRight,\n          isDown\n        };\n      }\n      if (hasHorizontalDrag) {\n        isRight = dragDirections.x === PanningProvider.Directions.RIGHT;\n      }\n      if (hasVerticalDrag) {\n        isDown = dragDirections.y === PanningProvider.Directions.DOWN;\n      }\n    }\n    return {\n      isRight,\n      isDown\n    };\n  };\n\n  // Send undefined to not animate in the horizontal\\vertical direction\n  // isRight === true --> animate to the right\n  // isRight === false --> animate to the left\n  // isDown === true --> animate to the bottom\n  // isDown === false --> animate to the top\n  animateDismiss = () => {\n    const {\n      isAnimating\n    } = this.state;\n    if (isAnimating) {\n      this.shouldDismissAfterReset = true;\n    } else {\n      const {\n        directions = []\n      } = this.props;\n      const hasUp = directions.includes(PanningProvider.Directions.UP);\n      const hasRight = directions.includes(PanningProvider.Directions.RIGHT);\n      const hasLeft = directions.includes(PanningProvider.Directions.LEFT);\n      const hasDown = !hasUp && !hasLeft && !hasRight; // default\n      const verticalDismiss = hasDown ? true : hasUp ? false : undefined;\n      const horizontalDismiss = hasRight ? true : hasLeft ? false : undefined;\n      this._animateDismiss(horizontalDismiss, verticalDismiss);\n    }\n  };\n  _animateDismiss = (isRight, isDown) => {\n    const {\n      animationOptions\n    } = this.props;\n    const {\n      duration\n    } = animationOptions || DEFAULT_ANIMATION_OPTIONS;\n    const animations = [];\n    let toX;\n    let toY;\n    if (!_isUndefined(isRight)) {\n      const maxSize = Constants.screenWidth + this.width;\n      toX = isRight ? maxSize : -maxSize;\n    }\n    if (!_isUndefined(isDown)) {\n      const maxSize = Constants.screenHeight + this.height;\n      toY = isDown ? maxSize : -maxSize;\n    }\n    if (!_isUndefined(toX)) {\n      animations.push(Animated.timing(this.animTranslateX, {\n        toValue: Math.round(toX),\n        useNativeDriver: true,\n        duration\n      }));\n    }\n    if (!_isUndefined(toY)) {\n      animations.push(Animated.timing(this.animTranslateY, {\n        toValue: Math.round(toY),\n        useNativeDriver: true,\n        duration\n      }));\n    }\n    this.setState({\n      isAnimating: true\n    }, () => {\n      Animated.parallel(animations).start(this.onDismissAnimationFinished);\n    });\n  };\n  onDismissAnimationFinished = ({\n    finished\n  }) => {\n    if (finished) {\n      this.props.onDismiss?.();\n    }\n  };\n  render() {\n    const {\n      style\n    } = this.props;\n    const {\n      isAnimating\n    } = this.state;\n    const transform = isAnimating ? [{\n      translateX: this.animTranslateX\n    }, {\n      translateY: this.animTranslateY\n    }] : [];\n    return <Animated.View\n    // @ts-ignore\n    ref={this.ref} style={[style, {\n      transform\n    }]} onLayout={this.onLayout}>\n        {this.props.children}\n      </Animated.View>;\n  }\n}\nexport default asPanViewConsumer(PanDismissibleView);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Navio } from 'rn-navio';\nimport { Main } from \"./screens/main\";\nimport { Playground } from \"./screens/playground\";\nimport { PlaygroundFlashList } from \"./screens/playground/flash-list\";\nimport { PlaygroundExpoImage } from \"./screens/playground/expo-image\";\nimport { Settings } from \"./screens/settings\";\nimport { Example } from \"./screens/_screen-sample\";\nimport { useAppearance } from \"./utils/hooks\";\nimport { screenDefaultOptions, tabScreenDefaultOptions, getTabBarIcon, drawerScreenDefaultOptions } from \"./utils/designSystem\";\nimport { services } from \"./services\";\nimport { AuthLogin } from \"./screens/auth/login\";\nexport var navio = Navio.build({\n  screens: {\n    Main: Main,\n    Settings: Settings,\n    Example: Example,\n    Playground: Playground,\n    PlaygroundFlashList: PlaygroundFlashList,\n    PlaygroundExpoImage: PlaygroundExpoImage,\n    ProductPage: {\n      component: Example,\n      options: {\n        headerShown: false\n      }\n    },\n    AuthLogin: AuthLogin\n  },\n  stacks: {\n    MainStack: ['Main', 'Example'],\n    ExampleStack: {\n      screens: ['Example'],\n      navigatorProps: {\n        screenListeners: {\n          focus: function focus() {}\n        }\n      }\n    },\n    PlaygroundStack: {\n      screens: ['Playground', 'PlaygroundFlashList', 'PlaygroundExpoImage']\n    },\n    ProductPageStack: {\n      screens: ['ProductPage'],\n      containerOptions: {\n        headerShown: true,\n        title: 'Product page'\n      }\n    },\n    AuthFlow: ['AuthLogin', 'Example']\n  },\n  tabs: {\n    AppTabs: {\n      layout: {\n        MainTab: {\n          stack: 'MainStack',\n          options: function options() {\n            return {\n              title: 'Main',\n              tabBarIcon: getTabBarIcon('MainTab')\n            };\n          }\n        },\n        PlaygroundTab: {\n          stack: 'PlaygroundStack',\n          options: function options() {\n            return {\n              title: 'Playground',\n              tabBarIcon: getTabBarIcon('PlaygroundTab')\n            };\n          }\n        },\n        SettingsTab: {\n          stack: ['Settings'],\n          options: function options() {\n            return {\n              title: services.t.do('settings.title'),\n              tabBarIcon: getTabBarIcon('SettingsTab'),\n              tabBarBadge: 23\n            };\n          }\n        }\n      }\n    }\n  },\n  drawers: {\n    AppDrawer: {\n      layout: {\n        Main: {\n          stack: 'MainStack',\n          options: {\n            drawerType: 'front'\n          }\n        },\n        Example: {\n          stack: ['Example']\n        },\n        Playground: {\n          stack: 'PlaygroundStack'\n        }\n      }\n    }\n  },\n  modals: {\n    ExampleModal: {\n      stack: 'ExampleStack'\n    }\n  },\n  root: 'tabs.AppTabs',\n  hooks: [useAppearance],\n  defaultOptions: {\n    stacks: {\n      screen: screenDefaultOptions\n    },\n    tabs: {\n      screen: tabScreenDefaultOptions\n    },\n    drawers: {\n      screen: drawerScreenDefaultOptions\n    }\n  }\n});\nexport var getNavio = function getNavio() {\n  return navio;\n};\nexport var NavioApp = navio.App;","map":{"version":3,"names":["Navio","Main","Playground","PlaygroundFlashList","PlaygroundExpoImage","Settings","Example","useAppearance","screenDefaultOptions","tabScreenDefaultOptions","getTabBarIcon","drawerScreenDefaultOptions","services","AuthLogin","navio","build","screens","ProductPage","component","options","headerShown","stacks","MainStack","ExampleStack","navigatorProps","screenListeners","focus","PlaygroundStack","ProductPageStack","containerOptions","title","AuthFlow","tabs","AppTabs","layout","MainTab","stack","tabBarIcon","PlaygroundTab","SettingsTab","t","do","tabBarBadge","drawers","AppDrawer","drawerType","modals","ExampleModal","root","hooks","defaultOptions","screen","getNavio","NavioApp","App"],"sources":["/workspaces/expo-starter/src/navio.tsx"],"sourcesContent":["import {Navio} from 'rn-navio';\n\nimport {Main} from '@app/screens/main';\nimport {Playground} from '@app/screens/playground';\nimport {PlaygroundFlashList} from '@app/screens/playground/flash-list';\nimport {PlaygroundExpoImage} from '@app/screens/playground/expo-image';\nimport {Settings} from '@app/screens/settings';\nimport {Example} from '@app/screens/_screen-sample';\n\nimport {useAppearance} from '@app/utils/hooks';\nimport {\n  screenDefaultOptions,\n  tabScreenDefaultOptions,\n  getTabBarIcon,\n  drawerScreenDefaultOptions,\n} from '@app/utils/designSystem';\nimport {services} from '@app/services';\nimport {AuthLogin} from './screens/auth/login';\n\n// NAVIO\nexport const navio = Navio.build({\n  screens: {\n    Main,\n    Settings,\n    Example,\n\n    Playground,\n    PlaygroundFlashList,\n    PlaygroundExpoImage,\n\n    // for .pushStack example\n    ProductPage: {\n      component: Example,\n      options: {\n        headerShown: false,\n      },\n    },\n\n    // for auth flow\n    AuthLogin,\n  },\n  stacks: {\n    MainStack: ['Main', 'Example'],\n    ExampleStack: {\n      screens: ['Example'],\n      navigatorProps: {\n        screenListeners: {\n          focus: () => {},\n        },\n      },\n    },\n    PlaygroundStack: {\n      screens: ['Playground', 'PlaygroundFlashList', 'PlaygroundExpoImage'],\n    },\n\n    // for .pushStack example\n    ProductPageStack: {\n      screens: ['ProductPage'],\n      containerOptions: {\n        headerShown: true,\n        title: 'Product page',\n      },\n    },\n\n    // for auth flow\n    AuthFlow: ['AuthLogin', 'Example'],\n  },\n  tabs: {\n    // main 3 tabs\n    AppTabs: {\n      layout: {\n        MainTab: {\n          stack: 'MainStack',\n          options: () => ({\n            title: 'Main',\n            tabBarIcon: getTabBarIcon('MainTab'),\n          }),\n        },\n        PlaygroundTab: {\n          stack: 'PlaygroundStack',\n          options: () => ({\n            title: 'Playground',\n            tabBarIcon: getTabBarIcon('PlaygroundTab'),\n          }),\n        },\n        SettingsTab: {\n          stack: ['Settings'],\n          options: () => ({\n            title: services.t.do('settings.title'),\n            tabBarIcon: getTabBarIcon('SettingsTab'),\n            tabBarBadge: 23,\n          }),\n        },\n      },\n    },\n\n    // tabs with drawer\n    // TabsWithDrawer: {\n    //   layout: {\n    //     MainTab: {\n    //       stack: 'MainStack',\n    //       options: () => ({\n    //         title: 'Main',\n    //         tabBarIcon: getTabBarIcon('MainTab'),\n    //       }),\n    //     },\n    //     PlaygroundTab: {\n    //       drawer: 'DrawerForTabs',\n    //       options: () => ({\n    //         title: 'Playground',\n    //         tabBarIcon: getTabBarIcon('PlaygroundTab'),\n    //       }),\n    //     },\n    //   },\n    // },\n  },\n  drawers: {\n    // main drawer\n    AppDrawer: {\n      layout: {\n        Main: {\n          stack: 'MainStack',\n          options: {\n            drawerType: 'front',\n          },\n        },\n        Example: {\n          stack: ['Example'],\n        },\n        Playground: {\n          stack: 'PlaygroundStack',\n        },\n        // Tabs: {\n        //   tabs: 'TabsWithDrawer',\n        // },\n      },\n    },\n\n    // drawer inside tabs\n    // DrawerForTabs: {\n    //   layout: {\n    //     FlashList: {\n    //       stack: ['PlaygroundFlashList'],\n    //       options: {\n    //         title: 'Flash List',\n    //         drawerPosition: 'right',\n    //       },\n    //     },\n    //     ExpoImage: {\n    //       stack: ['PlaygroundExpoImage'],\n    //       options: {\n    //         title: 'Expo Image',\n    //         drawerPosition: 'right',\n    //       },\n    //     },\n    //   },\n    // },\n  },\n  modals: {\n    ExampleModal: {stack: 'ExampleStack'},\n  },\n  root: 'tabs.AppTabs',\n  hooks: [useAppearance],\n  defaultOptions: {\n    stacks: {\n      screen: screenDefaultOptions,\n    },\n    tabs: {\n      screen: tabScreenDefaultOptions,\n    },\n    drawers: {\n      screen: drawerScreenDefaultOptions,\n    },\n  },\n});\n\nexport const getNavio = () => navio;\nexport const NavioApp = navio.App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
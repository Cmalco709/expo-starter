{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/workspaces/expo-starter/node_modules/react-native-ui-lib/src/components/connectionStatusBar/index.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport _lowerCase from \"lodash/lowerCase\";\nimport _isFunction from \"lodash/isFunction\";\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NetInfoPackage as NetInfo } from \"../../optionalDependencies\";\nimport { Colors, Typography } from \"../../style\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport View from \"../view\";\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport { ConnectionStatusBarProps, DEFAULT_PROPS } from \"./Types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport { ConnectionStatusBarProps };\nvar ConnectionStatusBar = function (_PureComponent) {\n  function ConnectionStatusBar(props) {\n    var _this;\n    _classCallCheck(this, ConnectionStatusBar);\n    _this = _callSuper(this, ConnectionStatusBar, [props]);\n    _this.generateStyles();\n    _this.onConnectionChange = _this.onConnectionChange.bind(_this);\n    _this.state = {\n      isConnected: true,\n      isCancelled: false\n    };\n    if (NetInfo) {\n      _this.getInitialConnectionState();\n    } else {\n      console.error(`RNUILib ConnectionStatusBar component requires installing \"@react-native-community/netinfo\" dependency`);\n    }\n    return _this;\n  }\n  _inherits(ConnectionStatusBar, _PureComponent);\n  return _createClass(ConnectionStatusBar, [{\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = createStyles();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.unsubscribe = NetInfo == null ? void 0 : NetInfo.addEventListener(this.onConnectionChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.unsubscribe) {\n        this.unsubscribe();\n      }\n    }\n  }, {\n    key: \"onConnectionChange\",\n    value: function onConnectionChange(state) {\n      var _this2 = this;\n      var isConnected = this.isStateConnected(state);\n      if (isConnected !== this.state.isConnected) {\n        this.setState({\n          isConnected: isConnected,\n          isCancelled: false\n        });\n        if (this.props.onConnectionChange) {\n          this.props.onConnectionChange(isConnected, false);\n        }\n        if (!isConnected) {\n          setTimeout(function () {\n            _this2.getInitialConnectionState();\n          }, 3000);\n        }\n        if (!isConnected && _isFunction(ConnectionStatusBar.onConnectionLost)) {\n          ConnectionStatusBar.onConnectionLost();\n        }\n      }\n    }\n  }, {\n    key: \"getInitialConnectionState\",\n    value: function () {\n      var _getInitialConnectionState = _asyncToGenerator(function* () {\n        var isConnected = (yield NetInfo == null ? void 0 : NetInfo.fetch()).isConnected;\n        this.setState({\n          isConnected: isConnected\n        });\n        if (this.props.onConnectionChange) {\n          this.props.onConnectionChange(isConnected, true);\n        }\n      });\n      function getInitialConnectionState() {\n        return _getInitialConnectionState.apply(this, arguments);\n      }\n      return getInitialConnectionState;\n    }()\n  }, {\n    key: \"isStateConnected\",\n    value: function isStateConnected(state) {\n      var lowerCaseState = _lowerCase(state.type);\n      var isConnected = lowerCaseState !== 'none';\n      return isConnected;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      if (this.state.isConnected || this.state.isCancelled) {\n        return false;\n      }\n      var containerStyle = [this.styles.topContainer, this.props.useAbsolutePosition ? this.styles.absolutePosition : null];\n      return _jsxDEV(View, {\n        useSafeArea: true,\n        style: containerStyle,\n        children: _jsxDEV(View, {\n          style: this.styles.container,\n          children: _jsxDEV(View, {\n            style: {\n              flex: 1,\n              flexDirection: 'row'\n            },\n            children: [_jsxDEV(Text, {\n              style: this.styles.text,\n              children: this.props.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 13\n            }, this), this.props.allowDismiss && _jsxDEV(TouchableOpacity, {\n              style: this.styles.xContainer,\n              onPress: function onPress() {\n                return _this3.setState({\n                  isCancelled: true\n                });\n              },\n              children: _jsxDEV(Text, {\n                style: this.styles.x,\n                children: \"\\u2715\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 12\n      }, this);\n    }\n  }], [{\n    key: \"registerGlobalOnConnectionLost\",\n    value: function registerGlobalOnConnectionLost(callback) {\n      ConnectionStatusBar.onConnectionLost = callback;\n    }\n  }, {\n    key: \"unregisterGlobalOnConnectionLost\",\n    value: function unregisterGlobalOnConnectionLost() {\n      delete ConnectionStatusBar.onConnectionLost;\n    }\n  }]);\n}(PureComponent);\nConnectionStatusBar.displayName = 'ConnectionStatusBar';\nConnectionStatusBar.defaultProps = DEFAULT_PROPS;\nfunction createStyles() {\n  var _Typography$text;\n  var typography = Constants.isSmallScreen ? Typography.text90 : Typography.text80;\n  return StyleSheet.create({\n    topContainer: {\n      backgroundColor: Colors.grey30\n    },\n    absolutePosition: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n      bottom: undefined\n    }),\n    container: {\n      flexDirection: 'column',\n      justifyContent: 'center'\n    },\n    text: _objectSpread(_objectSpread({\n      flex: 1\n    }, typography), {}, {\n      textAlign: 'center',\n      color: Colors.grey60,\n      marginTop: 8,\n      marginBottom: 8,\n      alignSelf: 'center'\n    }),\n    xContainer: {\n      paddingLeft: 10,\n      paddingRight: 10,\n      alignSelf: 'center'\n    },\n    x: {\n      fontSize: (_Typography$text = Typography.text80) == null ? void 0 : _Typography$text.fontSize,\n      color: Colors.black\n    }\n  });\n}\nexport { ConnectionStatusBar };\nexport default asBaseComponent(ConnectionStatusBar);","map":{"version":3,"names":["_lowerCase","_isFunction","React","PureComponent","StyleSheet","Text","NetInfoPackage","NetInfo","Colors","Typography","TouchableOpacity","View","Constants","asBaseComponent","ConnectionStatusBarProps","DEFAULT_PROPS","jsxDEV","_jsxDEV","ConnectionStatusBar","_PureComponent","props","_this","_classCallCheck","_callSuper","generateStyles","onConnectionChange","bind","state","isConnected","isCancelled","getInitialConnectionState","console","error","_inherits","_createClass","key","value","styles","createStyles","componentDidMount","unsubscribe","addEventListener","componentWillUnmount","_this2","isStateConnected","setState","setTimeout","onConnectionLost","_getInitialConnectionState","_asyncToGenerator","fetch","apply","arguments","lowerCaseState","type","render","_this3","containerStyle","topContainer","useAbsolutePosition","absolutePosition","useSafeArea","style","children","container","flex","flexDirection","text","label","fileName","_jsxFileName","lineNumber","columnNumber","allowDismiss","xContainer","onPress","x","registerGlobalOnConnectionLost","callback","unregisterGlobalOnConnectionLost","displayName","defaultProps","_Typography$text","typography","isSmallScreen","text90","text80","create","backgroundColor","grey30","_objectSpread","absoluteFillObject","bottom","undefined","justifyContent","textAlign","color","grey60","marginTop","marginBottom","alignSelf","paddingLeft","paddingRight","fontSize","black"],"sources":["/workspaces/expo-starter/node_modules/react-native-ui-lib/src/components/connectionStatusBar/index.js"],"sourcesContent":["import _lowerCase from \"lodash/lowerCase\";\nimport _isFunction from \"lodash/isFunction\";\nimport React, { PureComponent } from 'react';\nimport { StyleSheet, Text } from 'react-native';\nimport { NetInfoPackage as NetInfo } from \"../../optionalDependencies\";\nimport { Colors, Typography } from \"../../style\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport View from \"../view\";\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport { ConnectionStatusBarProps, DEFAULT_PROPS } from \"./Types\";\nexport { ConnectionStatusBarProps };\n\n/**\n * @description: Top bar to show a \"no internet\" connection status. Note: Run on real device for best results\n * @image: https://user-images.githubusercontent.com/33805983/34683190-f3b1904c-f4a9-11e7-9d46-9a340bd35448.png, https://user-images.githubusercontent.com/33805983/34484206-edc6c6e4-efcb-11e7-88b2-cd394c19dd5e.png\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ConnectionStatusBarScreen.tsx\n * @notes: The component requires installing the '@react-native-community/netinfo' native library\n */\nclass ConnectionStatusBar extends PureComponent {\n  static displayName = 'ConnectionStatusBar';\n  static defaultProps = DEFAULT_PROPS;\n  static registerGlobalOnConnectionLost(callback) {\n    ConnectionStatusBar.onConnectionLost = callback;\n  }\n  static unregisterGlobalOnConnectionLost() {\n    delete ConnectionStatusBar.onConnectionLost;\n  }\n  constructor(props) {\n    super(props);\n    this.generateStyles();\n    this.onConnectionChange = this.onConnectionChange.bind(this);\n    this.state = {\n      isConnected: true,\n      isCancelled: false\n    };\n    if (NetInfo) {\n      this.getInitialConnectionState();\n    } else {\n      console.error(`RNUILib ConnectionStatusBar component requires installing \"@react-native-community/netinfo\" dependency`);\n    }\n  }\n  generateStyles() {\n    this.styles = createStyles();\n  }\n  componentDidMount() {\n    this.unsubscribe = NetInfo?.addEventListener(this.onConnectionChange);\n  }\n  componentWillUnmount() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n    }\n  }\n  onConnectionChange(state) {\n    const isConnected = this.isStateConnected(state);\n    if (isConnected !== this.state.isConnected) {\n      this.setState({\n        isConnected,\n        isCancelled: false\n      });\n      if (this.props.onConnectionChange) {\n        this.props.onConnectionChange(isConnected, false);\n      }\n      if (!isConnected) {\n        setTimeout(() => {\n          this.getInitialConnectionState();\n        }, 3000);\n      }\n      if (!isConnected && _isFunction(ConnectionStatusBar.onConnectionLost)) {\n        ConnectionStatusBar.onConnectionLost();\n      }\n    }\n  }\n  async getInitialConnectionState() {\n    const isConnected = (await NetInfo?.fetch()).isConnected;\n    this.setState({\n      isConnected\n    });\n    if (this.props.onConnectionChange) {\n      this.props.onConnectionChange(isConnected, true);\n    }\n  }\n  isStateConnected(state) {\n    const lowerCaseState = _lowerCase(state.type);\n    const isConnected = lowerCaseState !== 'none';\n    return isConnected;\n  }\n  render() {\n    if (this.state.isConnected || this.state.isCancelled) {\n      return false;\n    }\n    const containerStyle = [this.styles.topContainer, this.props.useAbsolutePosition ? this.styles.absolutePosition : null];\n    return <View useSafeArea style={containerStyle}>\n        <View style={this.styles.container}>\n          <View style={{\n          flex: 1,\n          flexDirection: 'row'\n        }}>\n            <Text style={this.styles.text}>{this.props.label}</Text>\n            {this.props.allowDismiss && <TouchableOpacity style={this.styles.xContainer} onPress={() => this.setState({\n            isCancelled: true\n          })}>\n                <Text style={this.styles.x}>✕</Text>\n              </TouchableOpacity>}\n          </View>\n        </View>\n      </View>;\n  }\n}\nfunction createStyles() {\n  const typography = Constants.isSmallScreen ? Typography.text90 : Typography.text80;\n  return StyleSheet.create({\n    topContainer: {\n      backgroundColor: Colors.grey30\n    },\n    absolutePosition: {\n      ...StyleSheet.absoluteFillObject,\n      bottom: undefined\n    },\n    container: {\n      flexDirection: 'column',\n      justifyContent: 'center'\n    },\n    text: {\n      flex: 1,\n      ...typography,\n      textAlign: 'center',\n      color: Colors.grey60,\n      marginTop: 8,\n      marginBottom: 8,\n      alignSelf: 'center'\n    },\n    xContainer: {\n      paddingLeft: 10,\n      paddingRight: 10,\n      alignSelf: 'center'\n    },\n    x: {\n      fontSize: Typography.text80?.fontSize,\n      color: Colors.black\n    }\n  });\n}\nexport { ConnectionStatusBar }; // For tests\n\nexport default asBaseComponent(ConnectionStatusBar);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
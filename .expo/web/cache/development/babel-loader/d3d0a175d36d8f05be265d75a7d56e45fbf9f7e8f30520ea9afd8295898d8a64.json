{"ast":null,"code":"var _jsxFileName = \"/workspaces/expo-starter/node_modules/react-native-ui-lib/src/incubator/TextField/CharCounter.js\",\n  _this = this;\nimport _size from \"lodash/size\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport React, { useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"../../components/text\";\nimport FieldContext from \"./FieldContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CharCounter = function CharCounter(_ref) {\n  var maxLength = _ref.maxLength,\n    charCounterStyle = _ref.charCounterStyle,\n    testID = _ref.testID;\n  var _useContext = useContext(FieldContext),\n    value = _useContext.value;\n  if (_isUndefined(maxLength)) {\n    return null;\n  }\n  return _jsxDEV(Text, {\n    $textNeutral: true,\n    style: [styles.container, charCounterStyle],\n    testID: testID,\n    children: `${_size(value)}/${maxLength}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    textAlign: 'right'\n  }\n});\nCharCounter.displayName = 'Incubator.TextField';\nexport default CharCounter;","map":{"version":3,"names":["_size","_isUndefined","React","useContext","StyleSheet","Text","FieldContext","jsxDEV","_jsxDEV","CharCounter","_ref","maxLength","charCounterStyle","testID","_useContext","value","$textNeutral","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","create","flexGrow","textAlign","displayName"],"sources":["/workspaces/expo-starter/node_modules/react-native-ui-lib/src/incubator/TextField/CharCounter.js"],"sourcesContent":["import _size from \"lodash/size\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport React, { useContext } from 'react';\nimport { StyleSheet } from 'react-native';\nimport Text from \"../../components/text\";\nimport FieldContext from \"./FieldContext\";\nconst CharCounter = ({\n  maxLength,\n  charCounterStyle,\n  testID\n}) => {\n  const {\n    value\n  } = useContext(FieldContext);\n  if (_isUndefined(maxLength)) {\n    return null;\n  }\n  return <Text $textNeutral style={[styles.container, charCounterStyle]} testID={testID}>\n      {`${_size(value)}/${maxLength}`}\n    </Text>;\n};\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    textAlign: 'right'\n  }\n});\nCharCounter.displayName = 'Incubator.TextField';\nexport default CharCounter;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,aAAa;AAC/B,OAAOC,YAAY,MAAM,oBAAoB;AAC7C,OAAOC,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAE1C,OAAOC,IAAI;AACX,OAAOC,YAAY;AAAuB,SAAAC,MAAA,IAAAC,OAAA;AAC1C,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAIX;EAAA,IAHJC,SAAS,GAAAD,IAAA,CAATC,SAAS;IACTC,gBAAgB,GAAAF,IAAA,CAAhBE,gBAAgB;IAChBC,MAAM,GAAAH,IAAA,CAANG,MAAM;EAEN,IAAAC,WAAA,GAEIX,UAAU,CAACG,YAAY,CAAC;IAD1BS,KAAK,GAAAD,WAAA,CAALC,KAAK;EAEP,IAAId,YAAY,CAACU,SAAS,CAAC,EAAE;IAC3B,OAAO,IAAI;EACb;EACA,OAAOH,OAAA,CAACH,IAAI;IAACW,YAAY;IAACC,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAEP,gBAAgB,CAAE;IAACC,MAAM,EAAEA,MAAO;IAAAO,QAAA,EACjF,GAAGpB,KAAK,CAACe,KAAK,CAAC,IAAIJ,SAAS;EAAE;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KAC3B,CAAC;AACX,CAAC;AACD,IAAMP,MAAM,GAAGd,UAAU,CAACsB,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,QAAQ,EAAE,CAAC;IACXC,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AACFnB,WAAW,CAACoB,WAAW,GAAG,qBAAqB;AAC/C,eAAepB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
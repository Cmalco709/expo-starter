{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/workspaces/expo-starter/node_modules/react-native-ui-lib/src/incubator/TextField/Label.js\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useContext, useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Colors } from \"../../style\";\nimport Text from \"../../components/text\";\nimport { ValidationMessagePosition } from \"./types\";\nimport { getColorByState } from \"./Presenter\";\nimport FieldContext from \"./FieldContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar DEFAULT_LABEL_COLOR = {\n  default: Colors.$textDefault,\n  readonly: Colors.$textNeutral\n};\nvar Label = function Label(_ref) {\n  var label = _ref.label,\n    _ref$labelColor = _ref.labelColor,\n    labelColor = _ref$labelColor === void 0 ? DEFAULT_LABEL_COLOR : _ref$labelColor,\n    labelStyle = _ref.labelStyle,\n    labelProps = _ref.labelProps,\n    validationMessagePosition = _ref.validationMessagePosition,\n    floatingPlaceholder = _ref.floatingPlaceholder,\n    testID = _ref.testID;\n  var context = useContext(FieldContext);\n  var forceHidingLabel = !context.isValid && validationMessagePosition === ValidationMessagePosition.TOP;\n  var style = useMemo(function () {\n    return [styles.label, labelStyle, floatingPlaceholder && styles.dummyPlaceholder];\n  }, [labelStyle, floatingPlaceholder]);\n  if ((label || floatingPlaceholder) && !forceHidingLabel) {\n    return _jsxDEV(Text, _objectSpread(_objectSpread({\n      testID: testID,\n      color: getColorByState(labelColor, context),\n      style: style\n    }, labelProps), {}, {\n      children: label\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, _this);\n  }\n  return null;\n};\nvar styles = StyleSheet.create({\n  label: {\n    minHeight: 20\n  },\n  dummyPlaceholder: {\n    opacity: 0\n  }\n});\nLabel.displayName = 'Incubator.TextField';\nexport default Label;","map":{"version":3,"names":["React","useContext","useMemo","StyleSheet","Colors","Text","ValidationMessagePosition","getColorByState","FieldContext","jsxDEV","_jsxDEV","DEFAULT_LABEL_COLOR","default","$textDefault","readonly","$textNeutral","Label","_ref","label","_ref$labelColor","labelColor","labelStyle","labelProps","validationMessagePosition","floatingPlaceholder","testID","context","forceHidingLabel","isValid","TOP","style","styles","dummyPlaceholder","_objectSpread","color","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","create","minHeight","opacity","displayName"],"sources":["/workspaces/expo-starter/node_modules/react-native-ui-lib/src/incubator/TextField/Label.js"],"sourcesContent":["import React, { useContext, useMemo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Colors } from \"../../style\";\nimport Text from \"../../components/text\";\nimport { ValidationMessagePosition } from \"./types\";\nimport { getColorByState } from \"./Presenter\";\nimport FieldContext from \"./FieldContext\";\nconst DEFAULT_LABEL_COLOR = {\n  default: Colors.$textDefault,\n  readonly: Colors.$textNeutral\n};\nconst Label = ({\n  label,\n  labelColor = DEFAULT_LABEL_COLOR,\n  labelStyle,\n  labelProps,\n  validationMessagePosition,\n  floatingPlaceholder,\n  testID\n}) => {\n  const context = useContext(FieldContext);\n  const forceHidingLabel = !context.isValid && validationMessagePosition === ValidationMessagePosition.TOP;\n  const style = useMemo(() => {\n    return [styles.label, labelStyle, floatingPlaceholder && styles.dummyPlaceholder];\n  }, [labelStyle, floatingPlaceholder]);\n  if ((label || floatingPlaceholder) && !forceHidingLabel) {\n    return <Text testID={testID} color={getColorByState(labelColor, context)} style={style} {...labelProps}>\n        {label}\n      </Text>;\n  }\n  return null;\n};\nconst styles = StyleSheet.create({\n  label: {\n    minHeight: 20\n  },\n  dummyPlaceholder: {\n    opacity: 0\n  }\n});\nLabel.displayName = 'Incubator.TextField';\nexport default Label;"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAEnD,SAASC,MAAM;AACf,OAAOC,IAAI;AACX,SAASC,yBAAyB;AAClC,SAASC,eAAe;AACxB,OAAOC,YAAY;AAAuB,SAAAC,MAAA,IAAAC,OAAA;AAC1C,IAAMC,mBAAmB,GAAG;EAC1BC,OAAO,EAAER,MAAM,CAACS,YAAY;EAC5BC,QAAQ,EAAEV,MAAM,CAACW;AACnB,CAAC;AACD,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAAC,IAAA,EAQL;EAAA,IAPJC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAAC,eAAA,GAAAF,IAAA,CACLG,UAAU;IAAVA,UAAU,GAAAD,eAAA,cAAGR,mBAAmB,GAAAQ,eAAA;IAChCE,UAAU,GAAAJ,IAAA,CAAVI,UAAU;IACVC,UAAU,GAAAL,IAAA,CAAVK,UAAU;IACVC,yBAAyB,GAAAN,IAAA,CAAzBM,yBAAyB;IACzBC,mBAAmB,GAAAP,IAAA,CAAnBO,mBAAmB;IACnBC,MAAM,GAAAR,IAAA,CAANQ,MAAM;EAEN,IAAMC,OAAO,GAAGzB,UAAU,CAACO,YAAY,CAAC;EACxC,IAAMmB,gBAAgB,GAAG,CAACD,OAAO,CAACE,OAAO,IAAIL,yBAAyB,KAAKjB,yBAAyB,CAACuB,GAAG;EACxG,IAAMC,KAAK,GAAG5B,OAAO,CAAC,YAAM;IAC1B,OAAO,CAAC6B,MAAM,CAACb,KAAK,EAAEG,UAAU,EAAEG,mBAAmB,IAAIO,MAAM,CAACC,gBAAgB,CAAC;EACnF,CAAC,EAAE,CAACX,UAAU,EAAEG,mBAAmB,CAAC,CAAC;EACrC,IAAI,CAACN,KAAK,IAAIM,mBAAmB,KAAK,CAACG,gBAAgB,EAAE;IACvD,OAAOjB,OAAA,CAACL,IAAI,EAAA4B,aAAA,CAAAA,aAAA;MAACR,MAAM,EAAEA,MAAO;MAACS,KAAK,EAAE3B,eAAe,CAACa,UAAU,EAAEM,OAAO,CAAE;MAACI,KAAK,EAAEA;IAAM,GAAKR,UAAU;MAAAa,QAAA,EACjGjB;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACF,CAAC;EACX;EACA,OAAO,IAAI;AACb,CAAC;AACD,IAAMT,MAAM,GAAG5B,UAAU,CAACsC,MAAM,CAAC;EAC/BvB,KAAK,EAAE;IACLwB,SAAS,EAAE;EACb,CAAC;EACDV,gBAAgB,EAAE;IAChBW,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AACF3B,KAAK,CAAC4B,WAAW,GAAG,qBAAqB;AACzC,eAAe5B,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
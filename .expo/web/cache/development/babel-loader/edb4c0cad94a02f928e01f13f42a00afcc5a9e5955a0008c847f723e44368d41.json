{"ast":null,"code":"var _jsxFileName = \"/workspaces/expo-starter/src/screens/_screen-sample.tsx\",\n  _this = this;\nimport React, { useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Text, View } from 'react-native-ui-lib';\nimport { observer } from 'mobx-react';\nimport { services, useServices } from \"../services\";\nimport { useAppearance } from \"../utils/hooks\";\nimport { NavioSection } from \"../components/sections/NavioSection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Example = observer(function () {\n  useAppearance();\n  var _useServices = useServices(),\n    t = _useServices.t,\n    navio = _useServices.navio;\n  var navigation = navio.useN();\n  var params = navio.useParams();\n  useEffect(function () {\n    configureUI();\n  }, []);\n  var configureUI = function configureUI() {\n    navigation.setOptions({});\n  };\n  return _jsxDEV(View, {\n    flex: true,\n    \"bg-bgColor\": true,\n    children: _jsxDEV(ScrollView, {\n      contentInsetAdjustmentBehavior: \"always\",\n      children: [!!(params != null && params.productId) ? _jsxDEV(View, {\n        \"margin-s2\": true,\n        \"marginV-s2\": true,\n        \"paddingH-s3\": true,\n        children: _jsxDEV(Text, {\n          children: [\"ProductId: \", params.productId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, _this) : null, _jsxDEV(NavioSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, _this);\n});\nExample.options = function (props) {\n  var _type, _props$route, _props$route$params;\n  return {\n    headerBackTitleStyle: false,\n    title: `${services.t.do('example.title')} ${(_type = props == null ? void 0 : (_props$route = props.route) == null ? void 0 : (_props$route$params = _props$route.params) == null ? void 0 : _props$route$params.type) != null ? _type : ''}`\n  };\n};","map":{"version":3,"names":["React","useEffect","ScrollView","Text","View","observer","services","useServices","useAppearance","NavioSection","jsxDEV","_jsxDEV","Example","_useServices","t","navio","navigation","useN","params","useParams","configureUI","setOptions","flex","children","contentInsetAdjustmentBehavior","productId","fileName","_jsxFileName","lineNumber","columnNumber","_this","options","props","_type","_props$route","_props$route$params","headerBackTitleStyle","title","do","route","type"],"sources":["/workspaces/expo-starter/src/screens/_screen-sample.tsx"],"sourcesContent":["import React, {useEffect} from 'react';\nimport {ScrollView} from 'react-native';\nimport {Text, View} from 'react-native-ui-lib';\nimport {observer} from 'mobx-react';\nimport {NavioScreen} from 'rn-navio';\n\nimport {services, useServices} from '@app/services';\nimport {useAppearance} from '@app/utils/hooks';\nimport {NavioSection} from '@app/components/sections/NavioSection';\n\nexport type Params = {\n  type?: 'push' | 'show';\n  productId?: string;\n};\n\nexport const Example: NavioScreen = observer(() => {\n  useAppearance(); // for Dark Mode\n  const {t, navio} = useServices();\n  const navigation = navio.useN();\n  const params = navio.useParams<Params>();\n  // const {ui} = useStores();\n\n  // State\n\n  // Methods\n\n  // Start\n  useEffect(() => {\n    configureUI();\n  }, []);\n\n  // UI Methods\n  const configureUI = () => {\n    navigation.setOptions({});\n  };\n\n  // UI Methods\n\n  return (\n    <View flex bg-bgColor>\n      <ScrollView contentInsetAdjustmentBehavior=\"always\">\n        {/* Product Page example related */}\n        {!!params?.productId ? (\n          <View margin-s2 marginV-s2 paddingH-s3>\n            <Text>ProductId: {params.productId}</Text>\n          </View>\n        ) : null}\n\n        <NavioSection />\n      </ScrollView>\n    </View>\n  );\n});\n\nExample.options = props => ({\n  headerBackTitleStyle: false,\n  title: `${services.t.do('example.title')} ${(props?.route?.params as Params)?.type ?? ''}`,\n});\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AAAC,OAAAC,UAAA;AAEvC,SAAQC,IAAI,EAAEC,IAAI,QAAO,qBAAqB;AAC9C,SAAQC,QAAQ,QAAO,YAAY;AAGnC,SAAQC,QAAQ,EAAEC,WAAW;AAC7B,SAAQC,aAAa;AACrB,SAAQC,YAAY;AAA+C,SAAAC,MAAA,IAAAC,OAAA;AAOnE,OAAO,IAAMC,OAAoB,GAAGP,QAAQ,CAAC,YAAM;EACjDG,aAAa,CAAC,CAAC;EACf,IAAAK,YAAA,GAAmBN,WAAW,CAAC,CAAC;IAAzBO,CAAC,GAAAD,YAAA,CAADC,CAAC;IAAEC,KAAK,GAAAF,YAAA,CAALE,KAAK;EACf,IAAMC,UAAU,GAAGD,KAAK,CAACE,IAAI,CAAC,CAAC;EAC/B,IAAMC,MAAM,GAAGH,KAAK,CAACI,SAAS,CAAS,CAAC;EAQxClB,SAAS,CAAC,YAAM;IACdmB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAGN,IAAMA,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBJ,UAAU,CAACK,UAAU,CAAC,CAAC,CAAC,CAAC;EAC3B,CAAC;EAID,OACEV,OAAA,CAACP,IAAI;IAACkB,IAAI;IAAC,kBAAU;IAAAC,QAAA,EACnBZ,OAAA,CAACT,UAAU;MAACsB,8BAA8B,EAAC,QAAQ;MAAAD,QAAA,GAEhD,CAAC,EAACL,MAAM,YAANA,MAAM,CAAEO,SAAS,IAClBd,OAAA,CAACP,IAAI;QAAC,iBAAS;QAAC,kBAAU;QAAC,mBAAW;QAAAmB,QAAA,EACpCZ,OAAA,CAACR,IAAI;UAAAoB,QAAA,GAAC,aAAW,EAACL,MAAM,CAACO,SAAS;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAO;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACtC,CAAC,GACL,IAAI,EAERnB,OAAA,CAACF,YAAY;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAE,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACN;EAAC;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACT,CAAC;AAEX,CAAC,CAAC;AAEFlB,OAAO,CAACmB,OAAO,GAAG,UAAAC,KAAK;EAAA,IAAAC,KAAA,EAAAC,YAAA,EAAAC,mBAAA;EAAA,OAAK;IAC1BC,oBAAoB,EAAE,KAAK;IAC3BC,KAAK,EAAE,GAAG/B,QAAQ,CAACQ,CAAC,CAACwB,EAAE,CAAC,eAAe,CAAC,KAAAL,KAAA,GAAKD,KAAK,qBAAAE,YAAA,GAALF,KAAK,CAAEO,KAAK,sBAAAJ,mBAAA,GAAZD,YAAA,CAAchB,MAAM,qBAArBiB,mBAAA,CAAkCK,IAAI,YAAAP,KAAA,GAAI,EAAE;EAC1F,CAAC;AAAA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _excluded = [\"activeOpacity\", \"backgroundColor\", \"containerStyle\", \"hitSlop\", \"onPress\", \"testID\"];\nvar _jsxFileName = \"/workspaces/expo-starter/node_modules/react-native-ui-lib/src/components/badge/index.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport _isNaN from \"lodash/isNaN\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { extractAccessibilityProps } from \"../../commons/modifiers\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport { BorderRadiuses, Colors, Spacings, Typography } from \"../../style\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Image from \"../image\";\nimport View from \"../view\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar LABEL_FORMATTER_VALUES = [1, 2, 3, 4];\nvar Badge = function (_PureComponent) {\n  function Badge(props) {\n    var _this;\n    _classCallCheck(this, Badge);\n    _this = _callSuper(this, Badge, [props]);\n    _this.styles = createStyles(props);\n    return _this;\n  }\n  _inherits(Badge, _PureComponent);\n  return _createClass(Badge, [{\n    key: \"getAccessibilityProps\",\n    value: function getAccessibilityProps() {\n      var _this$props = this.props,\n        onPress = _this$props.onPress,\n        icon = _this$props.icon,\n        label = _this$props.label,\n        accessibilityLabel = _this$props.accessibilityLabel;\n      return _objectSpread(_objectSpread({\n        accessibilityLabel: accessibilityLabel || label ? `${label} new items` : 'badge'\n      }, extractAccessibilityProps(this.props)), {}, {\n        accessible: !_isUndefined(label),\n        accessibilityRole: onPress ? 'button' : icon ? 'image' : 'text'\n      });\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this.props.size || 20;\n    }\n  }, {\n    key: \"isSmallBadge\",\n    value: function isSmallBadge() {\n      return this.size <= 16;\n    }\n  }, {\n    key: \"getBadgeSizeStyle\",\n    value: function getBadgeSizeStyle() {\n      var _this$props2 = this.props,\n        borderWidth = _this$props2.borderWidth,\n        icon = _this$props2.icon,\n        customElement = _this$props2.customElement;\n      var label = this.getFormattedLabel();\n      var style = {\n        paddingHorizontal: this.isSmallBadge() ? 4 : 6,\n        height: this.size,\n        minWidth: this.size\n      };\n      if (icon && label) {\n        style.paddingRight = 6;\n        style.paddingLeft = 4;\n        style.height = Spacings.s5;\n        if (borderWidth) {\n          style.height += borderWidth * 2;\n        }\n        return style;\n      }\n      if (customElement) {\n        return style;\n      }\n      var isPimple = label === undefined;\n      if (isPimple || icon) {\n        style.paddingHorizontal = 0;\n        style.minWidth = undefined;\n        style.width = style.height;\n        if (borderWidth) {\n          style.height += borderWidth * 2;\n          style.width += borderWidth * 2;\n        }\n        return style;\n      }\n      if (borderWidth) {\n        style.height += borderWidth * 2;\n        style.minWidth += borderWidth * 2;\n      }\n      return style;\n    }\n  }, {\n    key: \"getFormattedLabel\",\n    value: function getFormattedLabel() {\n      var _this$props3 = this.props,\n        labelFormatterLimit = _this$props3.labelFormatterLimit,\n        label = _this$props3.label;\n      if (_isNaN(label)) {\n        return label;\n      }\n      if (LABEL_FORMATTER_VALUES.includes(labelFormatterLimit)) {\n        var maxLabelNumber = 10 ** labelFormatterLimit - 1;\n        var formattedLabel = label;\n        if (formattedLabel > maxLabelNumber) {\n          formattedLabel = `${maxLabelNumber}+`;\n        }\n        return formattedLabel;\n      } else {\n        return label;\n      }\n    }\n  }, {\n    key: \"getBorderStyling\",\n    value: function getBorderStyling() {\n      var _this$props4 = this.props,\n        borderWidth = _this$props4.borderWidth,\n        borderColor = _this$props4.borderColor,\n        borderRadius = _this$props4.borderRadius;\n      var style = {};\n      if (borderWidth) {\n        style.borderWidth = borderWidth;\n        style.borderColor = borderColor;\n      }\n      if (borderRadius) {\n        style.borderRadius = borderRadius;\n      }\n      return style;\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel() {\n      var _this$props5 = this.props,\n        labelStyle = _this$props5.labelStyle,\n        label = _this$props5.label;\n      if (label) {\n        return _jsxDEV(Text, {\n          style: [this.styles.label, this.isSmallBadge() && this.styles.labelSmall, labelStyle],\n          allowFontScaling: false,\n          numberOfLines: 1,\n          testID: \"badge\",\n          children: this.getFormattedLabel()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 14\n        }, this);\n      }\n    }\n  }, {\n    key: \"renderCustomElement\",\n    value: function renderCustomElement() {\n      var customElement = this.props.customElement;\n      return customElement;\n    }\n  }, {\n    key: \"renderIcon\",\n    value: function renderIcon() {\n      var _this$props6 = this.props,\n        icon = _this$props6.icon,\n        iconStyle = _this$props6.iconStyle,\n        iconProps = _this$props6.iconProps,\n        borderColor = _this$props6.borderColor,\n        label = _this$props6.label;\n      var flex = label ? 0 : 1;\n      return icon && _jsxDEV(Image, _objectSpread(_objectSpread({\n        source: icon,\n        resizeMode: \"contain\",\n        tintColor: Colors.$iconDefaultLight,\n        borderColor: borderColor\n      }, iconProps), {}, {\n        style: _objectSpread({\n          flex: flex\n        }, iconStyle)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 20\n      }, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props7 = this.props,\n        activeOpacity = _this$props7.activeOpacity,\n        backgroundColor = _this$props7.backgroundColor,\n        containerStyle = _this$props7.containerStyle,\n        hitSlop = _this$props7.hitSlop,\n        onPress = _this$props7.onPress,\n        testID = _this$props7.testID,\n        others = _objectWithoutProperties(_this$props7, _excluded);\n      var backgroundStyle = backgroundColor && {\n        backgroundColor: backgroundColor\n      };\n      var sizeStyle = this.getBadgeSizeStyle();\n      var borderStyle = this.getBorderStyling();\n      var Container = onPress ? TouchableOpacity : View;\n      return (_jsxDEV(View, _objectSpread(_objectSpread(_objectSpread({\n          style: containerStyle\n        }, others), {}, {\n          backgroundColor: undefined,\n          borderWidth: undefined\n        }, this.getAccessibilityProps()), {}, {\n          children: _jsxDEV(Container, {\n            testID: testID,\n            pointerEvents: 'none',\n            style: [sizeStyle, this.styles.badge, borderStyle, backgroundStyle],\n            onPress: onPress,\n            activeOpacity: activeOpacity,\n            hitSlop: hitSlop,\n            row: true,\n            children: [this.renderCustomElement(), this.renderIcon(), this.renderLabel()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 9\n          }, this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 7\n        }, this)\n      );\n    }\n  }]);\n}(PureComponent);\nBadge.displayName = 'Badge';\nfunction createStyles(props) {\n  var styles = StyleSheet.create({\n    badge: {\n      alignSelf: 'flex-start',\n      borderRadius: BorderRadiuses.br100,\n      backgroundColor: !props.icon || props.customElement ? Colors.$backgroundGeneralHeavy : undefined,\n      alignItems: 'center',\n      justifyContent: 'center',\n      overflow: 'hidden'\n    },\n    label: _objectSpread(_objectSpread({}, Typography.text90), {}, {\n      color: Colors.$textDefaultLight,\n      backgroundColor: 'transparent'\n    }),\n    labelSmall: _objectSpread(_objectSpread({}, Typography.text100), {}, {\n      lineHeight: undefined\n    })\n  });\n  return styles;\n}\nexport { Badge };\nexport default asBaseComponent(Badge);","map":{"version":3,"names":["_isNaN","_isUndefined","React","PureComponent","StyleSheet","Text","extractAccessibilityProps","asBaseComponent","BorderRadiuses","Colors","Spacings","Typography","TouchableOpacity","Image","View","jsxDEV","_jsxDEV","LABEL_FORMATTER_VALUES","Badge","_PureComponent","props","_this","_classCallCheck","_callSuper","styles","createStyles","_inherits","_createClass","key","value","getAccessibilityProps","_this$props","onPress","icon","label","accessibilityLabel","_objectSpread","accessible","accessibilityRole","get","size","isSmallBadge","getBadgeSizeStyle","_this$props2","borderWidth","customElement","getFormattedLabel","style","paddingHorizontal","height","minWidth","paddingRight","paddingLeft","s5","isPimple","undefined","width","_this$props3","labelFormatterLimit","includes","maxLabelNumber","formattedLabel","getBorderStyling","_this$props4","borderColor","borderRadius","renderLabel","_this$props5","labelStyle","labelSmall","allowFontScaling","numberOfLines","testID","children","fileName","_jsxFileName","lineNumber","columnNumber","renderCustomElement","renderIcon","_this$props6","iconStyle","iconProps","flex","source","resizeMode","tintColor","$iconDefaultLight","render","_this$props7","activeOpacity","backgroundColor","containerStyle","hitSlop","others","_objectWithoutProperties","_excluded","backgroundStyle","sizeStyle","borderStyle","Container","pointerEvents","badge","row","displayName","create","alignSelf","br100","$backgroundGeneralHeavy","alignItems","justifyContent","overflow","text90","color","$textDefaultLight","text100","lineHeight"],"sources":["/workspaces/expo-starter/node_modules/react-native-ui-lib/src/components/badge/index.js"],"sourcesContent":["import _isNaN from \"lodash/isNaN\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport React, { PureComponent } from 'react';\nimport { StyleSheet, Text } from 'react-native';\nimport { extractAccessibilityProps } from \"../../commons/modifiers\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport { BorderRadiuses, Colors, Spacings, Typography } from \"../../style\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Image from \"../image\";\nimport View from \"../view\";\nconst LABEL_FORMATTER_VALUES = [1, 2, 3, 4];\n/**\n * @description: Round colored badge, typically used to show a number\n * @extends: View\n * @image: https://user-images.githubusercontent.com/33805983/34480753-df7a868a-efb6-11e7-9072-80f5c110a4f3.png\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/BadgesScreen.tsx\n */\nclass Badge extends PureComponent {\n  static displayName = 'Badge';\n  constructor(props) {\n    super(props);\n    this.styles = createStyles(props);\n  }\n  getAccessibilityProps() {\n    const {\n      onPress,\n      icon,\n      label,\n      accessibilityLabel\n    } = this.props;\n    return {\n      accessibilityLabel: accessibilityLabel || label ? `${label} new items` : 'badge',\n      ...extractAccessibilityProps(this.props),\n      accessible: !_isUndefined(label),\n      accessibilityRole: onPress ? 'button' : icon ? 'image' : 'text'\n    };\n  }\n  get size() {\n    return this.props.size || 20;\n  }\n  isSmallBadge() {\n    return this.size <= 16;\n  }\n  getBadgeSizeStyle() {\n    const {\n      borderWidth,\n      icon,\n      customElement\n    } = this.props;\n    const label = this.getFormattedLabel();\n    const style = {\n      paddingHorizontal: this.isSmallBadge() ? 4 : 6,\n      height: this.size,\n      minWidth: this.size\n    };\n    if (icon && label) {\n      style.paddingRight = 6;\n      style.paddingLeft = 4;\n      style.height = Spacings.s5;\n      if (borderWidth) {\n        style.height += borderWidth * 2;\n      }\n      return style;\n    }\n    if (customElement) {\n      return style;\n    }\n    const isPimple = label === undefined;\n    if (isPimple || icon) {\n      style.paddingHorizontal = 0;\n      style.minWidth = undefined;\n      style.width = style.height;\n      if (borderWidth) {\n        style.height += borderWidth * 2;\n        style.width += borderWidth * 2;\n      }\n      return style;\n    }\n    if (borderWidth) {\n      style.height += borderWidth * 2;\n      style.minWidth += borderWidth * 2;\n    }\n    return style;\n  }\n  getFormattedLabel() {\n    const {\n      labelFormatterLimit,\n      label\n    } = this.props;\n    if (_isNaN(label)) {\n      return label;\n    }\n    if (LABEL_FORMATTER_VALUES.includes(labelFormatterLimit)) {\n      const maxLabelNumber = 10 ** labelFormatterLimit - 1;\n      let formattedLabel = label;\n      if (formattedLabel > maxLabelNumber) {\n        formattedLabel = `${maxLabelNumber}+`;\n      }\n      return formattedLabel;\n    } else {\n      return label;\n    }\n  }\n  getBorderStyling() {\n    const {\n      borderWidth,\n      borderColor,\n      borderRadius\n    } = this.props;\n    const style = {};\n    if (borderWidth) {\n      style.borderWidth = borderWidth;\n      style.borderColor = borderColor;\n    }\n    if (borderRadius) {\n      style.borderRadius = borderRadius;\n    }\n    return style;\n  }\n  renderLabel() {\n    const {\n      labelStyle,\n      label\n    } = this.props;\n    if (label) {\n      return <Text style={[this.styles.label, this.isSmallBadge() && this.styles.labelSmall, labelStyle]} allowFontScaling={false} numberOfLines={1} testID=\"badge\">\n          {this.getFormattedLabel()}\n        </Text>;\n    }\n  }\n  renderCustomElement() {\n    const {\n      customElement\n    } = this.props;\n    return customElement;\n  }\n  renderIcon() {\n    const {\n      icon,\n      iconStyle,\n      iconProps,\n      borderColor,\n      label\n    } = this.props;\n    const flex = label ? 0 : 1;\n    return icon && <Image source={icon} resizeMode=\"contain\" tintColor={Colors.$iconDefaultLight}\n    //@ts-ignore\n    borderColor={borderColor} {...iconProps} style={{\n      flex,\n      ...iconStyle\n    }} />;\n  }\n  render() {\n    const {\n      activeOpacity,\n      backgroundColor,\n      containerStyle,\n      hitSlop,\n      onPress,\n      testID,\n      ...others\n    } = this.props;\n    const backgroundStyle = backgroundColor && {\n      backgroundColor\n    };\n    const sizeStyle = this.getBadgeSizeStyle();\n    const borderStyle = this.getBorderStyling();\n    const Container = onPress ? TouchableOpacity : View;\n    return (\n      // The extra View wrapper is to break badge's flex-ness\n      // @ts-ignore\n      <View style={containerStyle} {...others} backgroundColor={undefined}\n      // @ts-expect-error\n      borderWidth={undefined} {...this.getAccessibilityProps()}>\n        <Container testID={testID} pointerEvents={'none'} style={[sizeStyle, this.styles.badge, borderStyle, backgroundStyle]} onPress={onPress} activeOpacity={activeOpacity} hitSlop={hitSlop} row>\n          {this.renderCustomElement()}\n          {this.renderIcon()}\n          {this.renderLabel()}\n        </Container>\n      </View>\n    );\n  }\n}\nfunction createStyles(props) {\n  const styles = StyleSheet.create({\n    badge: {\n      alignSelf: 'flex-start',\n      borderRadius: BorderRadiuses.br100,\n      backgroundColor: !props.icon || props.customElement ? Colors.$backgroundGeneralHeavy : undefined,\n      alignItems: 'center',\n      justifyContent: 'center',\n      overflow: 'hidden'\n    },\n    label: {\n      ...Typography.text90,\n      color: Colors.$textDefaultLight,\n      backgroundColor: 'transparent'\n    },\n    labelSmall: {\n      ...Typography.text100,\n      lineHeight: undefined\n    }\n  });\n  return styles;\n}\nexport { Badge }; // For tests\n\nexport default asBaseComponent(Badge);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/workspaces/expo-starter/App.tsx\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useRef, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Background = require(\"./assets/image.png\");\nvar Cloud = require(\"./assets/cloud.png\");\nvar Sun = require(\"./assets/goodSun.png\");\nvar TARGET_SIZE = 100;\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nexport default function App() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    score = _useState2[0],\n    setScore = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    highScore = _useState4[0],\n    setHighScore = _useState4[1];\n  var _useState5 = useState(10),\n    _useState6 = _slicedToArray(_useState5, 2),\n    timer = _useState6[0],\n    setTimer = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    movedOnce = _useState8[0],\n    setMovedOnce = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    timerStarted = _useState10[0],\n    setTimerStarted = _useState10[1];\n  var CLOUD_SIZE = Math.max(60, 120 - score * 5);\n  var pan = useRef(new Animated.ValueXY({\n    x: 0,\n    y: 0\n  })).current;\n  useEffect(function () {\n    if (timer > 0 && timerStarted) {\n      var interval = setInterval(function () {\n        setTimer(function (prev) {\n          return prev - 1;\n        });\n      }, 1000);\n      return function () {\n        return clearInterval(interval);\n      };\n    } else if (timer === 0 && timerStarted) {\n      setScore(0);\n      setTimerStarted(false);\n      setTimer(10);\n    }\n  }, [timer, timerStarted]);\n  var spawnNewCloud = function spawnNewCloud() {\n    var side = Math.floor(Math.random() * 4);\n    var startX = 0,\n      startY = 0;\n    switch (side) {\n      case 0:\n        startX = Math.random() * (width - CLOUD_SIZE);\n        startY = 0;\n        break;\n      case 1:\n        startX = width - CLOUD_SIZE;\n        startY = Math.random() * (height - CLOUD_SIZE);\n        break;\n      case 2:\n        startX = Math.random() * (width - CLOUD_SIZE);\n        startY = height - CLOUD_SIZE;\n        break;\n      case 3:\n        startX = 0;\n        startY = Math.random() * (height - CLOUD_SIZE);\n        break;\n    }\n    pan.setValue({\n      x: startX,\n      y: startY\n    });\n  };\n  var isOverTarget = function isOverTarget() {\n    var cloudX = pan.x.__getValue();\n    var cloudY = pan.y.__getValue();\n    var targetX = width / 2 - TARGET_SIZE / 2;\n    var targetY = height / 2 - TARGET_SIZE / 2;\n    return cloudX < targetX + TARGET_SIZE && cloudX + CLOUD_SIZE > targetX && cloudY < targetY + TARGET_SIZE && cloudY + CLOUD_SIZE > targetY;\n  };\n  var panResponder = useRef(PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderGrant: function onPanResponderGrant() {\n      pan.setOffset({\n        x: pan.x.__getValue(),\n        y: pan.y.__getValue()\n      });\n      pan.setValue({\n        x: 0,\n        y: 0\n      });\n      if (!movedOnce) {\n        setMovedOnce(true);\n        setTimerStarted(true);\n      }\n    },\n    onPanResponderMove: Animated.event([null, {\n      dx: pan.x,\n      dy: pan.y\n    }], {\n      useNativeDriver: false\n    }),\n    onPanResponderRelease: function onPanResponderRelease() {\n      pan.flattenOffset();\n      if (isOverTarget()) {\n        setScore(function (prev) {\n          var newScore = prev + 1;\n          if (newScore > highScore) {\n            setHighScore(newScore);\n          }\n          return newScore;\n        });\n        spawnNewCloud();\n      }\n    }\n  })).current;\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: _jsxDEV(ImageBackground, {\n      source: Background,\n      style: styles.backgroundImage,\n      children: _jsxDEV(View, {\n        style: styles.gameContainer,\n        children: [_jsxDEV(Text, {\n          style: styles.scoreText,\n          children: [\"Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.timerText,\n          children: [\"Time: \", timer, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.highScoreText,\n          children: [\"High Score: \", highScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.targetSun,\n          children: _jsxDEV(Image, {\n            source: Sun,\n            style: {\n              width: TARGET_SIZE,\n              height: TARGET_SIZE\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), _jsxDEV(Animated.View, _objectSpread(_objectSpread({\n          style: [styles.draggableCloud, {\n            width: CLOUD_SIZE,\n            height: CLOUD_SIZE,\n            transform: [{\n              translateX: pan.x\n            }, {\n              translateY: pan.y\n            }]\n          }]\n        }, panResponder.panHandlers), {}, {\n          children: _jsxDEV(Image, {\n            source: Cloud,\n            style: {\n              width: '100%',\n              height: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: styles.instructions,\n          children: \"Drag the cloud to the sun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  gameContainer: {\n    flex: 1,\n    position: 'relative'\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%'\n  },\n  targetSun: {\n    position: 'absolute',\n    left: width / 2 - TARGET_SIZE / 2,\n    top: height / 2 - TARGET_SIZE / 2,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  draggableCloud: {\n    position: 'absolute'\n  },\n  scoreText: {\n    position: 'absolute',\n    top: 40,\n    left: 20,\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: 'white',\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n    textShadowOffset: {\n      width: 2,\n      height: 2\n    },\n    textShadowRadius: 4\n  },\n  highScoreText: {\n    position: 'absolute',\n    top: 80,\n    left: 20,\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  timerText: {\n    position: 'absolute',\n    top: 120,\n    left: 20,\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'blue'\n  },\n  instructions: {\n    position: 'absolute',\n    bottom: 40,\n    alignSelf: 'center',\n    fontSize: 18,\n    textAlign: 'center',\n    paddingHorizontal: 20\n  }\n});","map":{"version":3,"names":["React","useState","useRef","useEffect","SafeAreaView","Text","View","StyleSheet","Animated","PanResponder","Dimensions","ImageBackground","Image","jsxDEV","_jsxDEV","Background","require","Cloud","Sun","TARGET_SIZE","_Dimensions$get","get","width","height","App","_useState","_useState2","_slicedToArray","score","setScore","_useState3","_useState4","highScore","setHighScore","_useState5","_useState6","timer","setTimer","_useState7","_useState8","movedOnce","setMovedOnce","_useState9","_useState10","timerStarted","setTimerStarted","CLOUD_SIZE","Math","max","pan","ValueXY","x","y","current","interval","setInterval","prev","clearInterval","spawnNewCloud","side","floor","random","startX","startY","setValue","isOverTarget","cloudX","__getValue","cloudY","targetX","targetY","panResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","setOffset","onPanResponderMove","event","dx","dy","useNativeDriver","onPanResponderRelease","flattenOffset","newScore","style","styles","container","children","source","backgroundImage","gameContainer","scoreText","fileName","_jsxFileName","lineNumber","columnNumber","timerText","highScoreText","targetSun","_objectSpread","draggableCloud","transform","translateX","translateY","panHandlers","instructions","flex","backgroundColor","position","resizeMode","justifyContent","left","top","alignItems","fontSize","fontWeight","color","textShadowColor","textShadowOffset","textShadowRadius","bottom","alignSelf","textAlign","paddingHorizontal"],"sources":["/workspaces/expo-starter/App.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { SafeAreaView, Text, View, StyleSheet, Animated, PanResponder, Dimensions, ImageBackground, Image } from 'react-native';\n\nconst Background = require(\"./assets/image.png\");\nconst Cloud = require(\"./assets/cloud.png\"); // Path to your cloud image\nconst Sun = require(\"./assets/goodSun.png\"); // Path to your sun image\n\nconst TARGET_SIZE = 100;\nconst { width, height } = Dimensions.get('window');\n\nexport default function App() {\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [timer, setTimer] = useState(10);  // Timer state for countdown\n  const [movedOnce, setMovedOnce] = useState(false);  // Track if the first cloud is moved\n  const [timerStarted, setTimerStarted] = useState(false);  // Track if the timer has started\n\n  const CLOUD_SIZE = Math.max(60, 120 - score * 5); // Dynamically adjust cloud size\n\n  const pan = useRef(new Animated.ValueXY({ x: 0, y: 0 })).current;\n\n  // Timer countdown effect\n  useEffect(() => {\n    if (timer > 0 && timerStarted) {\n      const interval = setInterval(() => {\n        setTimer(prev => prev - 1);\n      }, 1000);\n\n      return () => clearInterval(interval);\n    } else if (timer === 0 && timerStarted) {\n      // Reset score when timer reaches zero\n      setScore(0);\n      setTimerStarted(false);\n      setTimer(10); // Reset timer back to 10 seconds\n    }\n  }, [timer, timerStarted]);\n\n  // Spawn a new cloud at a random position along the edge\n  const spawnNewCloud = () => {\n    const side = Math.floor(Math.random() * 4);\n    let startX = 0, startY = 0;\n\n    switch (side) {\n      case 0: startX = Math.random() * (width - CLOUD_SIZE); startY = 0; break;\n      case 1: startX = width - CLOUD_SIZE; startY = Math.random() * (height - CLOUD_SIZE); break;\n      case 2: startX = Math.random() * (width - CLOUD_SIZE); startY = height - CLOUD_SIZE; break;\n      case 3: startX = 0; startY = Math.random() * (height - CLOUD_SIZE); break;\n    }\n\n    pan.setValue({ x: startX, y: startY });\n  };\n\n  const isOverTarget = () => {\n    const cloudX = pan.x.__getValue();\n    const cloudY = pan.y.__getValue();\n    const targetX = width / 2 - TARGET_SIZE / 2;\n    const targetY = height / 2 - TARGET_SIZE / 2;\n\n    return (\n      cloudX < targetX + TARGET_SIZE &&\n      cloudX + CLOUD_SIZE > targetX &&\n      cloudY < targetY + TARGET_SIZE &&\n      cloudY + CLOUD_SIZE > targetY\n    );\n  };\n\n  const panResponder = useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderGrant: () => {\n        pan.setOffset({\n          x: pan.x.__getValue(),\n          y: pan.y.__getValue()\n        });\n        pan.setValue({ x: 0, y: 0 });\n\n        // Only start the timer after the first cloud is moved\n        if (!movedOnce) {\n          setMovedOnce(true); // Mark that the first move has occurred\n          setTimerStarted(true); // Start the timer after first move\n        }\n      },\n      onPanResponderMove: Animated.event([null, { dx: pan.x, dy: pan.y }], {\n        useNativeDriver: false\n      }),\n      onPanResponderRelease: () => {\n        pan.flattenOffset();\n        if (isOverTarget()) {\n          setScore(prev => {\n            const newScore = prev + 1;  // Increment the score\n            if (newScore > highScore) {  // If new score is greater than the current highScore\n              setHighScore(newScore);  // Update high score\n            }\n            return newScore;  // Return the updated score\n          });\n          spawnNewCloud();\n        }\n      }\n    })\n  ).current;\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ImageBackground\n        source={Background} // Path to your background image\n        style={styles.backgroundImage}\n      >\n        <View style={styles.gameContainer}>\n          <Text style={styles.scoreText}>Score: {score}</Text>\n          <Text style={styles.timerText}>Time: {timer}s</Text>\n          <Text style={styles.highScoreText}>High Score: {highScore}</Text>\n\n          {/* Sun Image (Target) */}\n          <View style={styles.targetSun}>\n            <Image source={Sun} style={{ width: TARGET_SIZE, height: TARGET_SIZE }} />\n          </View>\n\n          {/* Draggable Cloud (Image) */}\n          <Animated.View\n            style={[\n              styles.draggableCloud,\n              {\n                width: CLOUD_SIZE,\n                height: CLOUD_SIZE,\n                transform: [\n                  { translateX: pan.x },\n                  { translateY: pan.y }\n                ]\n              }\n            ]}\n            {...panResponder.panHandlers}\n          >\n            <Image\n              source={Cloud}  // Cloud image\n              style={{ width: '100%', height: '100%' }}\n            />\n          </Animated.View>\n\n          <Text style={styles.instructions}>Drag the cloud to the sun</Text>\n        </View>\n      </ImageBackground>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  gameContainer: {\n    flex: 1,\n    position: 'relative'\n  },\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover', // or 'stretch'\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n  targetSun: {\n    position: 'absolute',\n    left: width / 2 - TARGET_SIZE / 2,\n    top: height / 2 - TARGET_SIZE / 2,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  draggableCloud: {\n    position: 'absolute'\n  },\n  scoreText: {\n    position: 'absolute',\n    top: 40,\n    left: 20,\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: 'white',\n    textShadowColor: 'rgba(0, 0, 0, 0.5)',\n    textShadowOffset: { width: 2, height: 2 },\n    textShadowRadius: 4,\n  },\n  highScoreText: {\n    position: 'absolute',\n    top: 80,\n    left: 20,\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  timerText: {\n    position: 'absolute',\n    top: 120,\n    left: 20,\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'blue'\n  },\n  instructions: {\n    position: 'absolute',\n    bottom: 40,\n    alignSelf: 'center',\n    fontSize: 18,\n    textAlign: 'center',\n    paddingHorizontal: 20\n  }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
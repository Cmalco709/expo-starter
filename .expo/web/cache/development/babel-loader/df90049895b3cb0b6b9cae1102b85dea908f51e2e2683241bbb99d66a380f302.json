{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _excluded = [\"style\"],\n  _excluded2 = [\"containerStyle\", \"backgroundColor\"],\n  _excluded3 = [\"containerStyle\", \"loop\", \"backgroundColor\"];\nvar _jsxFileName = \"/workspaces/expo-starter/node_modules/react-native-ui-lib/src/components/colorPalette/index.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport _chunk from \"lodash/chunk\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _inRange from \"lodash/inRange\";\nimport _uniq from \"lodash/uniq\";\nimport _map from \"lodash/map\";\nimport _toUpper from \"lodash/toUpper\";\nimport _times from \"lodash/times\";\nimport memoize from 'memoize-one';\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Colors } from \"../../style\";\nimport { Constants } from \"../../commons/new\";\nimport View from \"../view\";\nimport Carousel from \"../carousel\";\nimport ScrollBar from \"../scrollBar\";\nimport PageControl from \"../pageControl\";\nimport ColorSwatch, { SWATCH_SIZE, SWATCH_MARGIN } from \"../colorSwatch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar VERTICAL_PADDING = 16;\nvar HORIZONTAL_PADDING = 20;\nvar MINIMUM_MARGIN = 16;\nvar SCROLLABLE_HEIGHT = 92;\nvar DEFAULT_NUMBER_OF_ROWS = 3;\nvar ColorPalette = function (_PureComponent) {\n  function ColorPalette(props) {\n    var _this;\n    _classCallCheck(this, ColorPalette);\n    _this = _callSuper(this, ColorPalette, [props]);\n    _this.carousel = React.createRef();\n    _this.scrollBar = React.createRef();\n    _this.itemsRefs = React.createRef();\n    _this.selectedColorIndex = undefined;\n    _this.selectedPage = undefined;\n    _this.currentColorsCount = undefined;\n    _this.itemsPerRow = 0;\n    _this.itemsPerPage = 0;\n    _this.usePagination = undefined;\n    _this.innerMargin = undefined;\n    _this.swatchStyles = undefined;\n    _this.onOrientationChanged = function () {\n      if (_this.state.orientation !== Constants.orientation) {\n        _this.initLocalVariables();\n        _this.setState({\n          orientation: Constants.orientation\n        });\n      }\n    };\n    _this.getUniqueColors = memoize(function (colors) {\n      var c = _map(colors, function (color) {\n        if (Colors.isTransparent(color)) {\n          return color;\n        }\n        return _toUpper(color);\n      });\n      return _uniq(c);\n    });\n    _this.scrollToSelected = function () {\n      return setTimeout(function () {\n        var _this$state = _this.state,\n          scrollable = _this$state.scrollable,\n          currentPage = _this$state.currentPage;\n        if (scrollable && _this.selectedColorIndex !== undefined && _this.itemsRefs.current) {\n          var _this$itemsRefs$curre;\n          var childRef = (_this$itemsRefs$curre = _this.itemsRefs.current[_this.selectedColorIndex - 1]) == null ? void 0 : _this$itemsRefs$curre.current;\n          if (childRef) {\n            var childLayout = childRef.getLayout();\n            var leftMargins = _this.getHorizontalMargins(_this.selectedColorIndex).marginLeft;\n            var childX = childLayout.x + childLayout.width + SWATCH_MARGIN + leftMargins + SWATCH_SIZE;\n            if (childX > _this.containerWidth) {\n              var _this$scrollBar, _this$scrollBar$curre;\n              (_this$scrollBar = _this.scrollBar) == null ? void 0 : (_this$scrollBar$curre = _this$scrollBar.current) == null ? void 0 : _this$scrollBar$curre.scrollTo({\n                x: childX + HORIZONTAL_PADDING - _this.containerWidth,\n                y: 0,\n                animated: false\n              });\n            }\n          } else if (_this.usePagination) {\n            var _this$carousel, _this$carousel$curren;\n            (_this$carousel = _this.carousel) == null ? void 0 : (_this$carousel$curren = _this$carousel.current) == null ? void 0 : _this$carousel$curren.goToPage(_this.selectedPage || currentPage, false);\n          }\n        }\n      }, 100);\n    };\n    _this.onContentSizeChange = function (contentWidth) {\n      _this.setState({\n        scrollable: contentWidth > _this.containerWidth,\n        contentWidth: contentWidth\n      });\n    };\n    _this.onChangePage = function (index) {\n      _this.setState({\n        currentPage: index\n      });\n    };\n    _this.onValueChange = function (value, options) {\n      _this.props.onValueChange == null ? void 0 : _this.props.onValueChange(value, options);\n    };\n    _this.getHorizontalMargins = function (index) {\n      var isFirst = index === 0;\n      var isOnLeft = isFirst || index % _this.itemsPerRow === 0;\n      var isOnRight = index % _this.itemsPerRow === _this.itemsPerRow - 1;\n      var marginLeft;\n      var marginRight;\n      if (_this.usePagination) {\n        marginLeft = isOnLeft ? 0 : _this.innerMargin;\n        marginRight = isOnRight ? 0 : _this.innerMargin;\n      } else {\n        var isLast = index === _this.colors.length - 1;\n        marginLeft = isFirst ? 8 : _this.innerMargin;\n        marginRight = isLast ? 20 : _this.innerMargin;\n      }\n      return {\n        marginLeft: marginLeft,\n        marginRight: marginRight\n      };\n    };\n    _this.getSwatchStyle = function (index) {\n      var sizeHasChanged = _this.colors.length !== _this.currentColorsCount;\n      var isNextToLastIndex = index === _this.colors.length - 2;\n      if (!_isUndefined(_this.swatchStyles)) {\n        if (_isUndefined(_this.swatchStyles[index]) || !_this.usePagination && sizeHasChanged && isNextToLastIndex) {\n          _this.swatchStyles[index] = [_this.getHorizontalMargins(index), _this.props.swatchStyle];\n          if (sizeHasChanged && isNextToLastIndex) {\n            _this.currentColorsCount = _this.colors.length;\n          }\n        }\n        return _this.swatchStyles[index];\n      }\n    };\n    _this.state = {\n      currentPage: 0,\n      scrollable: false,\n      orientation: undefined,\n      contentWidth: undefined\n    };\n    _this.initLocalVariables();\n    return _this;\n  }\n  _inherits(ColorPalette, _PureComponent);\n  return _createClass(ColorPalette, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      this.dimensionsChangeListener = Constants.addDimensionsEventListener(this.onOrientationChanged);\n      _times(this.props.colors.length, function (i) {\n        _this2.itemsRefs.current[i] = React.createRef();\n      });\n      this.scrollToSelected();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.colors !== prevProps.colors) {\n        var newIndex = this.itemsRefs.current.length;\n        this.itemsRefs.current[newIndex] = React.createRef();\n        this.scrollToSelected();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Constants.removeDimensionsEventListener(this.dimensionsChangeListener || this.onOrientationChanged);\n    }\n  }, {\n    key: \"initLocalVariables\",\n    value: function initLocalVariables() {\n      this.itemsRefs.current = [];\n      this.selectedColorIndex = undefined;\n      this.selectedPage = undefined;\n      this.currentColorsCount = this.colors.length;\n      this.itemsPerRow = this.getItemsPerRow();\n      this.itemsPerPage = this.itemsPerRow * this.getNumberOfRows();\n      this.usePagination = this.shouldUsePagination();\n      this.innerMargin = this.getInnerMargin();\n      this.swatchStyles = [];\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      var value = this.props.value;\n      if (Colors.isTransparent(value)) {\n        return value;\n      }\n      return _toUpper(value);\n    }\n  }, {\n    key: \"colors\",\n    get: function get() {\n      return this.getUniqueColors(this.props.colors);\n    }\n  }, {\n    key: \"containerWidth\",\n    get: function get() {\n      var containerWidth = this.props.containerWidth;\n      return containerWidth || Constants.screenWidth;\n    }\n  }, {\n    key: \"getNumberOfRows\",\n    value: function getNumberOfRows() {\n      var _this$props$numberOfR = this.props.numberOfRows,\n        numberOfRows = _this$props$numberOfR === void 0 ? DEFAULT_NUMBER_OF_ROWS : _this$props$numberOfR;\n      if (!_inRange(numberOfRows, 2, 6)) {\n        console.warn(`${numberOfRows} is not within valid range of color rows (2 to 5);\n        defaulting to ${DEFAULT_NUMBER_OF_ROWS}.`);\n        return DEFAULT_NUMBER_OF_ROWS;\n      }\n      return numberOfRows;\n    }\n  }, {\n    key: \"getItemsPerRow\",\n    value: function getItemsPerRow() {\n      var itemsPerRow = 1;\n      var firstItemWidth = 2 * HORIZONTAL_PADDING + SWATCH_SIZE;\n      var additionalItemMinimumWidth = SWATCH_SIZE + MINIMUM_MARGIN;\n      itemsPerRow += Math.floor((this.containerWidth - firstItemWidth) / additionalItemMinimumWidth);\n      return itemsPerRow;\n    }\n  }, {\n    key: \"shouldUsePagination\",\n    value: function shouldUsePagination() {\n      var usePagination = this.props.usePagination;\n      return usePagination && this.colors.length > this.itemsPerPage;\n    }\n  }, {\n    key: \"getInnerMargin\",\n    value: function getInnerMargin() {\n      if (!this.usePagination) {\n        return HORIZONTAL_PADDING / 2;\n      }\n      var remainingSpace = this.containerWidth - this.itemsPerRow * SWATCH_SIZE - 2 * HORIZONTAL_PADDING;\n      var numberOfMargins = this.itemsPerRow - 1;\n      var margin = remainingSpace / numberOfMargins;\n      return (margin - 0.001) / 2;\n    }\n  }, {\n    key: \"renderColorSwatch\",\n    value: function renderColorSwatch(color, index) {\n      var _this$props = this.props,\n        animatedIndex = _this$props.animatedIndex,\n        testID = _this$props.testID;\n      return _jsxDEV(ColorSwatch, {\n        style: this.getSwatchStyle(index),\n        index: index,\n        color: color,\n        value: color,\n        selected: this.value === color,\n        animated: index === animatedIndex,\n        onPress: this.onValueChange,\n        ref: this.itemsRefs.current[index],\n        testID: `${testID}-${color}`\n      }, color, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    key: \"renderPalette\",\n    value: function renderPalette(props, contentStyle, colors, pageIndex) {\n      var _this3 = this;\n      var style = props.style,\n        others = _objectWithoutProperties(props, _excluded);\n      return _jsxDEV(View, _objectSpread(_objectSpread({}, others), {}, {\n        style: [styles.paletteContainer, contentStyle, style],\n        children: _map(colors, function (color, i) {\n          if (color === _this3.value) {\n            _this3.selectedColorIndex = i;\n            _this3.selectedPage = pageIndex;\n          }\n          return _this3.renderColorSwatch(color, i);\n        })\n      }), pageIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    key: \"renderScrollableContent\",\n    value: function renderScrollableContent() {\n      var _this$props2 = this.props,\n        containerStyle = _this$props2.containerStyle,\n        backgroundColor = _this$props2.backgroundColor,\n        others = _objectWithoutProperties(_this$props2, _excluded2);\n      var _this$state2 = this.state,\n        scrollable = _this$state2.scrollable,\n        contentWidth = _this$state2.contentWidth;\n      return _jsxDEV(ScrollBar, {\n        ref: this.scrollBar,\n        style: [containerStyle, {\n          backgroundColor: backgroundColor\n        }],\n        scrollEnabled: scrollable,\n        onContentSizeChange: this.onContentSizeChange,\n        height: SCROLLABLE_HEIGHT,\n        containerProps: {\n          width: !scrollable ? contentWidth : undefined\n        },\n        gradientHeight: SCROLLABLE_HEIGHT - 12,\n        gradientColor: backgroundColor,\n        children: this.renderPalette(others, styles.scrollContent, this.colors, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    key: \"renderPaginationContent\",\n    value: function renderPaginationContent() {\n      var _this4 = this;\n      var _this$props3 = this.props,\n        containerStyle = _this$props3.containerStyle,\n        loop = _this$props3.loop,\n        backgroundColor = _this$props3.backgroundColor,\n        others = _objectWithoutProperties(_this$props3, _excluded3);\n      var currentPage = this.state.currentPage;\n      var colorGroups = _chunk(this.colors, this.itemsPerPage);\n      return _jsxDEV(View, {\n        center: true,\n        style: [containerStyle, styles.paginationContainer, {\n          backgroundColor: backgroundColor\n        }],\n        children: [_jsxDEV(Carousel, {\n          loop: loop,\n          onChangePage: this.onChangePage,\n          ref: this.carousel,\n          children: _map(colorGroups, function (colorsPerPage, index) {\n            return _this4.renderPalette(others, _objectSpread(_objectSpread({}, styles.page), {}, {\n              width: _this4.containerWidth\n            }), colorsPerPage, index);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 9\n        }, this), _jsxDEV(PageControl, {\n          size: 6,\n          color: Colors.$backgroundInverted,\n          inactiveColor: Colors.$backgroundDisabled,\n          spacing: 8,\n          numOfPages: colorGroups.length,\n          currentPage: currentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 12\n      }, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.usePagination ? this.renderPaginationContent() : this.renderScrollableContent();\n    }\n  }]);\n}(PureComponent);\nColorPalette.displayName = 'ColorPalette';\nColorPalette.defaultProps = {\n  numberOfRows: DEFAULT_NUMBER_OF_ROWS,\n  usePagination: true,\n  loop: true,\n  backgroundColor: Colors.$backgroundDefault\n};\nexport default ColorPalette;\nvar styles = StyleSheet.create({\n  paletteContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: HORIZONTAL_PADDING,\n    paddingVertical: VERTICAL_PADDING\n  },\n  paginationContainer: {\n    flex: 1,\n    paddingBottom: VERTICAL_PADDING\n  },\n  page: {\n    flexWrap: 'wrap'\n  },\n  scrollContent: {\n    height: SCROLLABLE_HEIGHT,\n    paddingLeft: 12\n  }\n});","map":{"version":3,"names":["_chunk","_isUndefined","_inRange","_uniq","_map","_toUpper","_times","memoize","React","PureComponent","StyleSheet","Colors","Constants","View","Carousel","ScrollBar","PageControl","ColorSwatch","SWATCH_SIZE","SWATCH_MARGIN","jsxDEV","_jsxDEV","VERTICAL_PADDING","HORIZONTAL_PADDING","MINIMUM_MARGIN","SCROLLABLE_HEIGHT","DEFAULT_NUMBER_OF_ROWS","ColorPalette","_PureComponent","props","_this","_classCallCheck","_callSuper","carousel","createRef","scrollBar","itemsRefs","selectedColorIndex","undefined","selectedPage","currentColorsCount","itemsPerRow","itemsPerPage","usePagination","innerMargin","swatchStyles","onOrientationChanged","state","orientation","initLocalVariables","setState","getUniqueColors","colors","c","color","isTransparent","scrollToSelected","setTimeout","_this$state","scrollable","currentPage","current","_this$itemsRefs$curre","childRef","childLayout","getLayout","leftMargins","getHorizontalMargins","marginLeft","childX","x","width","containerWidth","_this$scrollBar","_this$scrollBar$curre","scrollTo","y","animated","_this$carousel","_this$carousel$curren","goToPage","onContentSizeChange","contentWidth","onChangePage","index","onValueChange","value","options","isFirst","isOnLeft","isOnRight","marginRight","isLast","length","getSwatchStyle","sizeHasChanged","isNextToLastIndex","swatchStyle","_inherits","_createClass","key","componentDidMount","_this2","dimensionsChangeListener","addDimensionsEventListener","i","componentDidUpdate","prevProps","newIndex","componentWillUnmount","removeDimensionsEventListener","getItemsPerRow","getNumberOfRows","shouldUsePagination","getInnerMargin","get","screenWidth","_this$props$numberOfR","numberOfRows","console","warn","firstItemWidth","additionalItemMinimumWidth","Math","floor","remainingSpace","numberOfMargins","margin","renderColorSwatch","_this$props","animatedIndex","testID","style","selected","onPress","ref","fileName","_jsxFileName","lineNumber","columnNumber","renderPalette","contentStyle","pageIndex","_this3","others","_objectWithoutProperties","_excluded","_objectSpread","styles","paletteContainer","children","renderScrollableContent","_this$props2","containerStyle","backgroundColor","_excluded2","_this$state2","scrollEnabled","height","containerProps","gradientHeight","gradientColor","scrollContent","renderPaginationContent","_this4","_this$props3","loop","_excluded3","colorGroups","center","paginationContainer","colorsPerPage","page","size","$backgroundInverted","inactiveColor","$backgroundDisabled","spacing","numOfPages","render","displayName","defaultProps","$backgroundDefault","create","flexDirection","alignItems","paddingLeft","paddingVertical","flex","paddingBottom","flexWrap"],"sources":["/workspaces/expo-starter/node_modules/react-native-ui-lib/src/components/colorPalette/index.js"],"sourcesContent":["import _chunk from \"lodash/chunk\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _inRange from \"lodash/inRange\";\nimport _uniq from \"lodash/uniq\";\nimport _map from \"lodash/map\";\nimport _toUpper from \"lodash/toUpper\";\nimport _times from \"lodash/times\";\nimport memoize from 'memoize-one';\nimport React, { PureComponent } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Colors } from \"../../style\";\nimport { Constants } from \"../../commons/new\";\nimport View from \"../view\";\nimport Carousel from \"../carousel\";\nimport ScrollBar from \"../scrollBar\";\nimport PageControl from \"../pageControl\";\nimport ColorSwatch, { SWATCH_SIZE, SWATCH_MARGIN } from \"../colorSwatch\";\nconst VERTICAL_PADDING = 16;\nconst HORIZONTAL_PADDING = 20;\nconst MINIMUM_MARGIN = 16;\nconst SCROLLABLE_HEIGHT = 92;\nconst DEFAULT_NUMBER_OF_ROWS = 3;\n\n/**\n * @description: A color palette component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ColorPickerScreen.tsx\n * @notes: This is a screen width component\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/ColorPalette/ColorPalette.gif?raw=true\n */\nclass ColorPalette extends PureComponent {\n  static displayName = 'ColorPalette';\n  static defaultProps = {\n    numberOfRows: DEFAULT_NUMBER_OF_ROWS,\n    usePagination: true,\n    loop: true,\n    backgroundColor: Colors.$backgroundDefault\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 0,\n      scrollable: false,\n      orientation: undefined,\n      contentWidth: undefined\n    };\n    this.initLocalVariables();\n  }\n  carousel = React.createRef();\n  scrollBar = React.createRef();\n  itemsRefs = React.createRef();\n  selectedColorIndex = undefined;\n  selectedPage = undefined;\n  currentColorsCount = undefined;\n  itemsPerRow = 0;\n  itemsPerPage = 0;\n  usePagination = undefined;\n  innerMargin = undefined;\n  swatchStyles = undefined;\n  componentDidMount() {\n    this.dimensionsChangeListener = Constants.addDimensionsEventListener(this.onOrientationChanged);\n    _times(this.props.colors.length, i => {\n      this.itemsRefs.current[i] = React.createRef();\n    });\n    this.scrollToSelected();\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.colors !== prevProps.colors) {\n      const newIndex = this.itemsRefs.current.length;\n      this.itemsRefs.current[newIndex] = React.createRef();\n      this.scrollToSelected();\n    }\n  }\n  componentWillUnmount() {\n    Constants.removeDimensionsEventListener(this.dimensionsChangeListener || this.onOrientationChanged);\n  }\n  onOrientationChanged = () => {\n    if (this.state.orientation !== Constants.orientation) {\n      this.initLocalVariables();\n      this.setState({\n        orientation: Constants.orientation\n      }); // only to trigger render\n    }\n  };\n\n  initLocalVariables() {\n    this.itemsRefs.current = [];\n    this.selectedColorIndex = undefined;\n    this.selectedPage = undefined;\n    this.currentColorsCount = this.colors.length;\n    this.itemsPerRow = this.getItemsPerRow();\n    this.itemsPerPage = this.itemsPerRow * this.getNumberOfRows();\n    this.usePagination = this.shouldUsePagination();\n    this.innerMargin = this.getInnerMargin();\n    this.swatchStyles = [];\n  }\n  get value() {\n    const {\n      value\n    } = this.props;\n    if (Colors.isTransparent(value)) {\n      return value;\n    }\n    return _toUpper(value);\n  }\n  get colors() {\n    return this.getUniqueColors(this.props.colors);\n  }\n  get containerWidth() {\n    const {\n      containerWidth\n    } = this.props;\n    return containerWidth || Constants.screenWidth;\n  }\n  getUniqueColors = memoize(colors => {\n    const c = _map(colors, color => {\n      if (Colors.isTransparent(color)) {\n        return color;\n      }\n      return _toUpper(color);\n    });\n    return _uniq(c);\n  });\n  getNumberOfRows() {\n    const {\n      numberOfRows = DEFAULT_NUMBER_OF_ROWS\n    } = this.props;\n    if (!_inRange(numberOfRows, 2, 6)) {\n      console.warn(`${numberOfRows} is not within valid range of color rows (2 to 5);\n        defaulting to ${DEFAULT_NUMBER_OF_ROWS}.`);\n      return DEFAULT_NUMBER_OF_ROWS;\n    }\n    return numberOfRows;\n  }\n  getItemsPerRow() {\n    let itemsPerRow = 1;\n    // first item has the page's padding around it\n    const firstItemWidth = 2 * HORIZONTAL_PADDING + SWATCH_SIZE;\n    // additional items have the minimum width of the margin between them and the previous item's width\n    const additionalItemMinimumWidth = SWATCH_SIZE + MINIMUM_MARGIN;\n    // floor(space left / size of additional items)\n    itemsPerRow += Math.floor((this.containerWidth - firstItemWidth) / additionalItemMinimumWidth);\n    return itemsPerRow;\n  }\n  shouldUsePagination() {\n    const {\n      usePagination\n    } = this.props;\n    return usePagination && this.colors.length > this.itemsPerPage;\n  }\n  getInnerMargin() {\n    if (!this.usePagination) {\n      return HORIZONTAL_PADDING / 2;\n    }\n\n    // Now that we have the itemsPerRow set, we can calculate the actual innerMargin\n    const remainingSpace = this.containerWidth - this.itemsPerRow * SWATCH_SIZE - 2 * HORIZONTAL_PADDING;\n    // With pagination - there's 1 less space than the number of items\n    const numberOfMargins = this.itemsPerRow - 1;\n    const margin = remainingSpace / numberOfMargins;\n    // We have to subtract something since otherwise some Android devices will overflow into the next line\n    return (margin - 0.001) / 2;\n  }\n  scrollToSelected = () => setTimeout(() => {\n    const {\n      scrollable,\n      currentPage\n    } = this.state;\n    if (scrollable && this.selectedColorIndex !== undefined && this.itemsRefs.current) {\n      // The this.selectedColorIndex layout doesn't update on time\n      // so we use this.selectedColorIndex - 1 and add an offset of 1 Swatch\n      const childRef = this.itemsRefs.current[this.selectedColorIndex - 1]?.current;\n      if (childRef) {\n        const childLayout = childRef.getLayout();\n        const leftMargins = this.getHorizontalMargins(this.selectedColorIndex).marginLeft;\n        const childX = childLayout.x + childLayout.width + SWATCH_MARGIN + leftMargins + SWATCH_SIZE;\n        if (childX > this.containerWidth) {\n          this.scrollBar?.current?.scrollTo({\n            x: childX + HORIZONTAL_PADDING - this.containerWidth,\n            y: 0,\n            animated: false\n          });\n        }\n      } else if (this.usePagination) {\n        this.carousel?.current?.goToPage(this.selectedPage || currentPage, false);\n      }\n    }\n  }, 100);\n  onContentSizeChange = contentWidth => {\n    this.setState({\n      scrollable: contentWidth > this.containerWidth,\n      contentWidth\n    });\n  };\n  onChangePage = index => {\n    this.setState({\n      currentPage: index\n    });\n  };\n  onValueChange = (value, options) => {\n    this.props.onValueChange?.(value, options);\n  };\n  getHorizontalMargins = index => {\n    const isFirst = index === 0;\n    const isOnLeft = isFirst || index % this.itemsPerRow === 0;\n    const isOnRight = index % this.itemsPerRow === this.itemsPerRow - 1;\n    let marginLeft;\n    let marginRight;\n    if (this.usePagination) {\n      marginLeft = isOnLeft ? 0 : this.innerMargin;\n      marginRight = isOnRight ? 0 : this.innerMargin;\n    } else {\n      const isLast = index === this.colors.length - 1;\n      marginLeft = isFirst ? 8 : this.innerMargin;\n      marginRight = isLast ? 20 : this.innerMargin;\n    }\n    return {\n      marginLeft,\n      marginRight\n    };\n  };\n  getSwatchStyle = index => {\n    const sizeHasChanged = this.colors.length !== this.currentColorsCount;\n    const isNextToLastIndex = index === this.colors.length - 2;\n\n    // Need to update the next to last item because it's margin needs to changed\n    if (!_isUndefined(this.swatchStyles)) {\n      if (_isUndefined(this.swatchStyles[index]) || !this.usePagination && sizeHasChanged && isNextToLastIndex) {\n        this.swatchStyles[index] = [this.getHorizontalMargins(index), this.props.swatchStyle];\n        if (sizeHasChanged && isNextToLastIndex) {\n          this.currentColorsCount = this.colors.length;\n        }\n      }\n      return this.swatchStyles[index];\n    }\n  };\n  renderColorSwatch(color, index) {\n    const {\n      animatedIndex,\n      testID\n    } = this.props;\n    return <ColorSwatch style={this.getSwatchStyle(index)} index={index} key={color} color={color} value={color} selected={this.value === color} animated={index === animatedIndex} onPress={this.onValueChange} ref={this.itemsRefs.current[index]} testID={`${testID}-${color}`} />;\n  }\n  renderPalette(props, contentStyle, colors, pageIndex) {\n    const {\n      style,\n      ...others\n    } = props;\n    return <View key={pageIndex} {...others} style={[styles.paletteContainer, contentStyle, style]}>\n        {_map(colors, (color, i) => {\n        if (color === this.value) {\n          this.selectedColorIndex = i;\n          this.selectedPage = pageIndex;\n        }\n        return this.renderColorSwatch(color, i);\n      })}\n      </View>;\n  }\n  renderScrollableContent() {\n    const {\n      containerStyle,\n      backgroundColor,\n      ...others\n    } = this.props;\n    const {\n      scrollable,\n      contentWidth\n    } = this.state;\n    return <ScrollBar ref={this.scrollBar} style={[containerStyle, {\n      backgroundColor\n    }]} scrollEnabled={scrollable} onContentSizeChange={this.onContentSizeChange} height={SCROLLABLE_HEIGHT} containerProps={{\n      width: !scrollable ? contentWidth : undefined\n    }} gradientHeight={SCROLLABLE_HEIGHT - 12} gradientColor={backgroundColor}>\n        {this.renderPalette(others, styles.scrollContent, this.colors, 0)}\n      </ScrollBar>;\n  }\n  renderPaginationContent() {\n    const {\n      containerStyle,\n      loop,\n      backgroundColor,\n      ...others\n    } = this.props;\n    const {\n      currentPage\n    } = this.state;\n    const colorGroups = _chunk(this.colors, this.itemsPerPage);\n    return <View center style={[containerStyle, styles.paginationContainer, {\n      backgroundColor\n    }]}>\n        <Carousel loop={loop} onChangePage={this.onChangePage} ref={this.carousel}>\n          {_map(colorGroups, (colorsPerPage, index) => {\n          return this.renderPalette(others, {\n            ...styles.page,\n            width: this.containerWidth\n          }, colorsPerPage, index);\n        })}\n        </Carousel>\n        <PageControl size={6} color={Colors.$backgroundInverted} inactiveColor={Colors.$backgroundDisabled} spacing={8} numOfPages={colorGroups.length} currentPage={currentPage} />\n      </View>;\n  }\n  render() {\n    return this.usePagination ? this.renderPaginationContent() : this.renderScrollableContent();\n  }\n}\nexport default ColorPalette;\nconst styles = StyleSheet.create({\n  paletteContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: HORIZONTAL_PADDING,\n    paddingVertical: VERTICAL_PADDING\n  },\n  paginationContainer: {\n    flex: 1,\n    paddingBottom: VERTICAL_PADDING\n  },\n  page: {\n    flexWrap: 'wrap'\n  },\n  scrollContent: {\n    height: SCROLLABLE_HEIGHT,\n    paddingLeft: 12\n  }\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
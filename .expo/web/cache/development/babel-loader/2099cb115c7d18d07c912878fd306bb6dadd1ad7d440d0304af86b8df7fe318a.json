{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _map from \"lodash/map\";\nimport _toLower from \"lodash/toLower\";\nimport _toUpper from \"lodash/toUpper\";\nimport _inRange from \"lodash/inRange\";\nimport _reverse from \"lodash/reverse\";\nimport _memoize from \"lodash/memoize\";\nimport _indexOf from \"lodash/indexOf\";\nimport _findKey from \"lodash/findKey\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _isNil from \"lodash/isNil\";\nimport _forEach from \"lodash/forEach\";\nimport Color from 'color';\nimport tinycolor from 'tinycolor2';\nimport { colorsPalette } from \"./colorsPalette\";\nimport DesignTokens from \"./designTokens\";\nimport DesignTokensDM from \"./designTokensDM\";\nimport ColorName from \"./colorName\";\nimport Scheme from \"./scheme\";\nexport var Colors = function () {\n  function Colors() {\n    var _this = this;\n    _classCallCheck(this, Colors);\n    this.shouldSupportDarkMode = false;\n    this.generatePalette = _memoize(function (color) {\n      var hsl = Color(color).hsl();\n      var lightness = Math.round(hsl.color[2]);\n      var lightColorsThreshold = _this.shouldGenerateDarkerPalette(color) ? 5 : 0;\n      var ls = [hsl.color[2]];\n      var l = lightness - 10;\n      while (l >= 20 - lightColorsThreshold) {\n        ls.unshift(l);\n        l -= 10;\n      }\n      l = lightness + 10;\n      while (l < 100 - lightColorsThreshold) {\n        ls.push(l);\n        l += 10;\n      }\n      var tints = [];\n      _forEach(ls, function (e) {\n        var tint = generateColorTint(color, e);\n        tints.push(tint);\n      });\n      var sliced = tints.slice(0, 8);\n      var adjusted = adjustSaturation(sliced, color);\n      return adjusted || sliced;\n    });\n    this.generateColorPalette = _memoize(function (color) {\n      var palette = _this.generatePalette(color);\n      return _this.shouldSupportDarkMode && Scheme.getSchemeType() === 'dark' ? _reverse(palette) : palette;\n    });\n    var colors = Object.assign(colorsPalette);\n    Object.assign(this, colors);\n    this.loadSchemes({\n      light: DesignTokens,\n      dark: DesignTokensDM\n    });\n    Scheme.addChangeListener(function () {\n      Object.assign(_this, Scheme.getScheme());\n    });\n  }\n  return _createClass(Colors, [{\n    key: \"loadColors\",\n    value: function loadColors(colors) {\n      var _this2 = this;\n      _forEach(colors, function (value, key) {\n        _this2[key] = value;\n      });\n    }\n  }, {\n    key: \"loadSchemes\",\n    value: function loadSchemes(schemes) {\n      Scheme.loadSchemes(schemes);\n      Object.assign(this, Scheme.getScheme());\n    }\n  }, {\n    key: \"loadDesignTokens\",\n    value: function loadDesignTokens(options) {\n      this.loadSchemes({\n        light: this.generateDesignTokens(options.primaryColor),\n        dark: this.generateDesignTokens(options.primaryColor, true)\n      });\n    }\n  }, {\n    key: \"getScheme\",\n    value: function getScheme() {\n      return Scheme.getSchemeType();\n    }\n  }, {\n    key: \"setScheme\",\n    value: function setScheme(scheme) {\n      Scheme.setScheme(scheme);\n    }\n  }, {\n    key: \"supportDarkMode\",\n    value: function supportDarkMode() {\n      this.shouldSupportDarkMode = true;\n    }\n  }, {\n    key: \"rgba\",\n    value: function rgba(p1, p2, p3, p4) {\n      var hex;\n      var opacity;\n      var red;\n      var green;\n      var blue;\n      if (typeof p1 === 'object') {\n        p1 = colorStringValue(p1);\n      }\n      if (arguments.length === 2 && typeof p1 === 'string') {\n        hex = p1;\n        opacity = p2;\n        hex = validateHex(hex);\n        red = parseInt(hex.substring(0, 2), 16);\n        green = parseInt(hex.substring(2, 4), 16);\n        blue = parseInt(hex.substring(4, 6), 16);\n      } else if (arguments.length === 4 && typeof p1 === 'number') {\n        red = validateRGB(p1);\n        green = validateRGB(p2);\n        blue = validateRGB(p3);\n        opacity = p4;\n      } else {\n        throw new Error('rgba can work with either 2 or 4 arguments');\n      }\n      return `rgba(${red}, ${green}, ${blue}, ${opacity})`;\n    }\n  }, {\n    key: \"getBackgroundKeysPattern\",\n    value: function getBackgroundKeysPattern() {\n      return /^(bg-|background-)/;\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty(color) {\n      if (_isNil(color) || color === 'transparent') {\n        return true;\n      }\n      try {\n        Color(color);\n        return false;\n      } catch (error) {\n        console.warn('Colors.isEmpty failed:', error);\n        return true;\n      }\n    }\n  }, {\n    key: \"getColorName\",\n    value: function getColorName(colorValue) {\n      var color = colorStringValue(colorValue);\n      return ColorName.name(color)[1];\n    }\n  }, {\n    key: \"getSystemColorByHex\",\n    value: function getSystemColorByHex(colorValue) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var color = colorStringValue(colorValue);\n      var results = [];\n      var validColors = options == null ? void 0 : options.validColors;\n      for (var _ref of Object.entries(this)) {\n        var _ref2 = _slicedToArray(_ref, 2);\n        var key = _ref2[0];\n        var value = _ref2[1];\n        if (value.toString() === color) {\n          if (validColors != null && validColors.includes(key.split(/[0-9]/)[0])) {\n            return key;\n          } else {\n            results.push(key);\n          }\n        }\n      }\n      return validColors ? undefined : results[0];\n    }\n  }, {\n    key: \"getColorTint\",\n    value: function getColorTint(colorValue, tintKey) {\n      var _this3 = this;\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (_isUndefined(tintKey) || isNaN(tintKey) || _isUndefined(colorValue)) {\n        return colorValue;\n      }\n      var color = colorStringValue(colorValue);\n      if (color === 'transparent') {\n        return color;\n      }\n      var colorKey = _findKey(this, function (_value, key) {\n        return _this3[key] === color;\n      });\n      if (colorKey) {\n        var colorKeys = [1, 5, 10, 20, 30, 40, 50, 60, 70, 80];\n        var keyIndex = _indexOf(colorKeys, Number(tintKey));\n        var shouldReverseOnDark = !(options != null && options.avoidReverseOnDark) && this.shouldSupportDarkMode && Scheme.getSchemeType() === 'dark';\n        var key = shouldReverseOnDark ? colorKeys[colorKeys.length - 1 - keyIndex] : tintKey;\n        var requiredColorKey = `${colorKey.slice(0, -2)}${key}`;\n        var requiredColorKey1 = `${colorKey.slice(0, -1)}${key}`;\n        var requiredColor = this[requiredColorKey] || this[requiredColorKey1];\n        if (_isUndefined(requiredColor)) {\n          return this.getTintedColorForDynamicHex(color, tintKey);\n        }\n        return requiredColor;\n      }\n      return this.getTintedColorForDynamicHex(color, tintKey);\n    }\n  }, {\n    key: \"getTintedColorForDynamicHex\",\n    value: function getTintedColorForDynamicHex(color, tintKey) {\n      var tintLevel = Math.floor(Number(tintKey) / 10);\n      tintLevel = Math.max(1, tintLevel);\n      tintLevel = Math.min(8, tintLevel);\n      var colorsPalette = this.generateColorPalette(color);\n      return colorsPalette[tintLevel - 1];\n    }\n  }, {\n    key: \"generateDesignTokens\",\n    value: function generateDesignTokens(primaryColor, dark) {\n      var colorPalette = this.generatePalette(primaryColor);\n      if (dark) {\n        colorPalette = _reverse(colorPalette);\n      }\n      var color30 = colorPalette[2];\n      var color50 = colorPalette[4];\n      var color70 = colorPalette[6];\n      var color80 = colorPalette[7];\n      var isPrimaryColorDark = this.isDark(primaryColor);\n      var mainColor = isPrimaryColorDark ? primaryColor : color30;\n      if (dark) {\n        mainColor = isPrimaryColorDark ? color30 : primaryColor;\n      }\n      return {\n        $backgroundPrimaryHeavy: mainColor,\n        $backgroundPrimaryLight: color80,\n        $backgroundPrimaryMedium: color70,\n        $iconPrimary: mainColor,\n        $iconPrimaryLight: color50,\n        $textPrimary: mainColor,\n        $outlinePrimary: mainColor\n      };\n    }\n  }, {\n    key: \"shouldGenerateDarkerPalette\",\n    value: function shouldGenerateDarkerPalette(color) {\n      var hsl = Color(color).hsl();\n      var hue = hsl.color[0];\n      return _inRange(hue, 51, 184);\n    }\n  }, {\n    key: \"isDark\",\n    value: function isDark(colorValue) {\n      var darkThreshold = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.55;\n      var color = colorValue === null ? undefined : colorStringValue(colorValue);\n      var lum = tinycolor(color).getLuminance();\n      return lum < darkThreshold;\n    }\n  }, {\n    key: \"isValidHex\",\n    value: function isValidHex(string) {\n      return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(string);\n    }\n  }, {\n    key: \"getHexString\",\n    value: function getHexString(color) {\n      return tinycolor(color).toHexString();\n    }\n  }, {\n    key: \"getHSL\",\n    value: function getHSL(color) {\n      return tinycolor(color).toHsl();\n    }\n  }, {\n    key: \"isTransparent\",\n    value: function isTransparent(color) {\n      return color && _toUpper(color) === _toUpper('transparent');\n    }\n  }, {\n    key: \"areEqual\",\n    value: function areEqual(colorAValue, colorBValue) {\n      var colorA = colorStringValue(colorAValue);\n      var colorB = colorStringValue(colorBValue);\n      return _toLower(colorA) === _toLower(colorB);\n    }\n  }, {\n    key: \"isDesignToken\",\n    value: function isDesignToken(color) {\n      return !!(color != null && color.semantic || color != null && color.resource_paths);\n    }\n  }]);\n}();\nfunction colorStringValue(color) {\n  return color == null ? void 0 : color.toString();\n}\nfunction adjustSaturation(colors, color) {\n  var array;\n  var lightnessLevel = 80;\n  var saturationLevel = 60;\n  var hsl = Color(color).hsl();\n  var lightness = Math.round(hsl.color[2]);\n  if (lightness > lightnessLevel) {\n    var saturation = Math.round(hsl.color[1]);\n    if (saturation > saturationLevel) {\n      array = _map(colors, function (e) {\n        return e !== color ? addSaturation(e, saturationLevel) : e;\n      });\n    }\n  }\n  return array;\n}\nfunction addSaturation(color, saturation) {\n  var hsl = Color(color).hsl();\n  hsl.color[1] = saturation;\n  return hsl.hex();\n}\nfunction generateColorTint(color, tintLevel) {\n  var hsl = Color(color).hsl();\n  hsl.color[2] = tintLevel;\n  return hsl.hex();\n}\nfunction validateRGB(value) {\n  if (isNaN(value) || value > 255 || value < 0) {\n    throw new Error(`${value} is invalid rgb code, please use number between 0-255`);\n  }\n  return value;\n}\nfunction validateHex(value) {\n  if (!/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(value)) {\n    throw new Error(`${value} is invalid hex color`);\n  }\n  value = value.replace('#', '');\n  if (value.length === 3) {\n    value = threeDigitHexToSix(value);\n  }\n  return value;\n}\nfunction threeDigitHexToSix(value) {\n  return value.replace(/./g, '$&$&');\n}\nvar TypedColors = Colors;\nvar colorObject = new TypedColors();\ncolorObject.loadColors(colorsPalette);\nexport default colorObject;","map":{"version":3,"names":["_map","_toLower","_toUpper","_inRange","_reverse","_memoize","_indexOf","_findKey","_isUndefined","_isNil","_forEach","Color","tinycolor","colorsPalette","DesignTokens","DesignTokensDM","ColorName","Scheme","Colors","_this","_classCallCheck","shouldSupportDarkMode","generatePalette","color","hsl","lightness","Math","round","lightColorsThreshold","shouldGenerateDarkerPalette","ls","l","unshift","push","tints","e","tint","generateColorTint","sliced","slice","adjusted","adjustSaturation","generateColorPalette","palette","getSchemeType","colors","Object","assign","loadSchemes","light","dark","addChangeListener","getScheme","_createClass","key","value","loadColors","_this2","schemes","loadDesignTokens","options","generateDesignTokens","primaryColor","setScheme","scheme","supportDarkMode","rgba","p1","p2","p3","p4","hex","opacity","red","green","blue","colorStringValue","arguments","length","validateHex","parseInt","substring","validateRGB","Error","getBackgroundKeysPattern","isEmpty","error","console","warn","getColorName","colorValue","name","getSystemColorByHex","undefined","results","validColors","_ref","entries","_ref2","_slicedToArray","toString","includes","split","getColorTint","tintKey","_this3","isNaN","colorKey","_value","colorKeys","keyIndex","Number","shouldReverseOnDark","avoidReverseOnDark","requiredColorKey","requiredColorKey1","requiredColor","getTintedColorForDynamicHex","tintLevel","floor","max","min","colorPalette","color30","color50","color70","color80","isPrimaryColorDark","isDark","mainColor","$backgroundPrimaryHeavy","$backgroundPrimaryLight","$backgroundPrimaryMedium","$iconPrimary","$iconPrimaryLight","$textPrimary","$outlinePrimary","hue","darkThreshold","lum","getLuminance","isValidHex","string","test","getHexString","toHexString","getHSL","toHsl","isTransparent","areEqual","colorAValue","colorBValue","colorA","colorB","isDesignToken","semantic","resource_paths","array","lightnessLevel","saturationLevel","saturation","addSaturation","replace","threeDigitHexToSix","TypedColors","colorObject"],"sources":["/workspaces/expo-starter/node_modules/react-native-ui-lib/src/style/colors.js"],"sourcesContent":["import _map from \"lodash/map\";\nimport _toLower from \"lodash/toLower\";\nimport _toUpper from \"lodash/toUpper\";\nimport _inRange from \"lodash/inRange\";\nimport _reverse from \"lodash/reverse\";\nimport _memoize from \"lodash/memoize\";\nimport _indexOf from \"lodash/indexOf\";\nimport _findKey from \"lodash/findKey\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _isNil from \"lodash/isNil\";\nimport _forEach from \"lodash/forEach\";\n//@ts-ignore\nimport Color from 'color';\nimport tinycolor from 'tinycolor2';\nimport { colorsPalette } from \"./colorsPalette\";\nimport DesignTokens from \"./designTokens\";\nimport DesignTokensDM from \"./designTokensDM\";\n//@ts-ignore\nimport ColorName from \"./colorName\";\nimport Scheme from \"./scheme\";\nexport class Colors {\n  shouldSupportDarkMode = false;\n  constructor() {\n    const colors = Object.assign(colorsPalette);\n    Object.assign(this, colors);\n    this.loadSchemes({\n      light: DesignTokens,\n      dark: DesignTokensDM\n    });\n    Scheme.addChangeListener(() => {\n      Object.assign(this, Scheme.getScheme());\n    });\n  }\n  /**\n   * Load custom set of colors\n   * arguments:\n   * colors - map of keys and colors values e.g {grey10: '#20303C', grey20: '#43515C'}\n   */\n  loadColors(colors) {\n    _forEach(colors, (value, key) => {\n      this[key] = value;\n    });\n  }\n  /**\n   * Load set of schemes for light/dark mode\n   * arguments:\n   * schemes - two sets of map of colors e.g {light: {screen: 'white'}, dark: {screen: 'black'}}\n   */\n  loadSchemes(schemes) {\n    Scheme.loadSchemes(schemes);\n    Object.assign(this, Scheme.getScheme());\n  }\n\n  /**\n   * Load light and dark schemes based on generated design tokens\n   * @param color - palette color\n   */\n  loadDesignTokens(options) {\n    this.loadSchemes({\n      light: this.generateDesignTokens(options.primaryColor),\n      dark: this.generateDesignTokens(options.primaryColor, true)\n    });\n  }\n\n  /**\n   * Get app's current color scheme\n   */\n  getScheme() {\n    return Scheme.getSchemeType();\n  }\n\n  /**\n   * Set color scheme for app\n   * arguments:\n   * scheme - color scheme e.g light/dark/default\n   */\n  setScheme(scheme) {\n    Scheme.setScheme(scheme);\n  }\n\n  /**\n   * Support listening to Appearance changes\n   * and change the design tokens accordingly\n   */\n  supportDarkMode() {\n    this.shouldSupportDarkMode = true;\n  }\n\n  /**\n   * Add alpha to hex or rgb color\n   * arguments:\n   * p1 - hex color / R part of RGB\n   * p2 - opacity / G part of RGB\n   * p3 - B part of RGB\n   * p4 - opacity\n   */\n\n  rgba(p1, p2, p3, p4) {\n    let hex;\n    let opacity;\n    let red;\n    let green;\n    let blue;\n\n    // Handle design token PlatformColor object\n    if (typeof p1 === 'object') {\n      p1 = colorStringValue(p1);\n    }\n    if (arguments.length === 2 && typeof p1 === 'string') {\n      hex = p1;\n      opacity = p2;\n      hex = validateHex(hex);\n      red = parseInt(hex.substring(0, 2), 16);\n      green = parseInt(hex.substring(2, 4), 16);\n      blue = parseInt(hex.substring(4, 6), 16);\n    } else if (arguments.length === 4 && typeof p1 === 'number') {\n      red = validateRGB(p1);\n      green = validateRGB(p2);\n      blue = validateRGB(p3);\n      opacity = p4;\n    } else {\n      throw new Error('rgba can work with either 2 or 4 arguments');\n    }\n    return `rgba(${red}, ${green}, ${blue}, ${opacity})`;\n  }\n  getBackgroundKeysPattern() {\n    return /^(bg-|background-)/;\n  }\n  isEmpty(color) {\n    if (_isNil(color) || color === 'transparent') {\n      return true;\n    }\n    try {\n      Color(color);\n      return false;\n    } catch (error) {\n      console.warn('Colors.isEmpty failed:', error);\n      return true;\n    }\n  }\n  getColorName(colorValue) {\n    const color = colorStringValue(colorValue);\n    return ColorName.name(color)[1];\n  }\n  getSystemColorByHex(colorValue, options = {}) {\n    const color = colorStringValue(colorValue);\n    const results = [];\n    const validColors = options?.validColors;\n    for (const [key, value] of Object.entries(this)) {\n      if (value.toString() === color) {\n        if (validColors?.includes(key.split(/[0-9]/)[0])) {\n          return key;\n        } else {\n          results.push(key);\n        }\n      }\n    }\n    return validColors ? undefined : results[0];\n  }\n  getColorTint(colorValue, tintKey, options = {}) {\n    if (_isUndefined(tintKey) || isNaN(tintKey) || _isUndefined(colorValue)) {\n      // console.error('\"Colors.getColorTint\" must accept a color and tintKey params');\n      return colorValue;\n    }\n    const color = colorStringValue(colorValue);\n    if (color === 'transparent') {\n      return color;\n    }\n    const colorKey = _findKey(this, (_value, key) => this[key] === color);\n    if (colorKey) {\n      const colorKeys = [1, 5, 10, 20, 30, 40, 50, 60, 70, 80];\n      const keyIndex = _indexOf(colorKeys, Number(tintKey));\n      const shouldReverseOnDark = !options?.avoidReverseOnDark && this.shouldSupportDarkMode && Scheme.getSchemeType() === 'dark';\n      const key = shouldReverseOnDark ? colorKeys[colorKeys.length - 1 - keyIndex] : tintKey;\n      const requiredColorKey = `${colorKey.slice(0, -2)}${key}`;\n      const requiredColorKey1 = `${colorKey.slice(0, -1)}${key}`;\n      const requiredColor = this[requiredColorKey] || this[requiredColorKey1];\n      if (_isUndefined(requiredColor)) {\n        return this.getTintedColorForDynamicHex(color, tintKey);\n      }\n      return requiredColor;\n    }\n    return this.getTintedColorForDynamicHex(color, tintKey);\n  }\n  getTintedColorForDynamicHex(color, tintKey) {\n    // Handles dynamic colors (non uilib colors)\n    let tintLevel = Math.floor(Number(tintKey) / 10);\n    tintLevel = Math.max(1, tintLevel);\n    tintLevel = Math.min(8, tintLevel);\n    const colorsPalette = this.generateColorPalette(color);\n    return colorsPalette[tintLevel - 1];\n  }\n  generatePalette = _memoize(color => {\n    const hsl = Color(color).hsl();\n    const lightness = Math.round(hsl.color[2]);\n    const lightColorsThreshold = this.shouldGenerateDarkerPalette(color) ? 5 : 0;\n    const ls = [hsl.color[2]];\n    let l = lightness - 10;\n    while (l >= 20 - lightColorsThreshold) {\n      ls.unshift(l);\n      l -= 10;\n    }\n    l = lightness + 10;\n    while (l < 100 - lightColorsThreshold) {\n      ls.push(l);\n      l += 10;\n    }\n    const tints = [];\n    _forEach(ls, e => {\n      const tint = generateColorTint(color, e);\n      tints.push(tint);\n    });\n    const sliced = tints.slice(0, 8);\n    const adjusted = adjustSaturation(sliced, color);\n    return adjusted || sliced;\n  });\n  generateColorPalette = _memoize(color => {\n    const palette = this.generatePalette(color);\n    return this.shouldSupportDarkMode && Scheme.getSchemeType() === 'dark' ? _reverse(palette) : palette;\n  });\n  generateDesignTokens(primaryColor, dark) {\n    let colorPalette = this.generatePalette(primaryColor);\n    if (dark) {\n      colorPalette = _reverse(colorPalette);\n    }\n    const color30 = colorPalette[2];\n    const color50 = colorPalette[4];\n    const color70 = colorPalette[6];\n    const color80 = colorPalette[7];\n    const isPrimaryColorDark = this.isDark(primaryColor);\n    let mainColor = isPrimaryColorDark ? primaryColor : color30;\n    if (dark) {\n      mainColor = isPrimaryColorDark ? color30 : primaryColor;\n    }\n    return {\n      $backgroundPrimaryHeavy: mainColor,\n      $backgroundPrimaryLight: color80,\n      $backgroundPrimaryMedium: color70,\n      $iconPrimary: mainColor,\n      $iconPrimaryLight: color50,\n      $textPrimary: mainColor,\n      $outlinePrimary: mainColor\n    };\n  }\n  shouldGenerateDarkerPalette(color) {\n    const hsl = Color(color).hsl();\n    const hue = hsl.color[0];\n    return _inRange(hue, 51, 184);\n  }\n  isDark(colorValue, darkThreshold = 0.55) {\n    const color = colorValue === null ? undefined : colorStringValue(colorValue);\n    const lum = tinycolor(color).getLuminance();\n    return lum < darkThreshold;\n  }\n  isValidHex(string) {\n    return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(string);\n  }\n  getHexString(color) {\n    return tinycolor(color).toHexString();\n  }\n  getHSL(color) {\n    return tinycolor(color).toHsl();\n  }\n  isTransparent(color) {\n    return color && _toUpper(color) === _toUpper('transparent');\n  }\n  areEqual(colorAValue, colorBValue) {\n    const colorA = colorStringValue(colorAValue);\n    const colorB = colorStringValue(colorBValue);\n    return _toLower(colorA) === _toLower(colorB);\n  }\n  isDesignToken(color) {\n    return !!(color?.semantic || color?.resource_paths);\n  }\n}\nfunction colorStringValue(color) {\n  return color?.toString();\n}\nfunction adjustSaturation(colors, color) {\n  let array;\n  const lightnessLevel = 80;\n  const saturationLevel = 60;\n  const hsl = Color(color).hsl();\n  const lightness = Math.round(hsl.color[2]);\n  if (lightness > lightnessLevel) {\n    const saturation = Math.round(hsl.color[1]);\n    if (saturation > saturationLevel) {\n      array = _map(colors, e => e !== color ? addSaturation(e, saturationLevel) : e);\n    }\n  }\n  return array;\n}\nfunction addSaturation(color, saturation) {\n  const hsl = Color(color).hsl();\n  hsl.color[1] = saturation;\n  return hsl.hex();\n}\nfunction generateColorTint(color, tintLevel) {\n  const hsl = Color(color).hsl();\n  hsl.color[2] = tintLevel;\n  return hsl.hex();\n}\nfunction validateRGB(value) {\n  if (isNaN(value) || value > 255 || value < 0) {\n    throw new Error(`${value} is invalid rgb code, please use number between 0-255`);\n  }\n  return value;\n}\nfunction validateHex(value) {\n  if (!/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(value)) {\n    throw new Error(`${value} is invalid hex color`);\n  }\n  value = value.replace('#', '');\n  if (value.length === 3) {\n    value = threeDigitHexToSix(value);\n  }\n  return value;\n}\nfunction threeDigitHexToSix(value) {\n  return value.replace(/./g, '$&$&');\n}\nconst TypedColors = Colors;\nconst colorObject = new TypedColors();\ncolorObject.loadColors(colorsPalette);\nexport default colorObject;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
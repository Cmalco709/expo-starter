{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/workspaces/expo-starter/App.tsx\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useRef, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar TARGET_SIZE = 100;\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nexport default function App() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    score = _useState2[0],\n    setScore = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    highScore = _useState4[0],\n    setHighScore = _useState4[1];\n  var _useState5 = useState('red'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    color = _useState6[0],\n    setColor = _useState6[1];\n  var _useState7 = useState('red'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    originalColor = _useState8[0],\n    setOriginalColor = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    hasMoved = _useState10[0],\n    setHasMoved = _useState10[1];\n  var _useState11 = useState(0),\n    _useState12 = _slicedToArray(_useState11, 2),\n    elapsedTime = _useState12[0],\n    setElapsedTime = _useState12[1];\n  var SQUARE_SIZE = Math.max(30, 60 - score * 5);\n  var pan = useRef(new Animated.ValueXY({\n    x: 0,\n    y: 0\n  })).current;\n  var timerRef = useRef(null);\n  var adjustColorShade = function adjustColorShade(color, size) {\n    var hue = getHueFromColor(color);\n    var saturation = 70;\n    var lightness = Math.max(30, Math.min(100, 60 + (SQUARE_SIZE - 30) * 0.5));\n    return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\n  };\n  var getHueFromColor = function getHueFromColor(color) {\n    switch (color) {\n      case 'red':\n        return 0;\n      case 'blue':\n        return 240;\n      case 'green':\n        return 120;\n      case 'purple':\n        return 270;\n      case 'orange':\n        return 30;\n      default:\n        return 0;\n    }\n  };\n  var spawnNewSquare = function spawnNewSquare() {\n    var side = Math.floor(Math.random() * 4);\n    var startX = 0,\n      startY = 0;\n    switch (side) {\n      case 0:\n        startX = Math.random() * (width - SQUARE_SIZE);\n        startY = 0;\n        break;\n      case 1:\n        startX = width - SQUARE_SIZE;\n        startY = Math.random() * (height - SQUARE_SIZE);\n        break;\n      case 2:\n        startX = Math.random() * (width - SQUARE_SIZE);\n        startY = height - SQUARE_SIZE;\n        break;\n      case 3:\n        startX = 0;\n        startY = Math.random() * (height - SQUARE_SIZE);\n        break;\n    }\n    var colors = ['red', 'blue', 'green', 'purple', 'orange'];\n    var newColor = colors[Math.floor(Math.random() * colors.length)];\n    setOriginalColor(newColor);\n    setColor(newColor);\n    pan.setValue({\n      x: startX,\n      y: startY\n    });\n  };\n  useEffect(function () {\n    spawnNewSquare();\n    var savedHighScore = localStorage.getItem('highScore');\n    if (savedHighScore) {\n      setHighScore(parseInt(savedHighScore, 10));\n    }\n  }, []);\n  var isOverTarget = function isOverTarget() {\n    var squareX = pan.x.__getValue();\n    var squareY = pan.y.__getValue();\n    var targetX = width / 2 - TARGET_SIZE / 2;\n    var targetY = height / 2 - TARGET_SIZE / 2;\n    return squareX < targetX + TARGET_SIZE && squareX + SQUARE_SIZE > targetX && squareY < targetY + TARGET_SIZE && squareY + SQUARE_SIZE > targetY;\n  };\n  var startTimer = function startTimer() {\n    if (!hasMoved) {\n      setHasMoved(true);\n      timerRef.current = setInterval(function () {\n        setElapsedTime(function (prevTime) {\n          return prevTime + 1;\n        });\n      }, 1000);\n    }\n  };\n  var panResponder = useRef(PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderGrant: function onPanResponderGrant() {\n      pan.setOffset({\n        x: pan.x.__getValue(),\n        y: pan.y.__getValue()\n      });\n      pan.setValue({\n        x: 0,\n        y: 0\n      });\n      startTimer();\n    },\n    onPanResponderMove: Animated.event([null, {\n      dx: pan.x,\n      dy: pan.y\n    }], {\n      useNativeDriver: false\n    }),\n    onPanResponderRelease: function onPanResponderRelease() {\n      pan.flattenOffset();\n      if (isOverTarget()) {\n        setScore(function (prev) {\n          var newScore = prev + 1;\n          if (newScore > highScore) {\n            setHighScore(newScore);\n            localStorage.setItem('highScore', newScore.toString());\n          }\n          return newScore;\n        });\n        spawnNewSquare();\n      }\n    }\n  })).current;\n  useEffect(function () {\n    return function () {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, []);\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: _jsxDEV(View, {\n      style: styles.gameContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.scoreText,\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.highScoreText,\n        children: [\"High Score: \", highScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), \" \", _jsxDEV(Text, {\n        style: styles.timerText,\n        children: [\"Time: \", elapsedTime, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), \" \", _jsxDEV(View, {\n        style: styles.targetSquare\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), _jsxDEV(Animated.View, _objectSpread({\n        style: [styles.draggableSquare, {\n          backgroundColor: adjustColorShade(originalColor, SQUARE_SIZE),\n          width: SQUARE_SIZE,\n          height: SQUARE_SIZE,\n          transform: [{\n            translateX: pan.x\n          }, {\n            translateY: pan.y\n          }]\n        }]\n      }, panResponder.panHandlers), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.instructions,\n        children: \"Drag the colored square to the gray target\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  gameContainer: {\n    flex: 1,\n    position: 'relative'\n  },\n  targetSquare: {\n    position: 'absolute',\n    width: TARGET_SIZE,\n    height: TARGET_SIZE,\n    backgroundColor: 'gray',\n    left: width / 2 - TARGET_SIZE / 2,\n    top: height / 2 - TARGET_SIZE / 2\n  },\n  draggableSquare: {\n    position: 'absolute'\n  },\n  scoreText: {\n    position: 'absolute',\n    top: 40,\n    left: 20,\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  highScoreText: {\n    position: 'absolute',\n    top: 80,\n    left: 20,\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'gold'\n  },\n  timerText: {\n    position: 'absolute',\n    top: 120,\n    left: 20,\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  instructions: {\n    position: 'absolute',\n    bottom: 40,\n    alignSelf: 'center',\n    fontSize: 18,\n    textAlign: 'center',\n    paddingHorizontal: 20\n  }\n});","map":{"version":3,"names":["React","useState","useRef","useEffect","SafeAreaView","Text","View","StyleSheet","Animated","PanResponder","Dimensions","jsxDEV","_jsxDEV","TARGET_SIZE","_Dimensions$get","get","width","height","App","_useState","_useState2","_slicedToArray","score","setScore","_useState3","_useState4","highScore","setHighScore","_useState5","_useState6","color","setColor","_useState7","_useState8","originalColor","setOriginalColor","_useState9","_useState10","hasMoved","setHasMoved","_useState11","_useState12","elapsedTime","setElapsedTime","SQUARE_SIZE","Math","max","pan","ValueXY","x","y","current","timerRef","adjustColorShade","size","hue","getHueFromColor","saturation","lightness","min","spawnNewSquare","side","floor","random","startX","startY","colors","newColor","length","setValue","savedHighScore","localStorage","getItem","parseInt","isOverTarget","squareX","__getValue","squareY","targetX","targetY","startTimer","setInterval","prevTime","panResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","setOffset","onPanResponderMove","event","dx","dy","useNativeDriver","onPanResponderRelease","flattenOffset","prev","newScore","setItem","toString","clearInterval","style","styles","container","children","gameContainer","scoreText","fileName","_jsxFileName","lineNumber","columnNumber","highScoreText","timerText","targetSquare","_objectSpread","draggableSquare","backgroundColor","transform","translateX","translateY","panHandlers","instructions","flex","position","left","top","fontSize","fontWeight","bottom","alignSelf","textAlign","paddingHorizontal"],"sources":["/workspaces/expo-starter/App.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport {\n  SafeAreaView,\n  Text,\n  View,\n  StyleSheet,\n  Animated,\n  PanResponder,\n  Dimensions\n} from 'react-native';\n\nconst TARGET_SIZE = 100;\nconst { width, height } = Dimensions.get('window');\n\nexport default function App() {\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0); // State for high score\n  const [color, setColor] = useState('red');\n  const [originalColor, setOriginalColor] = useState('red');\n  const [hasMoved, setHasMoved] = useState(false); // Track if the square has been moved\n  const [elapsedTime, setElapsedTime] = useState(0); // Track elapsed time\n\n  // Dynamically calculate the square size based on the score\n  const SQUARE_SIZE = Math.max(30, 60 - score * 5); // Makes the square smaller as the score increases, with a minimum size of 30.\n\n  const pan = useRef(new Animated.ValueXY({ x: 0, y: 0 })).current;\n  const timerRef = useRef(null);\n\n  // Function to adjust the shade of the color based on the size of the square\n  const adjustColorShade = (color, size) => {\n    const hue = getHueFromColor(color);\n    const saturation = 70; // Keeping saturation fixed\n    const lightness = Math.max(30, Math.min(100, 60 + (SQUARE_SIZE - 30) * 0.5)); // Lighter when bigger, darker when smaller\n    return `hsl(${hue}, ${saturation}%, ${lightness}%)`;\n  };\n\n  // Extract hue from color (assuming it's a simple color name or hex value)\n  const getHueFromColor = (color) => {\n    switch(color) {\n      case 'red': return 0;\n      case 'blue': return 240;\n      case 'green': return 120;\n      case 'purple': return 270;\n      case 'orange': return 30;\n      default: return 0;\n    }\n  };\n\n  // Create a new colored square at a random position along the edge\n  const spawnNewSquare = () => {\n    const side = Math.floor(Math.random() * 4);\n    let startX = 0, startY = 0;\n\n    switch (side) {\n      case 0: // top\n        startX = Math.random() * (width - SQUARE_SIZE);\n        startY = 0;\n        break;\n      case 1: // right\n        startX = width - SQUARE_SIZE;\n        startY = Math.random() * (height - SQUARE_SIZE);\n        break;\n      case 2: // bottom\n        startX = Math.random() * (width - SQUARE_SIZE);\n        startY = height - SQUARE_SIZE;\n        break;\n      case 3: // left\n        startX = 0;\n        startY = Math.random() * (height - SQUARE_SIZE);\n        break;\n    }\n\n    const colors = ['red', 'blue', 'green', 'purple', 'orange'];\n    const newColor = colors[Math.floor(Math.random() * colors.length)];\n    setOriginalColor(newColor);  // Store the original color\n    setColor(newColor);\n\n    pan.setValue({ x: startX, y: startY });\n  };\n\n  useEffect(() => {\n    spawnNewSquare();\n    // Retrieve high score from local storage on component mount\n    const savedHighScore = localStorage.getItem('highScore');\n    if (savedHighScore) {\n      setHighScore(parseInt(savedHighScore, 10));\n    }\n  }, []);\n\n  const isOverTarget = () => {\n    const squareX = pan.x.__getValue();\n    const squareY = pan.y.__getValue();\n\n    const targetX = width / 2 - TARGET_SIZE / 2;\n    const targetY = height / 2 - TARGET_SIZE / 2;\n\n    return (\n      squareX < targetX + TARGET_SIZE &&\n      squareX + SQUARE_SIZE > targetX &&\n      squareY < targetY + TARGET_SIZE &&\n      squareY + SQUARE_SIZE > targetY\n    );\n  };\n\n  const startTimer = () => {\n    if (!hasMoved) {\n      setHasMoved(true); // Set hasMoved to true when the square is first moved\n      timerRef.current = setInterval(() => {\n        setElapsedTime((prevTime) => prevTime + 1); // Increment the time every second\n      }, 1000);\n    }\n  };\n\n  const panResponder = useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderGrant: () => {\n        pan.setOffset({\n          x: pan.x.__getValue(),\n          y: pan.y.__getValue()\n        });\n        pan.setValue({ x: 0, y: 0 });\n        startTimer(); // Start the timer once the square is moved\n      },\n      onPanResponderMove: Animated.event([null, { dx: pan.x, dy: pan.y }], {\n        useNativeDriver: false\n      }),\n      onPanResponderRelease: () => {\n        pan.flattenOffset();\n        if (isOverTarget()) {\n          setScore((prev) => {\n            const newScore = prev + 1;\n            if (newScore > highScore) {\n              setHighScore(newScore); // Update high score if necessary\n              localStorage.setItem('highScore', newScore.toString()); // Save the high score\n            }\n            return newScore;\n          });\n          spawnNewSquare();\n        }\n      }\n    })\n  ).current;\n\n  useEffect(() => {\n    // Clean up the timer when the component unmounts or if the game resets\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, []);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.gameContainer}>\n        <Text style={styles.scoreText}>Score: {score}</Text>\n        <Text style={styles.highScoreText}>High Score: {highScore}</Text> {/* Display High Score */}\n        <Text style={styles.timerText}>Time: {elapsedTime} seconds</Text> {/* Display the elapsed time */}\n\n        {/* Target Square (Gray) */}\n        <View style={styles.targetSquare} />\n\n        {/* Draggable Square (Colored) */}\n        <Animated.View\n          style={[\n            styles.draggableSquare,\n            {\n              backgroundColor: adjustColorShade(originalColor, SQUARE_SIZE),  // Adjust the color shade based on size\n              width: SQUARE_SIZE,\n              height: SQUARE_SIZE,\n              transform: [\n                { translateX: pan.x },\n                { translateY: pan.y }\n              ]\n            }\n          ]}\n          {...panResponder.panHandlers}\n        />\n\n        <Text style={styles.instructions}>Drag the colored square to the gray target</Text>\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  gameContainer: {\n    flex: 1,\n    position: 'relative'\n  },\n  targetSquare: {\n    position: 'absolute',\n    width: TARGET_SIZE,\n    height: TARGET_SIZE,\n    backgroundColor: 'gray',\n    left: width / 2 - TARGET_SIZE / 2,\n    top: height / 2 - TARGET_SIZE / 2\n  },\n  draggableSquare: {\n    position: 'absolute'\n  },\n  scoreText: {\n    position: 'absolute',\n    top: 40,\n    left: 20,\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  highScoreText: {\n    position: 'absolute',\n    top: 80,\n    left: 20,\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'gold'\n  },\n  timerText: {\n    position: 'absolute',\n    top: 120,\n    left: 20,\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  instructions: {\n    position: 'absolute',\n    bottom: 40,\n    alignSelf: 'center',\n    fontSize: 18,\n    textAlign: 'center',\n    paddingHorizontal: 20\n  }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}